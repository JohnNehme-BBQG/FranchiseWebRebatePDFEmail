<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/4/2020 3:09:03 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="HQVSMDM-05P"
  DTS:CreatorName="GALORE\john.nehme"
  DTS:DTSID="{23C1B86B-1D5C-4C8F-9B28-0DDF3721A805}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="3081"
  DTS:ObjectName="SendFranchiseRebateReports"
  DTS:PackageType="5"
  DTS:VersionBuild="255"
  DTS:VersionGUID="{A3F3753F-BC12-4362-93DF-381BEF8E8C15}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{10DD5175-6E49-41DC-B651-5634D9C83F78}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IncrementValue">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9910CC2E-3F50-44C8-A4B6-CFECF71EBE76}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowNo">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C7A9C295-84B2-4320-BC60-41497EE52A96}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varExtDocNo">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{59C94F20-8CD2-41F5-9E02-E6D7B958ADDA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varExtDocNoSelector">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CBBF75D2-CF91-4E16-AB4F-11D410C39C8B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varExtHeaderNo">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F0C680A9-F443-466E-B720-452DF67B541D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSQLObjectOutput">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB902B5C-05D7-44F3-ADA8-095B75C68375}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varXMLData">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD8C013C-3A62-4461-B43C-0419490D5882}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varXMLtoHTML">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E51AF7E2-BBD6-4AF7-BA34-D3DF85070997}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
          SQLTask:SqlStatementSource="select distinct(r.[ExternalDocumentNo])&#xA;from [Nav_Processes].[Reports].[FranchiseRebate] r&#xA;where r.[Status]='paid'"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::varExtHeaderNo" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{D5887234-A678-40F6-A231-CB2EEC196E2D}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{9BF8EC43-8AC7-4769-9C68-50203E517996}"
        DTS:ObjectName="{9BF8EC43-8AC7-4769-9C68-50203E517996}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::varExtHeaderNo" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{d6100517-9580-403a-bf2b-acfaa11d9ae4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="select count(distinct(r.[No_])) from [Nav_Processes].[Reports].[FranchiseRebate] r where r.[Status]='paid';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Get the Paid PSIs to create report and save as PDF"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{d43a4ce6-eb73-4bf9-9979-533139a1e4aa}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get the Paid PSIs to create report and save as PDF"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="1" />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"select t.*
from(
select c.[E-Mail] as [FranchiseeEmail]
 ,o.[E-Mail] as [CustomerEmail],c.[Name],c.[Address],c.[Address 2],c.[City],c.[County] as [State],c.[Post Code] as [PostCode],r.*

from [Nav_Processes].[Reports].[FranchiseRebate] r

left
join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] c
on  r.[Franchisee]=c.[No_]

left
join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] o
on  r.[SelltoCustNo]=o.[No_] 

where r.[Status]='paid'
and r.[ExternalDocumentNo]='" +
 (DT_WSTR,20)@[User::varExtDocNoSelector] + "'
) t 
FOR XML auto, elements,type,root('Rebates') OPTION (FAST 100)"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="select t.*&#xA;from(&#xA;select c.[E-Mail] as [FranchiseeEmail]&#xA; ,o.[E-Mail] as [CustomerEmail],c.[Name],c.[Address],c.[Address 2],c.[City],c.[County] as [State],c.[Post Code] as [PostCode],r.*&#xA;&#xA;from [Nav_Processes].[Reports].[FranchiseRebate] r&#xA;&#xA;left&#xA;join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] c&#xA;on  r.[Franchisee]=c.[No_]&#xA;&#xA;left&#xA;join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] o&#xA;on  r.[SelltoCustNo]=o.[No_] &#xA;&#xA;where r.[Status]='paid'&#xA;and r.[ExternalDocumentNo]='0'&#xA;) t &#xA;FOR XML auto, elements,type,root('Rebates') OPTION (FAST 100)"
              SQLTask:ResultType="ResultSetType_XML" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::varXMLData" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varExtDocNoSelector"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="20" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Get Web_ebay_Order_Tender_Import data"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1F2E730C-85C6-49DB-B1D9-65C17C740CC3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Web_ebay_Order_Tender_Import data"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"select  tender.[Line No_] as [LineNo],tender.[Header Entry No_] as [HeaderEntryNo],tender.[Source]
		,tender.[Web_eBay Order No_] as [WebEbayOrderNo],tender.[Tender Type] as [TenderType]
		,tender.[Tender Value Text] as TenderValueText,tender.[Tender Amount] as [TenderAmount]
from(
select	t.*
from	[BBQG_Prod_Replica].[dbo].[Barbeques Galore$Web_eBay Order Tender Import] t
where	t.[Web_eBay Order No_] = '" + @[User::varExtDocNo]  + "'

)tender
FOR XML AUTO, elements, type, root('tender_types')"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="select  tender.[Line No_] as [LineNo],tender.[Header Entry No_] as [HeaderEntryNo],tender.[Source]&#xA;&#x9;&#x9;,tender.[Web_eBay Order No_] as [WebEbayOrderNo],tender.[Tender Type] as [TenderType]&#xA;&#x9;&#x9;,tender.[Tender Value Text] as TenderValueText,tender.[Tender Amount] as [TenderAmount]&#xA;from(&#xA;select&#x9;t.*&#xA;from&#x9;[BBQG_Prod_Replica].[dbo].[Barbeques Galore$Web_eBay Order Tender Import] t&#xA;where&#x9;t.[Web_eBay Order No_] = '0'&#xA;&#xA;)tender&#xA;FOR XML AUTO, elements, type, root('tender_types')"
              SQLTask:ResultType="ResultSetType_XML" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Reformat results in HTML"
          DTS:CreationName="Microsoft.XMLTask"
          DTS:Description="XML Task"
          DTS:DTSID="{f82d33c6-ccdb-42eb-b7b1-786fbc3297ad}"
          DTS:ExecutableType="Microsoft.XMLTask"
          DTS:LocaleID="-1"
          DTS:MaxErrorCount="0"
          DTS:ObjectName="Reformat results in HTML"
          DTS:TaskContact="XML Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <XMLTaskData
              OperationType="XSLT"
              SourceType="Variable"
              Source="User::varXMLData"
              SecondOperandType="FileConnection"
              SecondOperand="FranchiseWebRebate2.xsl"
              SaveOperationResult="True"
              DestinationType="Variable"
              Destination="User::varXMLtoHTML"
              OverwriteDestination="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Save as PDF"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{ab6b3abe-3dce-40e4-87d6-e6ed480d062d}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Save as PDF"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_3b334352043c4349b05a56b77774f5af"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::varXMLData,User::varXMLtoHTML">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_3b334352043c4349b05a56b77774f5af.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F6F4DE24-F16A-4F74-8779-D3B33A0D952D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9cc8d0f14b674405b27a55378d8433cf</RootNamespace>
    <AssemblyName>ST_3b334352043c4349b05a56b77774f5af</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="HtmlRenderer">
      <HintPath>C:\TEMP\libraries\HtmlRenderer.dll</HintPath>
    </Reference>
    <Reference Include="HtmlRenderer.PdfSharp">
      <HintPath>C:\TEMP\libraries\HtmlRenderer.PdfSharp.dll</HintPath>
    </Reference>
    <Reference Include="PdfSharp">
      <HintPath>C:\TEMP\libraries\PdfSharp.dll</HintPath>
    </Reference>
    <Reference Include="PdfSharp.Charting">
      <HintPath>C:\TEMP\libraries\PdfSharp.Charting.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Connected Services\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using PdfSharp;
using PdfSharp.Charting;
using TheArtOfDev.HtmlRenderer;
using TheArtOfDev.HtmlRenderer.PdfSharp;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using PdfSharp.Pdf;
using System.Xml.Linq;
using System.Collections.Generic;
using System.Linq;
#endregion

namespace ST_9cc8d0f14b674405b27a55378d8433cf
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>


        static ScriptMain()
        {
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
        }
        static System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            //Set up a sting package paramter in the SSIS solution. Assign it to a readonly variable, use it to populate the string 'path'.
            //This will enable you to determine on the deployed solution where it needs to pickup the .dll's from, and can be separate from where the debug is picking them up from.
            string path = @"C:\TEMP\libraries\";
            if (args.Name.Contains("HtmlRenderer.PdfSharp"))
            { return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "HtmlRenderer.PdfSharp.dll")); }
            if (args.Name.Contains("HtmlRenderer"))
            {
                return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "HtmlRenderer.dll"));
            }
            if (args.Name.Contains("PdfSharp.Charting"))
            { return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "PdfSharp.Charting.dll")); }
            if (args.Name.Contains("PdfSharp"))
            { return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "PdfSharp.dll")); }

            return null;
        }

        public void Main()
        {
            // TODO: Add your code here
            string filename = (string)Dts.Variables["User::varXMLData"].Value;
            //MessageBox.Show(filename);

            XElement rebatedata = XElement.Parse(filename);

            List<XElement> tnodes = rebatedata.Elements("t").ToList();
            //MessageBox.Show((string)tnodes[0]);

            string ExtDocNo = tnodes[0].Element("ExternalDocumentNo").Value.ToString();
            string varhtml = (string) Dts.Variables["User::varXMLtoHTML"].Value;
            var config = new PdfGenerateConfig();
            config.PageOrientation = PageOrientation.Landscape;
            config.PageSize = PageSize.A4;
            PdfDocument pdf = PdfGenerator.GeneratePdf(varhtml, config);
            pdf.Save(@"C:\FranchiseRebate\PDF\FranchiseOnlineSalesRebate_" + ExtDocNo+".pdf");
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_3b334352043c4349b05a56b77774f5af</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_3b334352043c4349b05a56b77774f5af</msb:DisplayName>
    <msb:ProjectId>{64A15A73-1D2A-4F55-9E3B-5797E2FE4531}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_3b334352043c4349b05a56b77774f5af.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Settings.get_Default():ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Sett" +
    "ings")]

namespace ST_9cc8d0f14b674405b27a55378d8433cf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9cc8d0f14b674405b27a55378d8433cf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9cc8d0f14b674405b27a55378d8433cf")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9cc8d0f14b674405b27a55378d8433cf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_3b334352043c4349b05a56b77774f5af.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFif9V4AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAArjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFw1AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
NQAAAAAAAEgAAAACAAUAMCIAAHQSAAABAAAAAAAAAKQ0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAF4oEAAAChT+BgIAAAZzEQAACm8SAAAKKhMwAgCUAAAAAQAA
EXIBAABwCgNvEwAACnInAABwbxQAAAosEQZyUwAAcCgVAAAKKBYAAAoqA28TAAAKcocAAHBvFAAA
CiwRBnKhAABwKBUAAAooFgAACioDbxMAAApywwAAcG8UAAAKLBEGcucAAHAoFQAACigWAAAKKgNv
EwAACnITAQBwbxQAAAosEQZyJQEAcCgVAAAKKBYAAAoqFCoTMAUAtgAAAAIAABECKBcAAApvGAAA
CnI/AQBwbxkAAApvGgAACnQdAAABKBsAAApyYQEAcCgcAAAKbx0AAAooAQAAKxZvHwAACnJlAQBw
KBwAAApvIAAACm8hAAAKbyIAAAoKAigXAAAKbxgAAApyiwEAcG8ZAAAKbxoAAAp0HQAAAXMjAAAK
CwcXbyQAAAoHG28lAAAKBxQUFCgmAAAKcrEBAHAGchcCAHAoJwAACm8oAAAKAigXAAAKFm8pAAAK
Kh4CKCoAAAoqHgIoKwAACiqufgEAAAQtHnIhAgBw0AMAAAIoLAAACm8tAAAKcy4AAAqAAQAABH4B
AAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigvAAAKKi5zCgAABoADAAAEKkJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAEgFAAAjfgAAtAUAAAAIAAAjU3RyaW5ncwAAAAC0DQAA
lAIAACNVUwBIEAAAEAAAACNHVUlEAAAAWBAAABwCAAAjQmxvYgAAAAAAAAACAAABVx2iCQkLAAAA
+gEzABYAAAEAAAAxAAAABQAAAAYAAAALAAAAAwAAAC8AAAACAAAAEAAAAAIAAAACAAAAAwAAAAQA
AAABAAAAAQAAAAkAAAABAAAAAQAAAAEAAAAAALkEAQAAAAAABgCtAjcGBgA8AzcGBgD5ASQGDwCr
BgAABgAmAmcFBgCQAmcFBgBxAmcFBgAjA2cFBgDNAmcFBgDmAmcFBgA9AmcFBgBYAiEECgABA2gE
CgByAWgEBgD1B2cFBgCnB+oEBgBaB+oEDgAPBIUFBgDxBOoEBgDcASQGBgDOBVcGBgB5BVIFEgCs
AaMEEgANAqMEEgCOASkFBgDBATcGBgANBeoEBgDeBeoEBgA9BOoEBgBEBC4ACgCRBGgEFgAUB+sA
FgCbAOsAGgDVB6cFGgDcAKcFGgDyBacFBgABAHAAHgCkALcFBgAeAHAAIgBCBZ4FIgClA54FDgAK
BoUFIgDeB/YDJgBfACQBBgAPAOoEJgA+B7oGJgAnB7oGBgATAeoEBgCvAOoEAAAAACUAAAAAAAEA
AQABAAAAAgXSAzkAAQABAAAAEABeBuEGQQABAAUAAAEQAB4H4QZlAAMACQADAQAAiQcAAE0ABAAM
ABEA9gQYAREAYgEcAREAiwAgAQYGVwAkAVaAeQcnAVaAQgEnAVAgAAAAAJEYHQYrAQEAaCAAAAAA
kQCDAy8BAQAIIQAAAACGAAgFBgADAMohAAAAAIYYFwYGAAMA0iEAAAAAgxgXBgYAAwDaIQAAAACT
CMoFNwEDAAYiAAAAAJMISgE8AQMADSIAAAAAkwhWAUEBAwAVIgAAAACWCLoHRwEEABwiAAAAAIYY
FwYGAAQAJCIAAAAAkRgdBisBBAAAAAEAwwUAAAIAawcAAAEAZAMJABcGAQARABcGBgAZABcGCgAp
ABcGEAAxABcGEAA5ABcGEABBABcGEABJABcGEABRABcGEABZABcGEABhABcGEABpABcGBgChABcG
BgDBABcGFQDRABcGBgDZABcFGwDhABcGIADZAG8DJgCJAOIAMADpAHAHNADxAAsBOQB5ANMAPwBx
AIEHSwD5ABAHUAABAeEEVgAJAVoDXQARAaYBYQAZAa4HaAAhAZcHbwAxAeoHfQAMAOEEngAhAdYH
pAARAVoDMACBADsEMACRABcGBgCRAD4FrQCRAKEDtABRAQMEuwDpAKAH1wBZAWoDEAD5AMYHAQBx
ABcGBgCBABcGBgCBAcEA3gCBAfEH5wCpABcG7ADJABcGBgAIABQADgEIABgAEwEpAHMAgwEuAAsA
WwEuABMAZAEuABsAgwEuACMAjAEuACsAtQEuADMAtQEuADsAtQEuAEMAjAEuAEsAuwEuAFMAtQEu
AFsA0gFDAGMAEwFJAHMAgwFhAHsAEwFjAGsAEwEsAEUAAwABAAQAAwAAAM4FTAEAAGoBUQEAAL4H
VgECAAYAAwACAAcABQABAAgABQACAAkABwCVAASAAAABAAAAOh27eAAAAAAAAK4DAAAEAAAAAAAA
AAAAAADzAGcAAAAAAA4AAAAAAAAAAAAAAPwASQQAAAAAAQAFAAAABgAAAAAAAACRBQAAAAAEAAAA
AAAAAAAAAADzAOoEAAAAAA4AAAAAAAAAAAAAAPwAOAAAAAAABAAAAAAAAAAAAAAA8wCnBQAAAAAE
AAAAAAAAAAAAAADzABgBAAAAAAEAIADxCwAAAAAAAAUBngUAAAAAAQAFAAAABQAAAAAAAAD9BQAA
AAAAAAAAAQAAAGgGAAAFAAIAPQCPAAAAAElFbnVtZXJhYmxlYDEARXZlbnRIYW5kbGVyYDEATGlz
dGAxADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFs
dWVfXwBDc3NEYXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAGRlZmF1bHRJ
bnN0YW5jZQBWYXJpYWJsZQBFbnVtZXJhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAExvYWRGaWxlAFhOYW1lAGdldF9OYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAQ29tYmluZQBUeXBlAFN5c3RlbS5Db3JlAFRoZUFydE9mRGV2Lkh0bWxSZW5kZXJlci5D
b3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBQYXJzZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFNhdmUAYWRkX0Fzc2Vt
Ymx5UmVzb2x2ZQBDdXJyZW50RG9tYWluX0Fzc2VtYmx5UmVzb2x2ZQBzZXRfUGFnZVNpemUAU1Rf
M2IzMzQzNTIwNDNjNDM0OWIwNWE1NmI3Nzc3NGY1YWYAU1RfOWNjOGQwZjE0YjY3NDQwNWIyN2E1
NTM3OGQ4NDMzY2YAUGRmU2hhcnAuUGRmAEdlbmVyYXRlUGRmAFBkZkdlbmVyYXRlQ29uZmlnAFN5
c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAUGF0aABNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3Jp
cHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfM2IzMzQzNTIwNDNjNDM0OWIw
NWE1NmI3Nzc3NGY1YWYuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AQXBwRG9tYWluAGdldF9DdXJyZW50RG9tYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAHNl
dF9QYWdlT3JpZW50YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24A
Q3VsdHVyZUluZm8AVGhlQXJ0T2ZEZXYuSHRtbFJlbmRlcmVyLlBkZlNoYXJwAFN5c3RlbS5YbWwu
TGlucQBTeXN0ZW0uTGlucQBzZW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBSZXNvbHZlRXZlbnRI
YW5kbGVyAFhDb250YWluZXIASHRtbFJlbmRlcmVyAFBkZkdlbmVyYXRvcgAuY3RvcgAuY2N0b3IA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTVF85Y2M4ZDBmMTRiNjc0NDA1YjI3YTU1Mzc4ZDg0MzNjZi5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAVGhlQXJ0T2ZEZXYuSHRtbFJlbmRl
cmVyLkNvcmUuRW50aXRpZXMAU1RfOWNjOGQwZjE0YjY3NDQwNWIyN2E1NTM3OGQ4NDMzY2YuUHJv
cGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAEh0bWxJbWFnZUxvYWRFdmVudEFyZ3MASHRt
bFN0eWxlc2hlZXRMb2FkRXZlbnRBcmdzAFJlc29sdmVFdmVudEFyZ3MAYXJncwBDb250YWlucwBT
dWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBFbGVtZW50cwBDb25jYXQAT2JqZWN0AG9wX0lt
cGxpY2l0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFhFbGVtZW50AFBkZkRvY3VtZW50AFRv
TGlzdABnZXRfQXNzZW1ibHkAAAAAJUMAOgBcAFQARQBNAFAAXABsAGkAYgByAGEAcgBpAGUAcwBc
AAArSAB0AG0AbABSAGUAbgBkAGUAcgBlAHIALgBQAGQAZgBTAGgAYQByAHAAADNIAHQAbQBsAFIA
ZQBuAGQAZQByAGUAcgAuAFAAZABmAFMAaABhAHIAcAAuAGQAbABsAAAZSAB0AG0AbABSAGUAbgBk
AGUAcgBlAHIAACFIAHQAbQBsAFIAZQBuAGQAZQByAGUAcgAuAGQAbABsAAAjUABkAGYAUwBoAGEA
cgBwAC4AQwBoAGEAcgB0AGkAbgBnAAArUABkAGYAUwBoAGEAcgBwAC4AQwBoAGEAcgB0AGkAbgBn
AC4AZABsAGwAABFQAGQAZgBTAGgAYQByAHAAABlQAGQAZgBTAGgAYQByAHAALgBkAGwAbAAAIVUA
cwBlAHIAOgA6AHYAYQByAFgATQBMAEQAYQB0AGEAAAN0AAAlRQB4AHQAZQByAG4AYQBsAEQAbwBj
AHUAbQBlAG4AdABOAG8AACVVAHMAZQByADoAOgB2AGEAcgBYAE0ATAB0AG8ASABUAE0ATAAAZUMA
OgBcAEYAcgBhAG4AYwBoAGkAcwBlAFIAZQBiAGEAdABlAFwAUABEAEYAXABGAHIAYQBuAGMAaABp
AHMAZQBPAG4AbABpAG4AZQBTAGEAbABlAHMAUgBlAGIAYQB0AGUAXwAACS4AcABkAGYAAHFTAFQA
XwA5AGMAYwA4AGQAMABmADEANABiADYANwA0ADQAMAA1AGIAMgA3AGEANQA1ADMANwA4AGQAOAA0
ADMAMwBjAGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAADYnZ9a
J54jTLkiASX29z9jAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdBAAAEm0FIAIBHBgFIAEBEnED
BwEOAyAADgQgAQIOBQACDg4OBQABEj0OBQcCDhJJBCAAEn0FIAASgIEGIAESgIUcAyAAHAYAARKA
iQ4GAAESgI0ODSABFRKAlQESgIkSgI0REAEBFRKAnQEeABUSgJUBHgAFCgESgIkIFRKAnQESgIkF
IAETAAgIIAESgIkSgI0GIAEBEYChBiABARGApRsABRKArQ4SSRKAsRUSgLUBEoC5FRKAtQESgL0G
AAMODg4OCAABEoDBEYDFBCAAEj0GIAIBDhI9CLd6XFYZNOCJCImEXc2AgMyRCPlGFaoEJPnrBAAA
AAAEAQAAAAMGElUDBhJZAwYSEAIGCAMGERQDAAABBwACEj0cEkUEAAASVQQAABJZBQABARJZBAAA
EhAECAASVQQIABJZBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUXzljYzhkMGYxNGI2NzQ0MDViMjdhNTUzNzhkODQzM2NmAAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41tAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAIQ1AAAA
AAAAAAAAAJ41AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQNQAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQC7eDodAAABALt4Oh0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADkAYwBjADgAZAAwAGYAMQA0AGIANgA3ADQANAAwADUAYgAyADcAYQA1ADUAMwA3ADgA
ZAA4ADQAMwAzAGMAZgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADQAOAAyAC4AMwAwADkAMAA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADMAYgAzADMANAAzADUAMgAwADQAMwBjADQAMwA0ADkAYgAwADUAYQA1ADYAYgA3ADcANwA3
ADQAZgA1AGEAZgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AMwBiADMAMwA0ADMANQAyADAANAAzAGMANAAzADQAOQBiADAANQBhADUANgBi
ADcANwA3ADcANABmADUAYQBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADkAYwBjADgAZAAwAGYAMQA0AGIANgA3ADQANAAwADUAYgAyADcAYQA1ADUAMwA3
ADgAZAA4ADQAMwAzAGMAZgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwA0ADgAMgAuADMAMAA5ADAANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwA0ADgAMgAuADMAMAA5ADAANwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACwNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{8f597c5e-e707-4951-a553-d06a3092b4d1}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_68d0de944c66430a8c7c923a24b7806b"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::varExtDocNo,User::varXMLData">
              <ProjectItem
                Name="ST_68d0de944c66430a8c7c923a24b7806b.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7D197C9C-A141-4A6D-9939-DA34A63D4A52}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_76b3e1af688a4affb9322c49b9d1158e</RootNamespace>
    <AssemblyName>ST_68d0de944c66430a8c7c923a24b7806b</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Docentric.Documents">
      <HintPath>\\VM-ARIES\S_Drive\John Nehme\Docentric\Toolkit\Example Browser\bin\Docentric.Documents.dll</HintPath>
    </Reference>
    <Reference Include="Docentric.Examples.Data">
      <HintPath>\\VM-ARIES\S_Drive\John Nehme\Docentric\Toolkit\Example Browser\bin\Docentric.Examples.Data.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="System.Xml.Linq">
      <Version>3.5.21022.801</Version>
    </PackageReference>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Settings.get_Default():ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Sett" +
    "ings")]

namespace ST_76b3e1af688a4affb9322c49b9d1158e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Docentric.Documents;
using Docentric.Documents.Reporting;
using System.Xml.Linq;
using System.Linq;
using System.Collections.Generic;


#endregion

namespace ST_76b3e1af688a4affb9322c49b9d1158e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.S
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{

            string s = (string)Dts.Variables["User::varXMLData"].Value;
            
            XElement rebatedata = XElement.Parse(s);
            List<XElement> tnodes = rebatedata.Elements("t").ToList();
            string ExtDocNo = tnodes[0].Element("ExternalDocumentNo").Value.ToString();
            
            string s1 = s.Replace("<ROOT>", "");
            string s2 = s1.Replace("</ROOT>", "");
            Dts.Variables["User::varXMLData"].Value = s2;
            Dts.Variables["User::ExtDocNo"].Value = ExtDocNo;

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_68d0de944c66430a8c7c923a24b7806b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_68d0de944c66430a8c7c923a24b7806b</msb:DisplayName>
    <msb:ProjectId>{32011163-D47C-4E77-BCE5-60C6821DA0BF}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_68d0de944c66430a8c7c923a24b7806b.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_76b3e1af688a4affb9322c49b9d1158e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_76b3e1af688a4affb9322c49b9d1158e")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_76b3e1af688a4affb9322c49b9d1158e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_68d0de944c66430a8c7c923a24b7806b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAN0g/F4AAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAHjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMwvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
MAAAAAAAAEgAAAACAAUAdCEAAKANAAABAAAAAAAAABQvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwCvAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdBsAAAElKBQAAApyIwAAcCgVAAAKbxYAAAooAQAAKxZvGAAACnInAABwKBUAAApvGQAACm8a
AAAKbxsAAAoKck0AAHByWwAAcG8cAAAKcl0AAHByWwAAcG8cAAAKCwIoEAAACm8RAAAKcgEAAHBv
EgAACgdvHQAACgIoEAAACm8RAAAKcm0AAHBvEgAACgZvHQAACioeAigeAAAKKh4CKB8AAAoqrn4B
AAAELR5yiwAAcNADAAACKCAAAApvIQAACnMiAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoa
fgMAAAQqHgIoIwAACioucwgAAAaAAwAABCoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAABMBAAAI34AALgEAAAkBgAAI1N0cmluZ3MAAAAA3AoAAAABAAAjVVMA3AsAABAAAAAj
R1VJRAAAAOwLAAC0AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPoBMwAWAAABAAAAJAAAAAUA
AAAGAAAACQAAAAEAAAAjAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAEAAAAGAAAAAQAA
AAEAAAABAAAAAAD+AwEAAAAAAAYApAL1BAYAMwP1BAYA8AHiBA8AaQUAAAYAHQJ8BAYAhwJ8BAYA
aAJ8BAYAGgN8BAYAxAJ8BAYA3QJ8BAYANAJ8BAYATwJrAwoA+AKtAwoAaQGtAwYANgQvBAYA0wHi
BAYA5QUvBAYAugQVBQYAjgRnBA4AowHoAw4ABALoAw4AhQFSBAYAuAH1BAoA1gOtAxIAqwUIARIA
ygAIAQYAhwMvBBYABAaaBBYAAgGaBBYAygSaBAYAAQBzABoA0wCqBAYADwBzAAYAKAEvBAYA3gAv
BAYAGAZ8BAAAAAAWAAAAAAABAAEAAQAQAEcEjgA5AAEAAQAAABAAHAV4BUUAAQADAAABEAC1BXgF
WQADAAcAAwEAAM4FAAA9AAQACgARADsEuAARAFkBvAARALoAwAAGBj4AxABWgL4FxwBWgDkBxwBQ
IAAAAACGAE0EBgABAAshAAAAAIYY1QQGAAEAEyEAAAAAgxjVBAYAAQAbIQAAAACTCLYEywABAEch
AAAAAJMIQQHQAAEATiEAAAAAkwhNAdUAAQBWIQAAAACWCPgF2wACAF0hAAAAAIYY1QQGAAIAZSEA
AAAAkRjbBOAAAgAAAAEAZQMJANUEAQARANUEBgAZANUECgApANUEEAAxANUEEAA5ANUEEABBANUE
EABJANUEEABRANUEEABZANUEEABhANUEEABpANUEBgCBANUEBgCpANUEFQC5ANUEBgBxAMYFIADB
AKcFJQDJACYEKgDRAFEDMADhAJ0BNADpAOwFOgDxANwFQAABAQ0GSwAMACYEaQDxAAUGbwDhAFED
dgCJAIUDdgDZALIAegDRAFsDgABxANUEBgCJANUEBgARAfAAhQARARQGjgCRANUElACxANUEBgAI
ABQArgAIABgAswApAHMAGwEuAAsA8wAuABMA/AAuABsAGwEuACMAJAEuACsATQEuADMATQEuADsA
TQEuAEMAJAEuAEsAUwEuAFMATQEuAFsAagFDAGMAswBJAHMAGwFhAHsAswBjAGsAswAbAAMAAQAE
AAMAAAC6BOQAAABhAekAAAD8Be4AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAYQAEgAAAAQAAAD8d
vm0AAAAAAABGAAAABAAAAAAAAAAAAAAAnABqAAAAAAAOAAAAAAAAAAAAAAClAI4DAAAAAAQAAAAA
AAAAAAAAAJwALwQAAAAADgAAAAAAAAAAAAAApQAfAAAAAAAEAAAAAAAAAAAAAACcAJoEAAAAAAQA
AAAAAAAAAAAAAJwALQEAAAAAAAAAAAEAAAAmBQAABQACAC8AXAAAAABJRW51bWVyYWJsZWAxAExp
c3RgMQA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTVF82
OGQwZGU5NDRjNjY0MzBhOGM3YzkyM2EyNGI3ODA2YgBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlv
bnMuR2VuZXJpYwBTVF83NmIzZTFhZjY4OGE0YWZmYjkzMjJjNDliOWQxMTU4ZQBSZXBsYWNlAGRl
ZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBFbnVtZXJhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAFhOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBT
eXN0ZW0uQ29yZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVy
ZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUGFy
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3Jp
cHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNjhkMGRlOTQ0YzY2NDMwYThj
N2M5MjNhMjRiNzgwNmIuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24AQ3VsdHVyZUluZm8AU3lzdGVtLlhtbC5MaW5xAFN5c3RlbS5MaW5xAGdldF9SZXNv
dXJjZU1hbmFnZXIAWENvbnRhaW5lcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF83NmIzZTFh
ZjY4OGE0YWZmYjkzMjJjNDliOWQxMTU4ZS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
RGVidWdnaW5nTW9kZXMAU1RfNzZiM2UxYWY2ODhhNGFmZmI5MzIyYzQ5YjlkMTE1OGUuUHJvcGVy
dGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRz
AEVsZW1lbnRzAE9iamVjdABvcF9JbXBsaWNpdABnZXRfRGVmYXVsdABYRWxlbWVudABUb0xpc3QA
Z2V0X0Fzc2VtYmx5AAAAAAAhVQBzAGUAcgA6ADoAdgBhAHIAWABNAEwARABhAHQAYQAAA3QAACVF
AHgAdABlAHIAbgBhAGwARABvAGMAdQBtAGUAbgB0AE4AbwAADTwAUgBPAE8AVAA+AAABAA88AC8A
UgBPAE8AVAA+AAAdVQBzAGUAcgA6ADoARQB4AHQARABvAGMATgBvAABxUwBUAF8ANwA2AGIAMwBl
ADEAYQBmADYAOAA4AGEANABhAGYAZgBiADkAMwAyADIAYwA0ADkAYgA5AGQAMQAxADUAOABlAC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAADd2YL2fQwPSou+Sspi
b4p+AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBAcCDg4EIAASYQQgABJlBSABEmkcAyAAHAUA
ARJxDgUAARJ1DgogARUSfQEScRJ1EBABARUSgIUBHgAVEn0BHgAECgEScQcVEoCFARJxBSABEwAI
BiABEnESdQMgAA4FIAIODg4EIAEBHAgAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImE
Xc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhAD
AAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dz
AQgBAAIAAAAAACgBACNTVF83NmIzZTFhZjY4OGE0YWZmYjkzMjJjNDliOWQxMTU4ZQAABQEAAAAA
FgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQO
FEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNbQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD0LwAA
AAAAAAAAAAAOMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAL5tPx0AAAEAvm0/HT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANwA2AGIAMwBlADEAYQBmADYAOAA4AGEANABhAGYAZgBiADkAMwAyADIAYwA0ADkA
YgA5AGQAMQAxADUAOABlAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcANAA4ADcALgAyADgAMAA5ADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8ANgA4AGQAMABkAGUAOQA0ADQAYwA2ADYANAAzADAAYQA4AGMANwBjADkAMgAzAGEAMgA0
AGIANwA4ADAANgBiAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwA2ADgAZAAwAGQAZQA5ADQANABjADYANgA0ADMAMABhADgAYwA3AGMAOQAy
ADMAYQAyADQAYgA3ADgAMAA2AGIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8ANwA2AGIAMwBlADEAYQBmADYAOAA4AGEANABhAGYAZgBiADkAMwAyADIAYwA0
ADkAYgA5AGQAMQAxADUAOABlAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADQAOAA3AC4AMgA4ADAAOQA0AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADQAOAA3AC4AMgA4ADAAOQA0AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Send Email"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{804fa2d1-19ba-4a31-a893-6918bea9ff6d}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Send Email"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_f851223168b946e6bcd3793bc17bac37"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::varXMLData,User::varXMLtoHTML"
              ReadWriteVariables="User::varExtDocNo">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Settings.get_Default():ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Sett" +
    "ings")]

namespace ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_f851223168b946e6bcd3793bc17bac37.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EB20FC4E-CE8B-4F01-B558-F02EE38B24C0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4d8b20ee55cd4cd0b1af16fea8841408</RootNamespace>
    <AssemblyName>ST_f851223168b946e6bcd3793bc17bac37</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Net;
using System.Xml.Linq;
using System.Collections.Generic;
using System.Linq;
using System.Text;
#endregion

namespace ST_4d8b20ee55cd4cd0b1af16fea8841408
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string filename = (string)Dts.Variables["User::varXMLData"].Value;
            //MessageBox.Show(filename);

            XElement rebatedata = XElement.Parse(filename);

            List<XElement> tnodes = rebatedata.Elements("t").ToList();
            //MessageBox.Show((string)tnodes[0]);

            string ExtDocNo = tnodes[0].Element("ExternalDocumentNo").Value.ToString();
            Dts.Variables["User::varExtDocNo"].Value = ExtDocNo;
            string FranchiseeEmail = tnodes[0].Element("FranchiseeEmail").Value.ToString();

            string htmlMessageFrom = "no-reply@bbqgalore.com.au";
            string htmlMessageTo = "john.nehme@bbqgalore.com.au";
            //   string htmlMessageTo = FranchiseeEmail;
            //   string htmlMessageTo = source.Replace(",", ";");
            string htmlMessageSubject = string.Concat("Franchise Rebate for Online Sales - ",ExtDocNo);

            string htmlMessageBody = "This email is auto-generated and details the report for the Franchise Online Sales rebate which applies to External Document No.: " + ExtDocNo + ".<br /><br />If you have any questions about this or any other web rebate, please do not reply to this email, but rather, please contact your FBM.<br /><br />Regards,<br /><br />Franchise Online Sales Rebate Calculator";
            string smtpServer = "192.168.1.71";
            string pathToAttachment = @"C:\FranchiseRebate\PDF\FranchiseOnlineSalesRebate_" + ExtDocNo + ".pdf";

            SendMailMessage(htmlMessageFrom, htmlMessageTo, htmlMessageSubject, htmlMessageBody, true, smtpServer, pathToAttachment);

            Dts.TaskResult = (int)ScriptResults.Success;

        }

        private void SendMailMessage(string From, string SendTo, string Subject, string Body, bool IsBodyHtml, string Server, string pathToAtt)
        {

            MailMessage htmlMessage;
            SmtpClient mySmtpClient;
           
            htmlMessage = new MailMessage(From, SendTo, Subject, Body);
            htmlMessage.IsBodyHtml = IsBodyHtml;
            htmlMessage.Attachments.Add(new Attachment(pathToAtt));
            //MailAddress bcc1 = new MailAddress("john.nehme@bbqgalore.com.au");
            //MailAddress bcc2 = new MailAddress("scot.barker@bbqgalore.com.au");
            //MailAddress bcc3 = new MailAddress("Biju.Maharjan@bbqgalore.com.au");
            //htmlMessage.Bcc.Add(bcc1);
            //htmlMessage.Bcc.Add(bcc2);
            //htmlMessage.Bcc.Add(bcc3);

            mySmtpClient = new SmtpClient(Server);
            mySmtpClient.Credentials = CredentialCache.DefaultNetworkCredentials;
            mySmtpClient.Send(htmlMessage);

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f851223168b946e6bcd3793bc17bac37</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f851223168b946e6bcd3793bc17bac37</msb:DisplayName>
    <msb:ProjectId>{E8B2229B-75B0-49B8-B951-79D4230B17F6}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f851223168b946e6bcd3793bc17bac37.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4d8b20ee55cd4cd0b1af16fea8841408")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4d8b20ee55cd4cd0b1af16fea8841408")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_f851223168b946e6bcd3793bc17bac37.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAMg/F4AAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAA9jYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKQ2AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA/BYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADY
NgAAAAAAAEgAAAACAAUAACIAAOwTAAABAAAAAAAAAOw1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwCAD0AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdBwAAAEoFAAACnIjAABwKBUAAApvFgAACigBAAArJRZvGAAACnInAABwKBUAAApvGQAACm8a
AAAKbxsAAAoKAigQAAAKbxEAAApyTQAAcG8SAAAKBm8cAAAKFm8YAAAKcnEAAHAoFQAACm8ZAAAK
bxoAAApvGwAACiZykQAAcAtyxQAAcAxy/QAAcAYoHQAACg1yRwEAcAZyTgIAcCgeAAAKEwRyBQQA
cBMFch8EAHAGcoUEAHAoHgAAChMGAgcICREEFxEFEQYoAgAABgIoEAAAChZvHwAACioTMAQAPgAA
AAIAABEDBAUOBHMgAAAKCgYOBW8hAAAKBm8iAAAKDgdzIwAACm8kAAAKDgZzJQAACiUoJgAACm8n
AAAKBm8oAAAKKh4CKCkAAAoqHgIoKgAACiqufgEAAAQtHnKPBABw0AMAAAIoKwAACm8sAAAKcy0A
AAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAiguAAAKKi5zCQAABoADAAAEKkJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAPwEAAAjfgAAaAUAAGgHAAAjU3RyaW5n
cwAAAADQDAAABAUAACNVUwDUEQAAEAAAACNHVUlEAAAA5BEAAAgCAAAjQmxvYgAAAAAAAAACAAAB
Vx2iCQkLAAAA+gEzABYAAAEAAAAsAAAABQAAAAYAAAAKAAAACAAAAC4AAAACAAAAEAAAAAIAAAAC
AAAAAwAAAAQAAAACAAAAAQAAAAYAAAABAAAAAQAAAAEAAAAAAG0EAQAAAAAABgDSApsFBgBhA5sF
BgAeAogFDwAPBgAABgBLAv8EBgC1Av8EBgCWAv8EBgBIA/8EBgDyAv8EBgALA/8EBgBiAv8EBgB9
ApkDCgAmA9sDCgCXAdsDDgDcAF0EBgC5BK0EBgABAogFBgDQBq0EBgBZBbsFBgAtBeoEDgDRAUcE
DgAyAkcEDgCzAdUEBgDmAZsFCgA1BNsDEgBRBjYBEgD4ADYBBgC1A60EFgAcBzkFFgAwATkFFgBp
BTkFBgABAKQAGgABAUkFBgAcAKQADgARBV0EDgAlB10EBgAPABYEDgARB10EDgDoAN8GDgAEBN8G
DgA3B98GBgBWAa0EBgAMAa0EBgBdB/8EAAAAAGsAAAAAAAEAAQABABAAygRHADkAAQABAAAAEADC
BR4GSQABAAQAAAEQAFsGHgZdAAMACAADAQAAogYAAEEABAALABEAvgQAAREAhwEEAREAyAAIAQYG
kwAMAVaAkgYPAVaAZwEPAVAgAAAAAIYA0AQGAAEAUCEAAAAAgQDYABMBAQCaIQAAAACGGHsFBgAI
AKIhAAAAAIMYewUGAAgAqiEAAAAAkwhVBR4BCADWIQAAAACTCG8BIwEIAN0hAAAAAJMIewEoAQgA
5SEAAAAAlgj2Bi4BCQDsIQAAAACGGHsFBgAJAPQhAAAAAJEYgQUzAQkAAAABALQEAAACACYFAAAD
ANcGAAAEAFQHAAAFAJkEAAAGAHQFAAAHAEoHAAABAJMDCQB7BQEAEQB7BQYAGQB7BQoAKQB7BRAA
MQB7BRAAOQB7BRAAQQB7BRAASQB7BRAAUQB7BRAAWQB7BRAAYQB7BRAAaQB7BQYAiQB7BQYAsQB7
BRUAwQB7BQYAcQCaBiUAyQBNBioA0QCkBC8A2QB/AzUA6QDLATkA8QDqBj8A+QCwBkUACQEwB1EA
DACkBHAA+QAdB3YA6QB/A30AkQCzA30A2QCJA4EA4QDJBoYA4QDJBowAyQACBwEAeQB7BZgAeQCV
BKAAeQC5BqUAIQF7BRAAFAC/ALQAMQF7BRAAOQF0BroAMQFkBsAAMQHDAMcAcQB7BQYAkQB7BQYA
UQEeAc0AUQFZB9YAmQB7BdwAuQB7BQYACAAUAPYACAAYAPsAKQBzAG4BLgALAEYBLgATAE8BLgAb
AG4BLgAjAHcBLgArAKABLgAzAKABLgA7AKABLgBDAHcBLgBLAKYBLgBTAKABLgBbAL0BQwBjAPsA
SQBzAG4BYQB7APsAYwBrAPsAGwCTAAMAAQAEAAMAAABZBTcBAACPATwBAAD6BkEBAgAFAAMAAgAG
AAUAAQAHAAUAAgAIAAcAaACrAASAAAABAAAAPx1RbQAAAAAAACMAAAAEAAAAAAAAAAAAAADkAJsA
AAAAAA4AAAAAAAAAAAAAAO0AvAMAAAAABAAAAAAAAAAAAAAA5ACtBAAAAAAOAAAAAAAAAAAAAADt
AHQAAAAAAAQAAAAAAAAAAAAAAOQAOQUAAAAABAAAAAAAAAAAAAAA5ABbAQAAAAAAAAAAAQAAAMwF
AAAFAAIALwBjAAAAAAAASUVudW1lcmFibGVgMQBDb2xsZWN0aW9uYDEATGlzdGAxAFNUX2Y4NTEy
MjMxNjhiOTQ2ZTZiY2QzNzkzYmMxN2JhYzM3AFNUXzRkOGIyMGVlNTVjZDRjZDBiMWFmMTZmZWE4
ODQxNDA4ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1z
Y29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAEFkZABTZW5kAGRlZmF1bHRJbnN0YW5j
ZQBTZW5kTWFpbE1lc3NhZ2UAQ3JlZGVudGlhbENhY2hlAFZhcmlhYmxlAEVudW1lcmFibGUAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAWE5hbWUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZQBUeXBlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBQYXJzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBB
c3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0
X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5n
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmpl
Y3RNb2RlbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5l
dC5NYWlsAFNUX2Y4NTEyMjMxNjhiOTQ2ZTZiY2QzNzkzYmMxN2JhYzM3LmRsbABzZXRfSXNCb2R5
SHRtbABnZXRfSXRlbQBTeXN0ZW0ARnJvbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lz
dGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24A
QXR0YWNobWVudENvbGxlY3Rpb24AU2VuZFRvAEN1bHR1cmVJbmZvAFN5c3RlbS5YbWwuTGlucQBT
eXN0ZW0uTGlucQBnZXRfUmVzb3VyY2VNYW5hZ2VyAFhDb250YWluZXIAU2VydmVyAC5jdG9yAC5j
Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNUXzRkOGIyMGVlNTVjZDRjZDBiMWFmMTZmZWE4ODQxNDA4LlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF80ZDhiMjBlZTU1Y2Q0
Y2QwYjFhZjE2ZmVhODg0MTQwOC5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAc2V0
X0NyZWRlbnRpYWxzAGdldF9EZWZhdWx0TmV0d29ya0NyZWRlbnRpYWxzAFN1Y2Nlc3MAZ2V0X0R0
cwBTY3JpcHRSZXN1bHRzAEVsZW1lbnRzAGdldF9BdHRhY2htZW50cwBDb25jYXQAT2JqZWN0AFN1
YmplY3QAU3lzdGVtLk5ldABvcF9JbXBsaWNpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABT
bXRwQ2xpZW50AFhFbGVtZW50AEF0dGFjaG1lbnQAVG9MaXN0AElDcmVkZW50aWFsc0J5SG9zdABw
YXRoVG9BdHQAQm9keQBnZXRfQXNzZW1ibHkAAAAAIVUAcwBlAHIAOgA6AHYAYQByAFgATQBMAEQA
YQB0AGEAAAN0AAAlRQB4AHQAZQByAG4AYQBsAEQAbwBjAHUAbQBlAG4AdABOAG8AACNVAHMAZQBy
ADoAOgB2AGEAcgBFAHgAdABEAG8AYwBOAG8AAB9GAHIAYQBuAGMAaABpAHMAZQBlAEUAbQBhAGkA
bAAAM24AbwAtAHIAZQBwAGwAeQBAAGIAYgBxAGcAYQBsAG8AcgBlAC4AYwBvAG0ALgBhAHUAATdq
AG8AaABuAC4AbgBlAGgAbQBlAEAAYgBiAHEAZwBhAGwAbwByAGUALgBjAG8AbQAuAGEAdQAASUYA
cgBhAG4AYwBoAGkAcwBlACAAUgBlAGIAYQB0AGUAIABmAG8AcgAgAE8AbgBsAGkAbgBlACAAUwBh
AGwAZQBzACAALQAgAAGBBVQAaABpAHMAIABlAG0AYQBpAGwAIABpAHMAIABhAHUAdABvAC0AZwBl
AG4AZQByAGEAdABlAGQAIABhAG4AZAAgAGQAZQB0AGEAaQBsAHMAIAB0AGgAZQAgAHIAZQBwAG8A
cgB0ACAAZgBvAHIAIAB0AGgAZQAgAEYAcgBhAG4AYwBoAGkAcwBlACAATwBuAGwAaQBuAGUAIABT
AGEAbABlAHMAIAByAGUAYgBhAHQAZQAgAHcAaABpAGMAaAAgAGEAcABwAGwAaQBlAHMAIAB0AG8A
IABFAHgAdABlAHIAbgBhAGwAIABEAG8AYwB1AG0AZQBuAHQAIABOAG8ALgA6ACAAAYG1LgA8AGIA
cgAgAC8APgA8AGIAcgAgAC8APgBJAGYAIAB5AG8AdQAgAGgAYQB2AGUAIABhAG4AeQAgAHEAdQBl
AHMAdABpAG8AbgBzACAAYQBiAG8AdQB0ACAAdABoAGkAcwAgAG8AcgAgAGEAbgB5ACAAbwB0AGgA
ZQByACAAdwBlAGIAIAByAGUAYgBhAHQAZQAsACAAcABsAGUAYQBzAGUAIABkAG8AIABuAG8AdAAg
AHIAZQBwAGwAeQAgAHQAbwAgAHQAaABpAHMAIABlAG0AYQBpAGwALAAgAGIAdQB0ACAAcgBhAHQA
aABlAHIALAAgAHAAbABlAGEAcwBlACAAYwBvAG4AdABhAGMAdAAgAHkAbwB1AHIAIABGAEIATQAu
ADwAYgByACAALwA+ADwAYgByACAALwA+AFIAZQBnAGEAcgBkAHMALAA8AGIAcgAgAC8APgA8AGIA
cgAgAC8APgBGAHIAYQBuAGMAaABpAHMAZQAgAE8AbgBsAGkAbgBlACAAUwBhAGwAZQBzACAAUgBl
AGIAYQB0AGUAIABDAGEAbABjAHUAbABhAHQAbwByAAAZMQA5ADIALgAxADYAOAAuADEALgA3ADEA
AGVDADoAXABGAHIAYQBuAGMAaABpAHMAZQBSAGUAYgBhAHQAZQBcAFAARABGAFwARgByAGEAbgBj
AGgAaQBzAGUATwBuAGwAaQBuAGUAUwBhAGwAZQBzAFIAZQBiAGEAdABlAF8AAAkuAHAAZABmAABx
UwBUAF8ANABkADgAYgAyADAAZQBlADUANQBjAGQANABjAGQAMABiADEAYQBmADEANgBmAGUAYQA4
ADgANAAxADQAMAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA
AADcTx8dl4GjTJG6C5mVCurjAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFVCQcHDg4ODg4ODgQg
ABJlBCAAEmkFIAESbRwDIAAcBQABEnUOBQABEnkOCyABFRKAgQESdRJ5ERABARUSgIkBHgAVEoCB
AR4ABAoBEnUHFRKAiQESdQUgARMACAYgARJ1EnkDIAAOBCABARwFAAIODg4GAAMODg4OBAcBEj0H
IAQBDg4ODgQgAQECBSAAEoCNCBUSgJUBEoCRBSABARMABQAAEoChBiABARKApQUgAQESPQgAARKA
qRGArQUgABKAsQcgAgEOEoCxCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEk0DBhJRAwYS
EAIGCAMGERQKIAcBDg4ODgIODgQAABJNBAAAElEFAAEBElEEAAASEAMAAAEECAASTQQIABJRBAgA
EhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NU
XzRkOGIyMGVlNTVjZDRjZDBiMWFmMTZmZWE4ODQxNDA4AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAg
IDIwMjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADMNgAAAAAAAAAAAADmNgAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA2DYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAFFtPx0AAAEAUW0/HT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8ANABkADgAYgAyADAAZQBlADUANQBjAGQANABjAGQAMABiADEAYQBmADEANgBmAGUAYQA4
ADgANAAxADQAMAA4AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcA
NAA4ADcALgAyADcAOQA4ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AZgA4ADUAMQAyADIAMwAxADYAOABiADkANAA2AGUANgBiAGMAZAAzADcAOQAzAGIAYwAxADcA
YgBhAGMAMwA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwBmADgANQAxADIAMgAzADEANgA4AGIAOQA0ADYAZQA2AGIAYwBkADMANwA5ADMA
YgBjADEANwBiAGEAYwAzADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8ANABkADgAYgAyADAAZQBlADUANQBjAGQANABjAGQAMABiADEAYQBmADEANgBmAGUA
YQA4ADgANAAxADQAMAA4AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA3ADQAOAA3AC4AMgA3ADkAOAA1AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA3ADQAOAA3AC4AMgA3ADkAOAA1AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAPg2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Update 'paid' to 'sent'"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{38b9b399-7914-4f4b-978e-4871b8f00b13}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update 'paid' to 'sent'"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"update [Nav_Processes].[Reports].[FranchiseRebate] set [Status] = 'sent' where [ExternalDocumentNo]='" + @[User::varExtDocNo] + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="update [Nav_Processes].[Reports].[FranchiseRebate] set [Status] = 'sent' where [ExternalDocumentNo]='0'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D9264E8A-5E21-4AAA-B50A-D0CF9BDC6DE8}"
          DTS:From="Package\Foreach Loop Container\Get the Paid PSIs to create report and save as PDF"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Script Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{35C1739B-5FD4-41DE-A354-56AB445D28C6}"
          DTS:From="Package\Foreach Loop Container\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Reformat results in HTML" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{EBADC62B-C428-46FC-A6F5-975AC23413C3}"
          DTS:From="Package\Foreach Loop Container\Reformat results in HTML"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Save as PDF" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{6CACC004-A234-4964-8550-C78005F11581}"
          DTS:From="Package\Foreach Loop Container\Save as PDF"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Send Email" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{1DD06530-2B50-4CE0-AB02-D0443A1AAAD6}"
          DTS:From="Package\Foreach Loop Container\Send Email"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Loop Container\Update 'paid' to 'sent'" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{A3FBD6A7-ABB6-4113-BFCD-290CE1F849B4}"
          DTS:From="Package\Foreach Loop Container\Reformat results in HTML"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach Loop Container\Execute SQL Task"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{1D0BC6AD-47AE-429F-83B5-5EFFDE4051BC}"
          DTS:From="Package\Foreach Loop Container\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Foreach Loop Container\Get Web_ebay_Order_Tender_Import data" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{DEC7F4F3-98CC-4968-B045-7AE8C4332C0B}"
          DTS:ObjectName="{DEC7F4F3-98CC-4968-B045-7AE8C4332C0B}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::varExtDocNoSelector" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get rowcount of all 'paid'"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{9ff68864-c719-4f0d-aaf9-9245d91320ef}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get rowcount of all 'paid'"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="select  count(distinct(r.[No_])) as rowct&#xA;from [Nav_Processes].[Reports].[FranchiseRebate] r&#xA;where r.[Status]='paid'&#xA;"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::RowNo" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update &quot;Paid&quot; on new rebates"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Update all rebates to status = 'paid' if they have been paid"
      DTS:DTSID="{3f248413-2498-4e15-841d-ed68441acaba}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update &quot;Paid&quot; on new rebates"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
          SQLTask:SqlStatementSource="update [Nav_Processes].[Reports].[FranchiseRebate] set [Status]='paid'&#xA;where[ExternalDocumentNo] in (&#xA;select x.[extDocNo]&#xA;  from (&#xA;    select h.[No_],h.[External Document No_],l.[Description],l.[Shortcut Dimension 2 Code]&#xA;      ,len(trim(left(substring(l.[Description], patindex('%[0-9.-]%', l.[Description]), 8000),patindex('%[^0-9.-]%', substring(l.[Description], patindex('%[0-9.-]%', l.[Description]), 8000) + 'X') -1))) as length9or13&#xA;      ,cast(left(substring(l.[Description], patindex('%[0-9.-]%', l.[Description]), 8000),patindex('%[^0-9.-]%', substring(l.[Description], patindex('%[0-9.-]%', l.[Description]), 8000) + 'X') -1) as float) as extDocNo&#xA;      ,l.Amount&#xA;    from [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Sales Cr_Memo Header] h&#xA;    left&#xA;    join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Sales Cr_Memo Line] l&#xA;    on  h.[No_]=l.[Document No_]&#xA;    where (h.[External Document No_] like ('WEB %') or l.[Description] like ('%WEB%') or (l.[Type]=1 and l.[No_]='71030' and l.[Shortcut Dimension 2 Code]&lt;&gt;'008'))&#xA;    and  l.[Type]=1&#xA;    and  l.[No_] in ('71030','71020')&#xA;    group by h.[No_],h.[External Document No_],l.[Description],l.[Shortcut Dimension 2 Code],l.[Amount]&#xA;    ) x&#xA;&#xA;  left&#xA;  join (select distinct(f.[ExternalDocumentNo]) from [Nav_Processes].[Reports].[FranchiseRebate] f where [Status]='new') f&#xA;  on  f.[ExternalDocumentNo]=x.extDocNo&#xA;  where f.[ExternalDocumentNo] is not null&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{31038E5B-B9CD-4528-A4A5-EB3E8A354A1D}"
      DTS:From="Package\Get rowcount of all 'paid'"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Execute SQL Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{80CA71A1-027B-47F5-9D8F-CBAA91FDCB5C}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{90c91a79-b694-4b5c-bb29-f384f0ecd9b3}"
      DTS:From="Package\Update &quot;Paid&quot; on new rebates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Get rowcount of all 'paid'" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{C08D1560-9316-48DC-A438-F51EF685D3CE}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{70D99408-26E5-4BFD-91EF-EAC1BB83707F}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Execute SQL Task"
          TopLeft="453.428579150414,221.152944278058" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Foreach Loop Container\Execute SQL Task"
          TopLeft="215.714298515904,362.729411470134" />
        <NodeLayout
          Size="318.4,41.6"
          Id="Package\Foreach Loop Container\Get the Paid PSIs to create report and save as PDF"
          TopLeft="129.657162149585,21.6784328883082" />
        <NodeLayout
          Size="198.4,41.6"
          Id="Package\Foreach Loop Container\Reformat results in HTML"
          TopLeft="55.21905588909,242.376475457255" />
        <NodeLayout
          Size="136.8,41.6"
          Id="Package\Foreach Loop Container\Save as PDF"
          TopLeft="55.0666830040153,347.25490328922" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container\Script Task"
          TopLeft="87.2190564340469,133.176473925766" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container\Send Email"
          TopLeft="56.8000180516934,452.352942236074" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Foreach Loop Container\Update 'paid' to 'sent'"
          TopLeft="39.5238193249211,566.180396080678" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="288.857162149585,63.2784328883082">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-136.438105715538,69.8980410374579"
              Start="0,0"
              End="-136.438105715538,62.3980410374579">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.949020518729" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.949020518729"
                    Point2="0,34.949020518729"
                    Point3="-4,34.949020518729" />
                  <mssgle:LineSegment
                    End="-132.438105715538,34.949020518729" />
                  <mssgle:CubicBezierSegment
                    Point1="-132.438105715538,34.949020518729"
                    Point2="-136.438105715538,34.949020518729"
                    Point3="-136.438105715538,38.949020518729" />
                  <mssgle:LineSegment
                    End="-136.438105715538,62.3980410374579" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="153.419056161568,174.776473925766">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67.6000015314892"
              Start="0,0"
              End="0,60.1000015314892">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,60.1000015314892" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="123.076202779886,283.976475457255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63.2784278319645"
              Start="0,0"
              End="0,55.7784278319645">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.7784278319645" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="122.733350527854,388.85490328922">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63.498038946854"
              Start="0,0"
              End="0,55.998038946854">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.998038946854" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="125.761918688307,493.952942236074">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72.227453844604"
              Start="0,0"
              End="0,64.727453844604">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.727453844604" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="186.152389222423,283.976475457255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="110.76190929348,78.752936012879"
              Start="0,0"
              End="110.76190929348,71.252936012879">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.8791884980134" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.8791884980134"
                    Point2="0,31.8791884980134"
                    Point3="4,31.8791884980134" />
                  <mssgle:LineSegment
                    End="106.76190929348,31.8791884980134" />
                  <mssgle:CubicBezierSegment
                    Point1="106.76190929348,31.8791884980134"
                    Point2="110.76190929348,31.8791884980134"
                    Point3="110.76190929348,35.8791884980134" />
                  <mssgle:LineSegment
                    End="110.76190929348,71.252936012879" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="40.1396069904902,36.8791884980134,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="280.8,41.6"
          Id="Package\Foreach Loop Container\Get Web_ebay_Order_Tender_Import data"
          TopLeft="347.009534432937,178.635296477084" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="217.619056434047,153.976473925766">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="129.39047799889,45.4588225513176"
              Start="0,0"
              End="121.89047799889,45.4588225513176">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="60.6952389994451,0" />
                  <mssgle:CubicBezierSegment
                    Point1="60.6952389994451,0"
                    Point2="64.6952389994451,0"
                    Point3="64.6952389994451,4" />
                  <mssgle:LineSegment
                    End="64.6952389994451,41.4588225513176" />
                  <mssgle:CubicBezierSegment
                    Point1="64.6952389994451,41.4588225513176"
                    Point2="64.6952389994451,45.4588225513176"
                    Point3="68.6952389994451,45.4588225513176" />
                  <mssgle:LineSegment
                    End="121.89047799889,45.4588225513176" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="667.2,660.8"
          Size="667.2,704"
          Id="Package\Foreach Loop Container"
          TopLeft="276.857147571993,354.32941645355" />
        <NodeLayout
          Size="196,41.6"
          Id="Package\Get rowcount of all 'paid'"
          TopLeft="434.85715026271,120.007844820319" />
        <NodeLayout
          Size="220,41.6"
          Id="Package\Update &quot;Paid&quot; on new rebates"
          TopLeft="426.380959642171,29.0588239369508" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="533.742864706562,161.607844820319">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.5450994577385"
              Start="0,0"
              End="0,52.0450994577385">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.0450994577385" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="534.628579150414,262.752944278058">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75.828568421579,91.576472175492"
              Start="0,0"
              End="75.828568421579,84.076472175492">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.788236087746" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.788236087746"
                    Point2="0,45.788236087746"
                    Point3="4,45.788236087746" />
                  <mssgle:LineSegment
                    End="71.828568421579,45.788236087746" />
                  <mssgle:CubicBezierSegment
                    Point1="71.828568421579,45.788236087746"
                    Point2="75.828568421579,45.788236087746"
                    Point3="75.828568421579,49.788236087746" />
                  <mssgle:LineSegment
                    End="75.828568421579,84.076472175492" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="534.61905495244,70.6588239369508">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.3490208833684"
              Start="0,0"
              End="0,41.8490208833684">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.8490208833684" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>