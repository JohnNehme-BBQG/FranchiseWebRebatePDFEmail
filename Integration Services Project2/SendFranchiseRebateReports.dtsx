<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/4/2020 3:09:03 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="HQVSMDM-05P"
  DTS:CreatorName="GALORE\john.nehme"
  DTS:DTSID="{23C1B86B-1D5C-4C8F-9B28-0DDF3721A805}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="3081"
  DTS:ObjectName="SendFranchiseRebateReports"
  DTS:PackageType="5"
  DTS:VersionBuild="240"
  DTS:VersionGUID="{62600472-F916-4214-8FDD-DECD13D7265D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FranchiseWebRebate2.xsl]"
      DTS:CreationName="FILE"
      DTS:DTSID="{F87AAC11-5B1D-4BBC-A5BF-BA7FF4AEB312}"
      DTS:ObjectName="FranchiseWebRebate2.xsl">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="\\VM-ARIES\S_Drive\John Nehme\SSIS Test XML\FranchiseWebRebate2.xsl" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[test xml Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:Description="test"
      DTS:DTSID="{6DBF16E2-7DD8-4B7C-99BA-42F08F84EE4D}"
      DTS:ObjectName="test xml Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="3081"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\john.nehme\Downloads\test.xml">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="631"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="XML_F52E2B61-18A1-11d1-B105-00805F49916B"
              DTS:DTSID="{8579DEC4-88EA-4F3F-B0B3-86948E9F50C0}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[testVS_xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{CB8CEE29-C89C-4DFD-B301-FD94EFA7172F}"
      DTS:ObjectName="testVS_xml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="\\VM-ARIES\S_Drive\John Nehme\SSIS Test XML\FranchiseWebRebate.xsl" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{10DD5175-6E49-41DC-B651-5634D9C83F78}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IncrementValue">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9910CC2E-3F50-44C8-A4B6-CFECF71EBE76}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowNo">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C7A9C295-84B2-4320-BC60-41497EE52A96}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varExtDocNo">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{59C94F20-8CD2-41F5-9E02-E6D7B958ADDA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varExtDocNoSelector">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CBBF75D2-CF91-4E16-AB4F-11D410C39C8B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varExtHeaderNo">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F0C680A9-F443-466E-B720-452DF67B541D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSQLObjectOutput">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB902B5C-05D7-44F3-ADA8-095B75C68375}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varXMLData">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD8C013C-3A62-4461-B43C-0419490D5882}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varXMLtoHTML">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E51AF7E2-BBD6-4AF7-BA34-D3DF85070997}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
          SQLTask:SqlStatementSource="select distinct(r.[ExternalDocumentNo])&#xA;from [Nav_Processes].[Reports].[FranchiseRebate] r&#xA;where r.[Status]='paid'"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::varExtHeaderNo" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{D5887234-A678-40F6-A231-CB2EEC196E2D}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{9BF8EC43-8AC7-4769-9C68-50203E517996}"
        DTS:ObjectName="{9BF8EC43-8AC7-4769-9C68-50203E517996}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::varExtHeaderNo" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{d6100517-9580-403a-bf2b-acfaa11d9ae4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="select count(distinct(r.[No_])) from [Nav_Processes].[Reports].[FranchiseRebate] r where r.[Status]='paid';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Get the Paid PSIs to create report and save as PDF"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{d43a4ce6-eb73-4bf9-9979-533139a1e4aa}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get the Paid PSIs to create report and save as PDF"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="1" />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"select t.*
from(
select c.[E-Mail] as [FranchiseeEmail]
 ,o.[E-Mail] as [CustomerEmail],c.[Name],c.[Address],c.[Address 2],c.[City],c.[County] as [State],c.[Post Code] as [PostCode],r.*

from [Nav_Processes].[Reports].[FranchiseRebate] r

left
join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] c
on  r.[Franchisee]=c.[No_]

left
join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] o
on  r.[SelltoCustNo]=o.[No_] 

where r.[Status]='paid'
and r.[ExternalDocumentNo]='" +
 (DT_WSTR,20)@[User::varExtDocNoSelector] + "'
) t 
FOR XML auto, elements,type,root('Rebates') OPTION (FAST 100)"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="select t.*&#xA;from(&#xA;select c.[E-Mail] as [FranchiseeEmail]&#xA; ,o.[E-Mail] as [CustomerEmail],c.[Name],c.[Address],c.[Address 2],c.[City],c.[County] as [State],c.[Post Code] as [PostCode],r.*&#xA;&#xA;from [Nav_Processes].[Reports].[FranchiseRebate] r&#xA;&#xA;left&#xA;join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] c&#xA;on  r.[Franchisee]=c.[No_]&#xA;&#xA;left&#xA;join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] o&#xA;on  r.[SelltoCustNo]=o.[No_] &#xA;&#xA;where r.[Status]='paid'&#xA;and r.[ExternalDocumentNo]='0'&#xA;) t &#xA;FOR XML auto, elements,type,root('Rebates') OPTION (FAST 100)"
              SQLTask:ResultType="ResultSetType_XML" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::varXMLData" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varExtDocNoSelector"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="20" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Reformat results in HTML"
          DTS:CreationName="Microsoft.XMLTask"
          DTS:Description="XML Task"
          DTS:DTSID="{f82d33c6-ccdb-42eb-b7b1-786fbc3297ad}"
          DTS:ExecutableType="Microsoft.XMLTask"
          DTS:LocaleID="-1"
          DTS:MaxErrorCount="0"
          DTS:ObjectName="Reformat results in HTML"
          DTS:TaskContact="XML Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <XMLTaskData
              OperationType="XSLT"
              SourceType="Variable"
              Source="User::varXMLData"
              SecondOperandType="FileConnection"
              SecondOperand="FranchiseWebRebate2.xsl"
              SaveOperationResult="True"
              DestinationType="Variable"
              Destination="User::varXMLtoHTML"
              OverwriteDestination="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Save as PDF"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{ab6b3abe-3dce-40e4-87d6-e6ed480d062d}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Save as PDF"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_3b334352043c4349b05a56b77774f5af"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::varXMLData,User::varXMLtoHTML">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Settings.get_Default():ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Sett" +
    "ings")]

namespace ST_9cc8d0f14b674405b27a55378d8433cf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using PdfSharp;
using PdfSharp.Charting;
using TheArtOfDev.HtmlRenderer;
using TheArtOfDev.HtmlRenderer.PdfSharp;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using PdfSharp.Pdf;
using System.Xml.Linq;
using System.Collections.Generic;
using System.Linq;
#endregion

namespace ST_9cc8d0f14b674405b27a55378d8433cf
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>


        static ScriptMain()
        {
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
        }
        static System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            //Set up a sting package paramter in the SSIS solution. Assign it to a readonly variable, use it to populate the string 'path'.
            //This will enable you to determine on the deployed solution where it needs to pickup the .dll's from, and can be separate from where the debug is picking them up from.
            string path = @"C:\TEMP\libraries\";
            if (args.Name.Contains("HtmlRenderer.PdfSharp"))
            { return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "HtmlRenderer.PdfSharp.dll")); }
            if (args.Name.Contains("HtmlRenderer"))
            {
                return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "HtmlRenderer.dll"));
            }
            if (args.Name.Contains("PdfSharp.Charting"))
            { return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "PdfSharp.Charting.dll")); }
            if (args.Name.Contains("PdfSharp"))
            { return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "PdfSharp.dll")); }

            return null;
        }

        public void Main()
        {
            // TODO: Add your code here
            string filename = (string)Dts.Variables["User::varXMLData"].Value;
            //MessageBox.Show(filename);

            XElement rebatedata = XElement.Parse(filename);

            List<XElement> tnodes = rebatedata.Elements("t").ToList();
            //MessageBox.Show((string)tnodes[0]);

            string ExtDocNo = tnodes[0].Element("ExternalDocumentNo").Value.ToString();
            string varhtml = (string) Dts.Variables["User::varXMLtoHTML"].Value;
            var config = new PdfGenerateConfig();
            config.PageOrientation = PageOrientation.Landscape;
            config.PageSize = PageSize.A4;
            PdfDocument pdf = PdfGenerator.GeneratePdf(varhtml, config);
            pdf.Save(@"C:\FranchiseRebate\PDF\FranchiseOnlineSalesRebate_"+ ExtDocNo+".pdf");
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9cc8d0f14b674405b27a55378d8433cf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_3b334352043c4349b05a56b77774f5af</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_3b334352043c4349b05a56b77774f5af</msb:DisplayName>
    <msb:ProjectId>{1C9426F8-9031-401D-BCDA-08F890B90F05}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_3b334352043c4349b05a56b77774f5af.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9cc8d0f14b674405b27a55378d8433cf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9cc8d0f14b674405b27a55378d8433cf")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_3b334352043c4349b05a56b77774f5af.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F6F4DE24-F16A-4F74-8779-D3B33A0D952D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9cc8d0f14b674405b27a55378d8433cf</RootNamespace>
    <AssemblyName>ST_3b334352043c4349b05a56b77774f5af</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="HtmlRenderer">
      <HintPath>C:\TEMP\libraries\HtmlRenderer.dll</HintPath>
    </Reference>
    <Reference Include="HtmlRenderer.PdfSharp">
      <HintPath>C:\TEMP\libraries\HtmlRenderer.PdfSharp.dll</HintPath>
    </Reference>
    <Reference Include="PdfSharp">
      <HintPath>C:\TEMP\libraries\PdfSharp.dll</HintPath>
    </Reference>
    <Reference Include="PdfSharp.Charting">
      <HintPath>C:\TEMP\libraries\PdfSharp.Charting.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Connected Services\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <BinaryItem
                Name="ST_3b334352043c4349b05a56b77774f5af.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALT48l4AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAArjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFw1AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
NQAAAAAAAEgAAAACAAUAMCIAAHQSAAABAAAAAAAAAKQ0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAF4oEAAAChT+BgIAAAZzEQAACm8SAAAKKhMwAgCUAAAAAQAA
EXIBAABwCgNvEwAACnInAABwbxQAAAosEQZyUwAAcCgVAAAKKBYAAAoqA28TAAAKcocAAHBvFAAA
CiwRBnKhAABwKBUAAAooFgAACioDbxMAAApywwAAcG8UAAAKLBEGcucAAHAoFQAACigWAAAKKgNv
EwAACnITAQBwbxQAAAosEQZyJQEAcCgVAAAKKBYAAAoqFCoTMAUAtgAAAAIAABECKBcAAApvGAAA
CnI/AQBwbxkAAApvGgAACnQdAAABKBsAAApyYQEAcCgcAAAKbx0AAAooAQAAKxZvHwAACnJlAQBw
KBwAAApvIAAACm8hAAAKbyIAAAoKAigXAAAKbxgAAApyiwEAcG8ZAAAKbxoAAAp0HQAAAXMjAAAK
CwcXbyQAAAoHG28lAAAKBxQUFCgmAAAKcrEBAHAGchcCAHAoJwAACm8oAAAKAigXAAAKFm8pAAAK
Kh4CKCoAAAoqHgIoKwAACiqufgEAAAQtHnIhAgBw0AMAAAIoLAAACm8tAAAKcy4AAAqAAQAABH4B
AAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigvAAAKKi5zCgAABoADAAAEKkJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAEgFAAAjfgAAtAUAAAAIAAAjU3RyaW5ncwAAAAC0DQAA
lAIAACNVUwBIEAAAEAAAACNHVUlEAAAAWBAAABwCAAAjQmxvYgAAAAAAAAACAAABVx2iCQkLAAAA
+gEzABYAAAEAAAAxAAAABQAAAAYAAAALAAAAAwAAAC8AAAACAAAAEAAAAAIAAAACAAAAAwAAAAQA
AAABAAAAAQAAAAkAAAABAAAAAQAAAAEAAAAAALkEAQAAAAAABgCtAjcGBgA8AzcGBgD5ASQGDwCr
BgAABgAmAmcFBgCQAmcFBgBxAmcFBgAjA2cFBgDNAmcFBgDmAmcFBgA9AmcFBgBYAiEECgABA2gE
CgByAWgEBgD1B2cFBgCnB+oEBgBaB+oEDgAPBIUFBgDxBOoEBgDcASQGBgDOBVcGBgB5BVIFEgCs
AaMEEgANAqMEEgCOASkFBgDBATcGBgANBeoEBgDeBeoEBgA9BOoEBgBEBC4ACgCRBGgEFgAUB+sA
FgCbAOsAGgDVB6cFGgDcAKcFGgDyBacFBgABAHAAHgCkALcFBgAeAHAAIgBCBZ4FIgClA54FDgAK
BoUFIgDeB/YDJgBfACQBBgAPAOoEJgA+B7oGJgAnB7oGBgATAeoEBgCvAOoEAAAAACUAAAAAAAEA
AQABAAAAAgXSAzkAAQABAAAAEABeBuEGQQABAAUAAAEQAB4H4QZlAAMACQADAQAAiQcAAE0ABAAM
ABEA9gQYAREAYgEcAREAiwAgAQYGVwAkAVaAeQcnAVaAQgEnAVAgAAAAAJEYHQYrAQEAaCAAAAAA
kQCDAy8BAQAIIQAAAACGAAgFBgADAMohAAAAAIYYFwYGAAMA0iEAAAAAgxgXBgYAAwDaIQAAAACT
CMoFNwEDAAYiAAAAAJMISgE8AQMADSIAAAAAkwhWAUEBAwAVIgAAAACWCLoHRwEEABwiAAAAAIYY
FwYGAAQAJCIAAAAAkRgdBisBBAAAAAEAwwUAAAIAawcAAAEAZAMJABcGAQARABcGBgAZABcGCgAp
ABcGEAAxABcGEAA5ABcGEABBABcGEABJABcGEABRABcGEABZABcGEABhABcGEABpABcGBgChABcG
BgDBABcGFQDRABcGBgDZABcFGwDhABcGIADZAG8DJgCJAOIAMADpAHAHNADxAAsBOQB5ANMAPwBx
AIEHSwD5ABAHUAABAeEEVgAJAVoDXQARAaYBYQAZAa4HaAAhAZcHbwAxAeoHfQAMAOEEngAhAdYH
pAARAVoDMACBADsEMACRABcGBgCRAD4FrQCRAKEDtABRAQMEuwDpAKAH1wBZAWoDEAD5AMYHAQBx
ABcGBgCBABcGBgCBAcEA3gCBAfEH5wCpABcG7ADJABcGBgAIABQADgEIABgAEwEpAHMAgwEuAAsA
WwEuABMAZAEuABsAgwEuACMAjAEuACsAtQEuADMAtQEuADsAtQEuAEMAjAEuAEsAuwEuAFMAtQEu
AFsA0gFDAGMAEwFJAHMAgwFhAHsAEwFjAGsAEwEsAEUAAwABAAQAAwAAAM4FTAEAAGoBUQEAAL4H
VgECAAYAAwACAAcABQABAAgABQACAAkABwCVAASAAAABAAAAOB3qdgAAAAAAAK4DAAAEAAAAAAAA
AAAAAADzAGcAAAAAAA4AAAAAAAAAAAAAAPwASQQAAAAAAQAFAAAABgAAAAAAAACRBQAAAAAEAAAA
AAAAAAAAAADzAOoEAAAAAA4AAAAAAAAAAAAAAPwAOAAAAAAABAAAAAAAAAAAAAAA8wCnBQAAAAAE
AAAAAAAAAAAAAADzABgBAAAAAAEAIADxCwAAAAAAAAUBngUAAAAAAQAFAAAABQAAAAAAAAD9BQAA
AAAAAAAAAQAAAGgGAAAFAAIAPQCPAAAAAElFbnVtZXJhYmxlYDEARXZlbnRIYW5kbGVyYDEATGlz
dGAxADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFs
dWVfXwBDc3NEYXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAGRlZmF1bHRJ
bnN0YW5jZQBWYXJpYWJsZQBFbnVtZXJhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAExvYWRGaWxlAFhOYW1lAGdldF9OYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAQ29tYmluZQBUeXBlAFN5c3RlbS5Db3JlAFRoZUFydE9mRGV2Lkh0bWxSZW5kZXJlci5D
b3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBQYXJzZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFNhdmUAYWRkX0Fzc2Vt
Ymx5UmVzb2x2ZQBDdXJyZW50RG9tYWluX0Fzc2VtYmx5UmVzb2x2ZQBzZXRfUGFnZVNpemUAU1Rf
M2IzMzQzNTIwNDNjNDM0OWIwNWE1NmI3Nzc3NGY1YWYAU1RfOWNjOGQwZjE0YjY3NDQwNWIyN2E1
NTM3OGQ4NDMzY2YAUGRmU2hhcnAuUGRmAEdlbmVyYXRlUGRmAFBkZkdlbmVyYXRlQ29uZmlnAFN5
c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAUGF0aABNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3Jp
cHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfM2IzMzQzNTIwNDNjNDM0OWIw
NWE1NmI3Nzc3NGY1YWYuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AQXBwRG9tYWluAGdldF9DdXJyZW50RG9tYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAHNl
dF9QYWdlT3JpZW50YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24A
Q3VsdHVyZUluZm8AVGhlQXJ0T2ZEZXYuSHRtbFJlbmRlcmVyLlBkZlNoYXJwAFN5c3RlbS5YbWwu
TGlucQBTeXN0ZW0uTGlucQBzZW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBSZXNvbHZlRXZlbnRI
YW5kbGVyAFhDb250YWluZXIASHRtbFJlbmRlcmVyAFBkZkdlbmVyYXRvcgAuY3RvcgAuY2N0b3IA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTVF85Y2M4ZDBmMTRiNjc0NDA1YjI3YTU1Mzc4ZDg0MzNjZi5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAVGhlQXJ0T2ZEZXYuSHRtbFJlbmRl
cmVyLkNvcmUuRW50aXRpZXMAU1RfOWNjOGQwZjE0YjY3NDQwNWIyN2E1NTM3OGQ4NDMzY2YuUHJv
cGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAEh0bWxJbWFnZUxvYWRFdmVudEFyZ3MASHRt
bFN0eWxlc2hlZXRMb2FkRXZlbnRBcmdzAFJlc29sdmVFdmVudEFyZ3MAYXJncwBDb250YWlucwBT
dWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBFbGVtZW50cwBDb25jYXQAT2JqZWN0AG9wX0lt
cGxpY2l0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFhFbGVtZW50AFBkZkRvY3VtZW50AFRv
TGlzdABnZXRfQXNzZW1ibHkAAAAAJUMAOgBcAFQARQBNAFAAXABsAGkAYgByAGEAcgBpAGUAcwBc
AAArSAB0AG0AbABSAGUAbgBkAGUAcgBlAHIALgBQAGQAZgBTAGgAYQByAHAAADNIAHQAbQBsAFIA
ZQBuAGQAZQByAGUAcgAuAFAAZABmAFMAaABhAHIAcAAuAGQAbABsAAAZSAB0AG0AbABSAGUAbgBk
AGUAcgBlAHIAACFIAHQAbQBsAFIAZQBuAGQAZQByAGUAcgAuAGQAbABsAAAjUABkAGYAUwBoAGEA
cgBwAC4AQwBoAGEAcgB0AGkAbgBnAAArUABkAGYAUwBoAGEAcgBwAC4AQwBoAGEAcgB0AGkAbgBn
AC4AZABsAGwAABFQAGQAZgBTAGgAYQByAHAAABlQAGQAZgBTAGgAYQByAHAALgBkAGwAbAAAIVUA
cwBlAHIAOgA6AHYAYQByAFgATQBMAEQAYQB0AGEAAAN0AAAlRQB4AHQAZQByAG4AYQBsAEQAbwBj
AHUAbQBlAG4AdABOAG8AACVVAHMAZQByADoAOgB2AGEAcgBYAE0ATAB0AG8ASABUAE0ATAAAZUMA
OgBcAEYAcgBhAG4AYwBoAGkAcwBlAFIAZQBiAGEAdABlAFwAUABEAEYAXABGAHIAYQBuAGMAaABp
AHMAZQBPAG4AbABpAG4AZQBTAGEAbABlAHMAUgBlAGIAYQB0AGUAXwAACS4AcABkAGYAAHFTAFQA
XwA5AGMAYwA4AGQAMABmADEANABiADYANwA0ADQAMAA1AGIAMgA3AGEANQA1ADMANwA4AGQAOAA0
ADMAMwBjAGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAB7RYKo
z+80QpFThBVTjy3kAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdBAAAEm0FIAIBHBgFIAEBEnED
BwEOAyAADgQgAQIOBQACDg4OBQABEj0OBQcCDhJJBCAAEn0FIAASgIEGIAESgIUcAyAAHAYAARKA
iQ4GAAESgI0ODSABFRKAlQESgIkSgI0REAEBFRKAnQEeABUSgJUBHgAFCgESgIkIFRKAnQESgIkF
IAETAAgIIAESgIkSgI0GIAEBEYChBiABARGApRsABRKArQ4SSRKAsRUSgLUBEoC5FRKAtQESgL0G
AAMODg4OCAABEoDBEYDFBCAAEj0GIAIBDhI9CLd6XFYZNOCJCImEXc2AgMyRCPlGFaoEJPnrBAAA
AAAEAQAAAAMGElUDBhJZAwYSEAIGCAMGERQDAAABBwACEj0cEkUEAAASVQQAABJZBQABARJZBAAA
EhAECAASVQQIABJZBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUXzljYzhkMGYxNGI2NzQ0MDViMjdhNTUzNzhkODQzM2NmAAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41tAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAIQ1AAAA
AAAAAAAAAJ41AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQNQAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDqdjgdAAABAOp2OB0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADkAYwBjADgAZAAwAGYAMQA0AGIANgA3ADQANAAwADUAYgAyADcAYQA1ADUAMwA3ADgA
ZAA4ADQAMwAzAGMAZgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADQAOAAwAC4AMwAwADQANAAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADMAYgAzADMANAAzADUAMgAwADQAMwBjADQAMwA0ADkAYgAwADUAYQA1ADYAYgA3ADcANwA3
ADQAZgA1AGEAZgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AMwBiADMAMwA0ADMANQAyADAANAAzAGMANAAzADQAOQBiADAANQBhADUANgBi
ADcANwA3ADcANABmADUAYQBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADkAYwBjADgAZAAwAGYAMQA0AGIANgA3ADQANAAwADUAYgAyADcAYQA1ADUAMwA3
ADgAZAA4ADQAMwAzAGMAZgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwA0ADgAMAAuADMAMAA0ADQAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwA0ADgAMAAuADMAMAA0ADQAMgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACwNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{8f597c5e-e707-4951-a553-d06a3092b4d1}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_68d0de944c66430a8c7c923a24b7806b"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::varXMLData">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_68d0de944c66430a8c7c923a24b7806b.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{7D197C9C-A141-4A6D-9939-DA34A63D4A52}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_76b3e1af688a4affb9322c49b9d1158e</RootNamespace><AssemblyName>ST_68d0de944c66430a8c7c923a24b7806b</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="Docentric.Documents"><HintPath>\\VM-ARIES\S_Drive\John Nehme\Docentric\Toolkit\Example Browser\bin\Docentric.Documents.dll</HintPath></Reference><Reference Include="Docentric.Examples.Data"><HintPath>\\VM-ARIES\S_Drive\John Nehme\Docentric\Toolkit\Example Browser\bin\Docentric.Examples.Data.dll</HintPath></Reference><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="System.Xml.Linq" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><ItemGroup><PackageReference Include="System.Xml.Linq"><Version>3.5.21022.801</Version></PackageReference></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST140</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Docentric.Documents;
using Docentric.Documents.Reporting;
using System.Xml.Linq;
using System.Linq;
using System.Collections.Generic;


#endregion

namespace ST_76b3e1af688a4affb9322c49b9d1158e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.S
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{

            string s = (string)Dts.Variables["User::varXMLData"].Value;
            string s1 = s.Replace("<ROOT>", "");
            string s2 = s1.Replace("</ROOT>", "");
            Dts.Variables["User::varXMLData"].Value = s2;

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_c4884ee9d3ce4a6898185af9bfd22b3d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_c4884ee9d3ce4a6898185af9bfd22b3d</msb:DisplayName>
    <msb:ProjectId>{56B77FA6-C6F5-4984-8199-EE7DCD443AB2}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_68d0de944c66430a8c7c923a24b7806b.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Settings.get_Default():ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Sett" +
    "ings")]

namespace ST_76b3e1af688a4affb9322c49b9d1158e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_76b3e1af688a4affb9322c49b9d1158e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_76b3e1af688a4affb9322c49b9d1158e")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_76b3e1af688a4affb9322c49b9d1158e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_c4884ee9d3ce4a6898185af9bfd22b3d.dll">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
AAAAAA4AAAAAAAAAAAAAAFoACgAAAAAAAAAAAAEAAACqBAAABQACAAAAAAAAPE1vZHVsZT4ATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU1RfYzQ4ODRlZTlk
M2NlNGE2ODk4MTg1YWY5YmZkMjJiM2QAU1RfNzZiM2UxYWY2ODhhNGFmZmI5MzIyYzQ5YjlkMTE1
OGUAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1
cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9i
amVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFN0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAU1RfYzQ4ODRlZTlkM2NlNGE2ODk4MTg1YWY5YmZkMjJiM2QuZGxsAGdldF9J
dGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0
X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF83NmIzZTFhZjY4OGE0
YWZmYjkzMjJjNDliOWQxMTU4ZS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdn
aW5nTW9kZXMAU1RfNzZiM2UxYWY2ODhhNGFmZmI5MzIyYzQ5YjlkMTE1OGUuUHJvcGVydGllcwBn
ZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVj
dABnZXRfRGVmYXVsdABnZXRfQXNzZW1ibHkAACFVAHMAZQByADoAOgB2AGEAcgBYAE0ATABEAGEA
dABhAAANPABSAE8ATwBUAD4AAAEADzwALwBSAE8ATwBUAD4AAHFTAFQAXwA3ADYAYgAzAGUAMQBh
AGYANgA4ADgAYQA0AGEAZgBmAGIAOQAzADIAMgBjADQAOQBiADkAZAAxADEANQA4AGUALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAL7rL4/61dlPnTg6pC4t5ekA
BCABAQgDIAABBSABARERBCABAQ4FIAEBEVEDBwEOBCAAEmEEIAASZQUgARJpHAMgABwFIAIODg4E
IAEBHAYAARJxEXUEIAASeQYgAgEOEnkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMG
Ek0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzc2YjNl
MWFmNjg4YTRhZmZiOTMyMmM0OWI5ZDExNThlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAA
AEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUS
Lk5FVCBGcmFtZXdvcmsgNC41AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAOAtAAAAAAAAAAAAAPotAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADsLQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAkSzAdAAABACRLMB0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADcANgBiADMAZQAxAGEAZgA2ADgAOABhADQAYQBmAGYAYgA5ADMAMgAyAGMANAA5
AGIAOQBkADEAMQA1ADgAZQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADQANwAyAC4AMQA5ADIAMwA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGMANAA4ADgANABlAGUAOQBkADMAYwBlADQAYQA2ADgAOQA4ADEAOAA1AGEAZgA5AGIA
ZgBkADIAMgBiADMAZAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYwA0ADgAOAA0AGUAZQA5AGQAMwBjAGUANABhADYAOAA5ADgAMQA4ADUA
YQBmADkAYgBmAGQAMgAyAGIAMwBkAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADcANgBiADMAZQAxAGEAZgA2ADgAOABhADQAYQBmAGYAYgA5ADMAMgAyAGMA
NAA5AGIAOQBkADEAMQA1ADgAZQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA0ADcAMgAuADEAOQAyADMANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA0ADcAMgAuADEAOQAyADMANgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAMPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Send Email"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{804fa2d1-19ba-4a31-a893-6918bea9ff6d}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Send Email"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_f851223168b946e6bcd3793bc17bac37"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::varXMLData,User::varXMLtoHTML,$Project::varMailToProj"
              ReadWriteVariables="User::varExtDocNo">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Settings.get_Default():ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Sett" +
    "ings")]

namespace ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_f851223168b946e6bcd3793bc17bac37.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EB20FC4E-CE8B-4F01-B558-F02EE38B24C0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4d8b20ee55cd4cd0b1af16fea8841408</RootNamespace>
    <AssemblyName>ST_f851223168b946e6bcd3793bc17bac37</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Net;
using System.Xml.Linq;
using System.Collections.Generic;
using System.Linq;
using System.Text;
#endregion

namespace ST_4d8b20ee55cd4cd0b1af16fea8841408
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string filename = (string)Dts.Variables["User::varXMLData"].Value;
            //MessageBox.Show(filename);

            XElement rebatedata = XElement.Parse(filename);

            List<XElement> tnodes = rebatedata.Elements("t").ToList();
            //MessageBox.Show((string)tnodes[0]);

            string ExtDocNo = tnodes[0].Element("ExternalDocumentNo").Value.ToString();
            Dts.Variables["User::varExtDocNo"].Value = ExtDocNo;
            string FranchiseeEmail = tnodes[0].Element("FranchiseeEmail").Value.ToString();

            string htmlMessageFrom = "no-reply@bbqgalore.com.au";
            string htmlMessageTo = Dts.Variables["varMailToProj"].Value.ToString(); //replace this with the FranchiseeEmail
         //   string htmlMessageTo = source.Replace(",", ";");
            string htmlMessageSubject = string.Concat("Franchise Rebate for Online Sales - ",ExtDocNo);

            string htmlMessageBody = "This email is auto-generated and details the report for the Franchise Online Sales rebate which applies to External Document No.: " + ExtDocNo + ".<br /><br />If you have any questions about this or any other web rebate, please do not reply to this email, but rather, please contact your FBM.<br /><br />Regards,<br /><br />Franchise Online Sales Rebate Calculator";
            string smtpServer = "192.168.1.71";
            string pathToAttachment = @"C:\FranchiseRebate\PDF\FranchiseOnlineSalesRebate_" + ExtDocNo + ".pdf";

            SendMailMessage(htmlMessageFrom, htmlMessageTo, htmlMessageSubject, htmlMessageBody, true, smtpServer, pathToAttachment);

            Dts.TaskResult = (int)ScriptResults.Success;

        }

        private void SendMailMessage(string From, string SendTo, string Subject, string Body, bool IsBodyHtml, string Server, string pathToAtt)
        {

            MailMessage htmlMessage;
            SmtpClient mySmtpClient;
           
            htmlMessage = new MailMessage(From, SendTo, Subject, Body);
            htmlMessage.IsBodyHtml = IsBodyHtml;
            htmlMessage.Attachments.Add(new Attachment(pathToAtt));
            MailAddress bcc1 = new MailAddress("john.nehme@bbqgalore.com.au");
            MailAddress bcc2 = new MailAddress("scot.barker@bbqgalore.com.au");
            htmlMessage.Bcc.Add(bcc1);
            htmlMessage.Bcc.Add(bcc2);

            mySmtpClient = new SmtpClient(Server);
            mySmtpClient.Credentials = CredentialCache.DefaultNetworkCredentials;
            mySmtpClient.Send(htmlMessage);

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f851223168b946e6bcd3793bc17bac37</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f851223168b946e6bcd3793bc17bac37</msb:DisplayName>
    <msb:ProjectId>{97DA50FD-F404-4E4B-9AF4-3A3059FED9EA}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f851223168b946e6bcd3793bc17bac37.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4d8b20ee55cd4cd0b1af16fea8841408")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4d8b20ee55cd4cd0b1af16fea8841408")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_f851223168b946e6bcd3793bc17bac37.dll">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
CQA+IgAAAACRGJ8FRQEJAAAAAQC8BAAAAgBEBQAAAwABBwAABAB+BwAABQChBAAABgCSBQAABwB0
BwAAAQCbAwkAmQUBABEAmQUGABkAmQUKACkAmQUQADEAmQUQADkAmQUQAEEAmQUQAEkAmQUQAFEA
mQUQAFkAmQUQAGEAmQUQAGkAmQUGAJEAmQUGALkAmQUVAMkAmQUGAHEAxAYlANEAawYqANkArAQv
AOEAhwM1APEA0wE5APkAFAc/AAEB2gZFABEBWgdRAAwArARwAAEBRwd2APEAhwN9AJkAuwN9AOEA
kQOBAOkA8waGAOkA8waMANEALAcBAHkAmQWcAHkAnQSkAHkA4wapACkBmQUQABQAxwC4AIEAmQUQ
AHkApAC+ABwAxwC4AEEBmQUQAEkBkgbMAEEBggbSAEEBywDZAHEAmQUGAJkAmQUGAGEBJgHfAGEB
gwfoAKEAmQXuAMEAmQUGAAgAFAAIAQgAGAANASkAcwCAAS4ACwBYAS4AEwBhAS4AGwCAAS4AIwCJ
AS4AKwCyAS4AMwCyAS4AOwCyAS4AQwCJAS4ASwC4AS4AUwCyAS4AWwDPAUMAYwANAUkAcwCAAWEA
ewANAWMAawANARsAkwADAAEABAADAAAAdwVJAQAAlwFOAQAAJAdTAQIABQADAAIABgAFAAEABwAF
AAIACAAHAGgArwDEAASAAAABAAAAOB0fegAAAAAAACMAAAAEAAAAAAAAAAAAAAD2AJsAAAAAAA4A
AAAAAAAAAAAAAP8AxAMAAAAABAAAAAAAAAAAAAAA9gC1BAAAAAAOAAAAAAAAAAAAAAD/AHQAAAAA
AAQAAAAAAAAAAAAAAPYAVwUAAAAABAAAAAAAAAAAAAAA9gBjAQAAAAAAAAAAAQAAAOoFAAAFAAIA
LwBjAAAAAAAASUVudW1lcmFibGVgMQBDb2xsZWN0aW9uYDEATGlzdGAxAFNUX2Y4NTEyMjMxNjhi
OTQ2ZTZiY2QzNzkzYmMxN2JhYzM3AFNUXzRkOGIyMGVlNTVjZDRjZDBiMWFmMTZmZWE4ODQxNDA4
ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGli
AGdldF9CY2MAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRkAFNlbmQAZGVmYXVsdEluc3Rh
bmNlAFNlbmRNYWlsTWVzc2FnZQBDcmVkZW50aWFsQ2FjaGUAVmFyaWFibGUARW51bWVyYWJsZQBS
dW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBYTmFtZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFR5cGUAU3lzdGVtLkNvcmUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAFBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2Vu
ZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0
dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1i
bHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29t
cGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRl
AEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBn
ZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJp
bmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sATmV0d29ya0NyZWRlbnRpYWwAU3lzdGVtLkNvbGxlY3Rpb25zLk9i
amVjdE1vZGVsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0u
TmV0Lk1haWwAU1RfZjg1MTIyMzE2OGI5NDZlNmJjZDM3OTNiYzE3YmFjMzcuZGxsAHNldF9Jc0Jv
ZHlIdG1sAGdldF9JdGVtAFN5c3RlbQBGcm9tAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlv
bgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24AQXR0YWNobWVudENvbGxlY3Rpb24AU2VuZFRvAEN1bHR1
cmVJbmZvAFN5c3RlbS5YbWwuTGlucQBTeXN0ZW0uTGlucQBnZXRfUmVzb3VyY2VNYW5hZ2VyAFhD
b250YWluZXIAU2VydmVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1
bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzRkOGIyMGVlNTVjZDRj
ZDBiMWFmMTZmZWE4ODQxNDA4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dp
bmdNb2RlcwBTVF80ZDhiMjBlZTU1Y2Q0Y2QwYjFhZjE2ZmVhODg0MTQwOC5Qcm9wZXJ0aWVzAGdl
dF9WYXJpYWJsZXMAU2V0dGluZ3MAc2V0X0NyZWRlbnRpYWxzAGdldF9EZWZhdWx0TmV0d29ya0Ny
ZWRlbnRpYWxzAFN1Y2Nlc3MATWFpbEFkZHJlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEVsZW1l
bnRzAGdldF9BdHRhY2htZW50cwBDb25jYXQAT2JqZWN0AFN1YmplY3QAU3lzdGVtLk5ldABvcF9J
bXBsaWNpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AFhFbGVtZW50AEF0
dGFjaG1lbnQAVG9MaXN0AElDcmVkZW50aWFsc0J5SG9zdABwYXRoVG9BdHQAQm9keQBnZXRfQXNz
ZW1ibHkAACFVAHMAZQByADoAOgB2AGEAcgBYAE0ATABEAGEAdABhAAADdAAAJUUAeAB0AGUAcgBu
AGEAbABEAG8AYwB1AG0AZQBuAHQATgBvAAAjVQBzAGUAcgA6ADoAdgBhAHIARQB4AHQARABvAGMA
TgBvAAAfRgByAGEAbgBjAGgAaQBzAGUAZQBFAG0AYQBpAGwAADNuAG8ALQByAGUAcABsAHkAQABi
AGIAcQBnAGEAbABvAHIAZQAuAGMAbwBtAC4AYQB1AAEbdgBhAHIATQBhAGkAbABUAG8AUAByAG8A
agAASUYAcgBhAG4AYwBoAGkAcwBlACAAUgBlAGIAYQB0AGUAIABmAG8AcgAgAE8AbgBsAGkAbgBl
ACAAUwBhAGwAZQBzACAALQAgAAGBBVQAaABpAHMAIABlAG0AYQBpAGwAIABpAHMAIABhAHUAdABv
AC0AZwBlAG4AZQByAGEAdABlAGQAIABhAG4AZAAgAGQAZQB0AGEAaQBsAHMAIAB0AGgAZQAgAHIA
ZQBwAG8AcgB0ACAAZgBvAHIAIAB0AGgAZQAgAEYAcgBhAG4AYwBoAGkAcwBlACAATwBuAGwAaQBu
AGUAIABTAGEAbABlAHMAIAByAGUAYgBhAHQAZQAgAHcAaABpAGMAaAAgAGEAcABwAGwAaQBlAHMA
IAB0AG8AIABFAHgAdABlAHIAbgBhAGwAIABEAG8AYwB1AG0AZQBuAHQAIABOAG8ALgA6ACAAAYG1
LgA8AGIAcgAgAC8APgA8AGIAcgAgAC8APgBJAGYAIAB5AG8AdQAgAGgAYQB2AGUAIABhAG4AeQAg
AHEAdQBlAHMAdABpAG8AbgBzACAAYQBiAG8AdQB0ACAAdABoAGkAcwAgAG8AcgAgAGEAbgB5ACAA
bwB0AGgAZQByACAAdwBlAGIAIAByAGUAYgBhAHQAZQAsACAAcABsAGUAYQBzAGUAIABkAG8AIABu
AG8AdAAgAHIAZQBwAGwAeQAgAHQAbwAgAHQAaABpAHMAIABlAG0AYQBpAGwALAAgAGIAdQB0ACAA
cgBhAHQAaABlAHIALAAgAHAAbABlAGEAcwBlACAAYwBvAG4AdABhAGMAdAAgAHkAbwB1AHIAIABG
AEIATQAuADwAYgByACAALwA+ADwAYgByACAALwA+AFIAZQBnAGEAcgBkAHMALAA8AGIAcgAgAC8A
PgA8AGIAcgAgAC8APgBGAHIAYQBuAGMAaABpAHMAZQAgAE8AbgBsAGkAbgBlACAAUwBhAGwAZQBz
ACAAUgBlAGIAYQB0AGUAIABDAGEAbABjAHUAbABhAHQAbwByAAAZMQA5ADIALgAxADYAOAAuADEA
LgA3ADEAAGVDADoAXABGAHIAYQBuAGMAaABpAHMAZQBSAGUAYgBhAHQAZQBcAFAARABGAFwARgBy
AGEAbgBjAGgAaQBzAGUATwBuAGwAaQBuAGUAUwBhAGwAZQBzAFIAZQBiAGEAdABlAF8AAAkuAHAA
ZABmAAA3agBvAGgAbgAuAG4AZQBoAG0AZQBAAGIAYgBxAGcAYQBsAG8AcgBlAC4AYwBvAG0ALgBh
AHUAADlzAGMAbwB0AC4AYgBhAHIAawBlAHIAQABiAGIAcQBnAGEAbABvAHIAZQAuAGMAbwBtAC4A
YQB1AABxUwBUAF8ANABkADgAYgAyADAAZQBlADUANQBjAGQANABjAGQAMABiADEAYQBmADEANgBm
AGUAYQA4ADgANAAxADQAMAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAAAwkOOQNCJCE+41n8QXH/S0AAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQkHBw4ODg4O
Dg4EIAASaQQgABJtBSABEnEcAyAAHAUAARJ5DgUAARJ9DgsgARUSgIUBEnkSfREQAQEVEoCNAR4A
FRKAhQEeAAQKARJ5BxUSgI0BEnkFIAETAAgGIAESeRJ9AyAADgQgAQEcBQACDg4OBgADDg4ODggH
AxI9EkESQQcgBAEODg4OBCABAQIFIAASgJEIFRKAmQESgJUFIAEBEwAFIAASgJ0HFRKAmQESQQUA
ABKAqQYgAQESgK0FIAEBEj0IAAESgLERgLUFIAASgLkHIAIBDhKAuQi3elxWGTTgiQiJhF3NgIDM
kQQAAAAABAEAAAADBhJRAwYSVQMGEhACBggDBhEUCiAHAQ4ODg4CDg4EAAASUQQAABJVBQABARJV
BAAAEhADAAABBAgAElEECAASVQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTVF80ZDhiMjBlZTU1Y2Q0Y2QwYjFhZjE2ZmVhODg0MTQwOAAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAADINwAAAAAAAAAAAADiNwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1DcAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAB96OB0AAAEAH3o4HT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8ANABkADgAYgAyADAAZQBlADUANQBjAGQANABjAGQAMABiADEAYQBmADEANgBmAGUAYQA4
ADgANAAxADQAMAA4AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcA
NAA4ADAALgAzADEAMgA2ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AZgA4ADUAMQAyADIAMwAxADYAOABiADkANAA2AGUANgBiAGMAZAAzADcAOQAzAGIAYwAxADcA
YgBhAGMAMwA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwBmADgANQAxADIAMgAzADEANgA4AGIAOQA0ADYAZQA2AGIAYwBkADMANwA5ADMA
YgBjADEANwBiAGEAYwAzADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8ANABkADgAYgAyADAAZQBlADUANQBjAGQANABjAGQAMABiADEAYQBmADEANgBmAGUA
YQA4ADgANAAxADQAMAA4AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA3ADQAOAAwAC4AMwAxADIANgAzAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA3ADQAOAAwAC4AMwAxADIANgAzAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAPQ3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Update 'paid' to 'sent'"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{38b9b399-7914-4f4b-978e-4871b8f00b13}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update 'paid' to 'sent'"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"update [Nav_Processes].[Reports].[FranchiseRebate] set [Status] = 'sent' where [ExternalDocumentNo]='" + @[User::varExtDocNo] + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="update [Nav_Processes].[Reports].[FranchiseRebate] set [Status] = 'sent' where [ExternalDocumentNo]='0'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D9264E8A-5E21-4AAA-B50A-D0CF9BDC6DE8}"
          DTS:From="Package\Foreach Loop Container\Get the Paid PSIs to create report and save as PDF"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Script Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{35C1739B-5FD4-41DE-A354-56AB445D28C6}"
          DTS:From="Package\Foreach Loop Container\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Reformat results in HTML" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{EBADC62B-C428-46FC-A6F5-975AC23413C3}"
          DTS:From="Package\Foreach Loop Container\Reformat results in HTML"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Save as PDF" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{6CACC004-A234-4964-8550-C78005F11581}"
          DTS:From="Package\Foreach Loop Container\Save as PDF"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Send Email" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{1DD06530-2B50-4CE0-AB02-D0443A1AAAD6}"
          DTS:From="Package\Foreach Loop Container\Send Email"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Loop Container\Update 'paid' to 'sent'" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{A3FBD6A7-ABB6-4113-BFCD-290CE1F849B4}"
          DTS:From="Package\Foreach Loop Container\Reformat results in HTML"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach Loop Container\Execute SQL Task"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{DEC7F4F3-98CC-4968-B045-7AE8C4332C0B}"
          DTS:ObjectName="{DEC7F4F3-98CC-4968-B045-7AE8C4332C0B}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::varExtDocNoSelector" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get rowcount of all 'paid'"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{9ff68864-c719-4f0d-aaf9-9245d91320ef}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get rowcount of all 'paid'"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="select  count(distinct(r.[No_])) as rowct&#xA;from [Nav_Processes].[Reports].[FranchiseRebate] r&#xA;where r.[Status]='paid'&#xA;"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::RowNo" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop Query Paid, Output to PDF builder"
      DTS:AssignExpression="@IncrementValue = @IncrementValue+1"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:Disabled="True"
      DTS:DTSID="{3F7E899F-91BE-4AFB-901D-CBB7287A419A}"
      DTS:EvalExpression="@IncrementValue&lt;=@RowNo"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:ForceExecutionResult="0"
      DTS:InitExpression="@IncrementValue=1"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:MaxErrorCount="0"
      DTS:ObjectName="Loop Query Paid, Output to PDF builder">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop Query Paid, Output to PDF builder\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{BA4FBEF6-748B-47A7-A7C4-C4002334D2AD}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="select count(distinct(r.[No_])) from [Nav_Processes].[Reports].[FranchiseRebate] r where r.[Status]='paid';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop Query Paid, Output to PDF builder\Get the Paid PSIs to create report and save as PDF"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{86e744f7-f247-4f00-a46c-344e3368d239}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get the Paid PSIs to create report and save as PDF"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="1" />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"select t.*
from (
select dense_rank() over (order by r.[No_] asc) as rwn
 ,c.[E-Mail] as [FranchiseeEmail]
 ,o.[E-Mail] as [CustomerEmail],c.[Name],c.[Address],c.[Address 2],c.[City],c.[County] as [State],c.[Post Code] as [PostCode],r.*

from [Nav_Processes].[Reports].[FranchiseRebate] r

left
join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] c
on  r.[Franchisee]=c.[No_]

left
join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] o
on  r.[SelltoCustNo]=o.[No_] 

where [Status]='paid'
) t
where t.rwn="+ TRIM((DT_WSTR,3)@[User::IncrementValue])  +"
FOR XML auto, elements,type,root('Rebates') OPTION (FAST 100)"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="select t.*&#xA;from (&#xA;select dense_rank() over (order by r.[No_] asc) as rwn&#xA; ,c.[E-Mail] as [FranchiseeEmail]&#xA; ,o.[E-Mail] as [CustomerEmail],c.[Name],c.[Address],c.[Address 2],c.[City],c.[County] as [State],c.[Post Code] as [PostCode],r.*&#xA;&#xA;from [Nav_Processes].[Reports].[FranchiseRebate] r&#xA;&#xA;left&#xA;join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] c&#xA;on  r.[Franchisee]=c.[No_]&#xA;&#xA;left&#xA;join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] o&#xA;on  r.[SelltoCustNo]=o.[No_] &#xA;&#xA;where [Status]='paid'&#xA;) t&#xA;where t.rwn=1&#xA;FOR XML auto, elements,type,root('Rebates') OPTION (FAST 100)"
              SQLTask:ResultType="ResultSetType_XML" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::varXMLData" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop Query Paid, Output to PDF builder\Reformat results in HTML"
          DTS:CreationName="Microsoft.XMLTask"
          DTS:Description="XML Task"
          DTS:DTSID="{8960BF81-FE36-4BA7-AAEA-2F60BA48DEDF}"
          DTS:ExecutableType="Microsoft.XMLTask"
          DTS:LocaleID="-1"
          DTS:MaxErrorCount="0"
          DTS:ObjectName="Reformat results in HTML"
          DTS:TaskContact="XML Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <XMLTaskData
              OperationType="XSLT"
              SourceType="Variable"
              Source="User::varXMLData"
              SecondOperandType="FileConnection"
              SecondOperand="FranchiseWebRebate2.xsl"
              SaveOperationResult="True"
              DestinationType="Variable"
              Destination="User::varXMLtoHTML"
              OverwriteDestination="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop Query Paid, Output to PDF builder\Save as PDF"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{A77589D6-8D68-486A-ACA6-D890A6F5B005}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Save as PDF"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_9cc8d0f14b674405b27a55378d8433cf"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::RowNo,User::varXMLData,User::varXMLtoHTML">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9cc8d0f14b674405b27a55378d8433cf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9cc8d0f14b674405b27a55378d8433cf")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using PdfSharp;
using PdfSharp.Charting;
using TheArtOfDev.HtmlRenderer;
using TheArtOfDev.HtmlRenderer.PdfSharp;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using PdfSharp.Pdf;
using System.Xml.Linq;
using System.Collections.Generic;
using System.Linq;
#endregion

namespace ST_9cc8d0f14b674405b27a55378d8433cf
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>


        static ScriptMain()
        {
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
        }
        static System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            //Set up a sting package paramter in the SSIS solution. Assign it to a readonly variable, use it to populate the string 'path'.
            //This will enable you to determine on the deployed solution where it needs to pickup the .dll's from, and can be separate from where the debug is picking them up from.
            string path = @"C:\TEMP\libraries\";
            if (args.Name.Contains("HtmlRenderer.PdfSharp"))
            { return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "HtmlRenderer.PdfSharp.dll")); }
            if (args.Name.Contains("HtmlRenderer"))
            {
                return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "HtmlRenderer.dll"));
            }
            if (args.Name.Contains("PdfSharp.Charting"))
            { return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "PdfSharp.Charting.dll")); }
            if (args.Name.Contains("PdfSharp"))
            { return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "PdfSharp.dll")); }

            return null;
        }

        public void Main()
        {
            // TODO: Add your code here
            string filename = (string)Dts.Variables["User::varXMLData"].Value;
            //MessageBox.Show(filename);

            XElement rebatedata = XElement.Parse(filename);

            List<XElement> tnodes = rebatedata.Elements("t").ToList();
            //MessageBox.Show((string)tnodes[0]);

            string ExtDocNo = tnodes[0].Element("ExternalDocumentNo").Value.ToString();
            string varhtml = (string) Dts.Variables["User::varXMLtoHTML"].Value;
            string rowno = Dts.Variables["User::RowNo"].Value.ToString();
            var config = new PdfGenerateConfig();
            config.PageOrientation = PageOrientation.Landscape;
            config.PageSize = PageSize.A4;
            PdfDocument pdf = PdfGenerator.GeneratePdf(varhtml, config);
            pdf.Save(@"C:\FranchiseRebate\PDF\FranchiseOnlineSalesRebate_"+ ExtDocNo+".pdf");
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_9cc8d0f14b674405b27a55378d8433cf.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F6F4DE24-F16A-4F74-8779-D3B33A0D952D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9cc8d0f14b674405b27a55378d8433cf</RootNamespace>
    <AssemblyName>ST_9cc8d0f14b674405b27a55378d8433cf</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="HtmlRenderer">
      <HintPath>C:\TEMP\libraries\HtmlRenderer.dll</HintPath>
    </Reference>
    <Reference Include="HtmlRenderer.PdfSharp">
      <HintPath>C:\TEMP\libraries\HtmlRenderer.PdfSharp.dll</HintPath>
    </Reference>
    <Reference Include="PdfSharp">
      <HintPath>C:\TEMP\libraries\PdfSharp.dll</HintPath>
    </Reference>
    <Reference Include="PdfSharp.Charting">
      <HintPath>C:\TEMP\libraries\PdfSharp.Charting.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Connected Services\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9cc8d0f14b674405b27a55378d8433cf</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9cc8d0f14b674405b27a55378d8433cf</msb:DisplayName>
    <msb:ProjectId>{6CAC53FA-9EA2-4E37-ACEB-D8B9044A10C7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_9cc8d0f14b674405b27a55378d8433cf.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Settings.get_Default():ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Sett" +
    "ings")]

namespace ST_9cc8d0f14b674405b27a55378d8433cf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9cc8d0f14b674405b27a55378d8433cf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_9cc8d0f14b674405b27a55378d8433cf.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHTA8l4AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAwjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHA1AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAyBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACk
NQAAAAAAAEgAAAACAAUAUCIAAGgSAAABAAAAAAAAALg0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAF4oEAAAChT+BgIAAAZzEQAACm8SAAAKKhMwAgCUAAAAAQAA
EXIBAABwCgNvEwAACnInAABwbxQAAAosEQZyUwAAcCgVAAAKKBYAAAoqA28TAAAKcocAAHBvFAAA
CiwRBnKhAABwKBUAAAooFgAACioDbxMAAApywwAAcG8UAAAKLBEGcucAAHAoFQAACigWAAAKKgNv
EwAACnITAQBwbxQAAAosEQZyJQEAcCgVAAAKKBYAAAoqFCoTMAUA1gAAAAIAABECKBcAAApvGAAA
CnI/AQBwbxkAAApvGgAACnQdAAABKBsAAApyYQEAcCgcAAAKbx0AAAooAQAAKxZvHwAACnJlAQBw
KBwAAApvIAAACm8hAAAKbyIAAAoKAigXAAAKbxgAAApyiwEAcG8ZAAAKbxoAAAp0HQAAAQIoFwAA
Cm8YAAAKcrEBAHBvGQAACm8aAAAKbyIAAAomcyMAAAoLBxdvJAAACgcbbyUAAAoHFBQUKCYAAApy
yQEAcAZyLwIAcCgnAAAKbygAAAoCKBcAAAoWbykAAAoqHgIoKgAACioeAigrAAAKKq5+AQAABC0e
cjkCAHDQAwAAAigsAAAKby0AAApzLgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAE
Kh4CKC8AAAoqLnMKAAAGgAMAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA
SAUAACN+AAC0BQAA3AcAACNTdHJpbmdzAAAAAJANAACsAgAAI1VTADwQAAAQAAAAI0dVSUQAAABM
EAAAHAIAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6ATMAFgAAAQAAADEAAAAFAAAABgAAAAsA
AAADAAAALwAAAAIAAAAQAAAAAgAAAAIAAAADAAAABAAAAAEAAAABAAAACQAAAAEAAAABAAAAAQAA
AAAAlQQBAAAAAAAGAK0CEwYGADwDEwYGAPkBAAYPAIcGAAAGACYCQwUGAJACQwUGAHECQwUGACMD
QwUGAM0CQwUGAOYCQwUGAD0CQwUGAFgC/QMKAAEDRAQKAHIBRAQGANEHQwUGAIMHxgQGADYHxgQO
AOsDYQUGAM0ExgQGANwBAAYGAKoFMwYGAFUFLgUSAKwBfwQSAA0CfwQSAI4BBQUGAMEBEwYGAOkE
xgQGALoFxgQGABkExgQGACAELgAKAG0ERAQWAPAG6wAWAJsA6wAaALEHgwUaANwAgwUaAM4FgwUG
AAEAcAAeAKQAkwUGAB4AcAAiAB4FegUiAKUDegUOAOYFYQUiALoH0gMmAF8AJAEGAA8AxgQmABoH
lgYmAAMHlgYGABMBxgQGAK8AxgQAAAAAJQAAAAAAAQABAAEAAADeBK4DOQABAAEAAAAQADoGvQZB
AAEABQAAARAA+ga9BmUAAwAJAAMBAABlBwAATQAEAAwAEQDSBBgBEQBiARwBEQCLACABBgZXACQB
VoBVBycBVoBCAScBUCAAAAAAkRj5BSsBAQBoIAAAAACRAIMDLwEBAAghAAAAAIYA5AQGAAMA6iEA
AAAAhhjzBQYAAwDyIQAAAACDGPMFBgADAPohAAAAAJMIpgU3AQMAJiIAAAAAkwhKATwBAwAtIgAA
AACTCFYBQQEDADUiAAAAAJYIlgdHAQQAPCIAAAAAhhjzBQYABABEIgAAAACRGPkFKwEEAAAAAQCf
BQAAAgBHBwAAAQBkAwkA8wUBABEA8wUGABkA8wUKACkA8wUQADEA8wUQADkA8wUQAEEA8wUQAEkA
8wUQAFEA8wUQAFkA8wUQAGEA8wUQAGkA8wUGAKEA8wUGAMEA8wUVANEA8wUGANkA8wQbAOEA8wUg
ANkAbwMmAIkA4gAwAOkATAc0APEACwE5AHkA0wA/AHEAXQdLAPkA7AZQAAEBvQRWAAkBWgNdABEB
pgFhABkBigdoACEBcwdvADEBxgd9AAwAvQSeACEBsgekABEBWgMwAIEAFwQwAJEA8wUGAJEAGgWt
AJEAoQO0AFEB3wO7AOkAfAfXAFkBagMQAPkAogcBAHEA8wUGAIEA8wUGAIEBwQDeAIEBzQfnAKkA
8wXsAMkA8wUGAAgAFAAOAQgAGAATASkAcwCDAS4ACwBbAS4AEwBkAS4AGwCDAS4AIwCMAS4AKwC1
AS4AMwC1AS4AOwC1AS4AQwCMAS4ASwC7AS4AUwC1AS4AWwDSAUMAYwATAUkAcwCDAWEAewATAWMA
awATASwARQADAAEABAADAAAAqgVMAQAAagFRAQAAmgdWAQIABgADAAIABwAFAAEACAAFAAIACQAH
AJUABIAAAAEAAAA4HcpaAAAAAAAArgMAAAQAAAAAAAAAAAAAAPMAZwAAAAAADgAAAAAAAAAAAAAA
/AAlBAAAAAABAAUAAAAGAAAAAAAAAG0FAAAAAAQAAAAAAAAAAAAAAPMAxgQAAAAADgAAAAAAAAAA
AAAA/AA4AAAAAAAEAAAAAAAAAAAAAADzAIMFAAAAAAQAAAAAAAAAAAAAAPMAGAEAAAAAAQAgAPEL
AAAAAAAABQF6BQAAAAABAAUAAAAFAAAAAAAAANkFAAAAAAAAAAABAAAARAYAAAUAAgA9AI8AAAAA
SUVudW1lcmFibGVgMQBFdmVudEhhbmRsZXJgMQBMaXN0YDEAPE1vZHVsZT4AU3lzdGVtLklPAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAENzc0RhdGEAbXNjb3JsaWIAU3lz
dGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAEVudW1lcmFi
bGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATG9hZEZpbGUAWE5hbWUAZ2V0
X05hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDb21iaW5lAFR5cGUAU3lzdGVt
LkNvcmUAVGhlQXJ0T2ZEZXYuSHRtbFJlbmRlcmVyLkNvcmUARmFpbHVyZQBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFw
cGxpY2F0aW9uU2V0dGluZ3NCYXNlAFBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBnZXRfVmFsdWUAdmFsdWUAU2F2ZQBhZGRfQXNzZW1ibHlSZXNvbHZlAEN1cnJlbnREb21haW5f
QXNzZW1ibHlSZXNvbHZlAHNldF9QYWdlU2l6ZQBTVF85Y2M4ZDBmMTRiNjc0NDA1YjI3YTU1Mzc4
ZDg0MzNjZgBQZGZTaGFycC5QZGYAR2VuZXJhdGVQZGYAUGRmR2VuZXJhdGVDb25maWcAU3lzdGVt
LlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9i
amVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF85Y2M4ZDBmMTRiNjc0NDA1YjI3YTU1
Mzc4ZDg0MzNjZi5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFp
bgBBcHBEb21haW4AZ2V0X0N1cnJlbnREb21haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24Ac2V0X1Bh
Z2VPcmllbnRhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0
dXJlSW5mbwBUaGVBcnRPZkRldi5IdG1sUmVuZGVyZXIuUGRmU2hhcnAAU3lzdGVtLlhtbC5MaW5x
AFN5c3RlbS5MaW5xAHNlbmRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFJlc29sdmVFdmVudEhhbmRs
ZXIAWENvbnRhaW5lcgBIdG1sUmVuZGVyZXIAUGRmR2VuZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0
ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVz
b3VyY2VzAFNUXzljYzhkMGYxNGI2NzQ0MDViMjdhNTUzNzhkODQzM2NmLlByb3BlcnRpZXMuUmVz
b3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBUaGVBcnRPZkRldi5IdG1sUmVuZGVyZXIu
Q29yZS5FbnRpdGllcwBTVF85Y2M4ZDBmMTRiNjc0NDA1YjI3YTU1Mzc4ZDg0MzNjZi5Qcm9wZXJ0
aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MASHRtbEltYWdlTG9hZEV2ZW50QXJncwBIdG1sU3R5
bGVzaGVldExvYWRFdmVudEFyZ3MAUmVzb2x2ZUV2ZW50QXJncwBhcmdzAENvbnRhaW5zAFN1Y2Nl
c3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEVsZW1lbnRzAENvbmNhdABPYmplY3QAb3BfSW1wbGlj
aXQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAWEVsZW1lbnQAUGRmRG9jdW1lbnQAVG9MaXN0
AGdldF9Bc3NlbWJseQAAAAAlQwA6AFwAVABFAE0AUABcAGwAaQBiAHIAYQByAGkAZQBzAFwAACtI
AHQAbQBsAFIAZQBuAGQAZQByAGUAcgAuAFAAZABmAFMAaABhAHIAcAAAM0gAdABtAGwAUgBlAG4A
ZABlAHIAZQByAC4AUABkAGYAUwBoAGEAcgBwAC4AZABsAGwAABlIAHQAbQBsAFIAZQBuAGQAZQBy
AGUAcgAAIUgAdABtAGwAUgBlAG4AZABlAHIAZQByAC4AZABsAGwAACNQAGQAZgBTAGgAYQByAHAA
LgBDAGgAYQByAHQAaQBuAGcAACtQAGQAZgBTAGgAYQByAHAALgBDAGgAYQByAHQAaQBuAGcALgBk
AGwAbAAAEVAAZABmAFMAaABhAHIAcAAAGVAAZABmAFMAaABhAHIAcAAuAGQAbABsAAAhVQBzAGUA
cgA6ADoAdgBhAHIAWABNAEwARABhAHQAYQAAA3QAACVFAHgAdABlAHIAbgBhAGwARABvAGMAdQBt
AGUAbgB0AE4AbwAAJVUAcwBlAHIAOgA6AHYAYQByAFgATQBMAHQAbwBIAFQATQBMAAAXVQBzAGUA
cgA6ADoAUgBvAHcATgBvAABlQwA6AFwARgByAGEAbgBjAGgAaQBzAGUAUgBlAGIAYQB0AGUAXABQ
AEQARgBcAEYAcgBhAG4AYwBoAGkAcwBlAE8AbgBsAGkAbgBlAFMAYQBsAGUAcwBSAGUAYgBhAHQA
ZQBfAAAJLgBwAGQAZgAAcVMAVABfADkAYwBjADgAZAAwAGYAMQA0AGIANgA3ADQANAAwADUAYgAy
ADcAYQA1ADUAMwA3ADgAZAA4ADQAMwAzAGMAZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAADYjr3SCW+dKp8A6+EiM4PsABCABAQgDIAABBSABARERBCABAQ4FIAEB
EV0EAAASbQUgAgEcGAUgAQEScQMHAQ4DIAAOBCABAg4FAAIODg4FAAESPQ4FBwIOEkkEIAASfQUg
ABKAgQYgARKAhRwDIAAcBgABEoCJDgYAARKAjQ4NIAEVEoCVARKAiRKAjREQAQEVEoCdAR4AFRKA
lQEeAAUKARKAiQgVEoCdARKAiQUgARMACAggARKAiRKAjQYgAQERgKEGIAEBEYClGwAFEoCtDhJJ
EoCxFRKAtQESgLkVEoC1ARKAvQYAAw4ODg4IAAESgMERgMUEIAASPQYgAgEOEj0It3pcVhk04IkI
iYRdzYCAzJEI+UYVqgQk+esEAAAAAAQBAAAAAwYSVQMGElkDBhIQAgYIAwYRFAMAAAEHAAISPRwS
RQQAABJVBAAAElkFAAEBElkEAAASEAQIABJVBAgAElkECAASEAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOWNjOGQwZjE0YjY3NDQwNWIyN2E1
NTM3OGQ4NDMzY2YAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0
LjW0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAmDUAAAAAAAAAAAAAsjUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQ1
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDKWjgdAAABAMpaOB0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADkAYwBjADgAZAAwAGYAMQA0AGIANgA3ADQANAAwADUAYgAyADcAYQA1ADUAMwA3ADgA
ZAA4ADQAMwAzAGMAZgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADQAOAAwAC4AMgAzADIANAAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADkAYwBjADgAZAAwAGYAMQA0AGIANgA3ADQANAAwADUAYgAyADcAYQA1ADUAMwA3ADgAZAA4
ADQAMwAzAGMAZgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AOQBjAGMAOABkADAAZgAxADQAYgA2ADcANAA0ADAANQBiADIANwBhADUANQAz
ADcAOABkADgANAAzADMAYwBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADkAYwBjADgAZAAwAGYAMQA0AGIANgA3ADQANAAwADUAYgAyADcAYQA1ADUAMwA3
ADgAZAA4ADQAMwAzAGMAZgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwA0ADgAMAAuADIAMwAyADQAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwA0ADgAMAAuADIAMwAyADQAMgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADENQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop Query Paid, Output to PDF builder\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{8c88f63e-5840-4d68-bb9a-1e758688e00f}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_c4884ee9d3ce4a6898185af9bfd22b3d"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::varXMLData">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Settings.get_Default():ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Sett" +
    "ings")]

namespace ST_76b3e1af688a4affb9322c49b9d1158e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_c4884ee9d3ce4a6898185af9bfd22b3d.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7D197C9C-A141-4A6D-9939-DA34A63D4A52}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_76b3e1af688a4affb9322c49b9d1158e</RootNamespace>
    <AssemblyName>ST_c4884ee9d3ce4a6898185af9bfd22b3d</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Docentric.Documents">
      <HintPath>\\VM-ARIES\S_Drive\John Nehme\Docentric\Toolkit\Example Browser\bin\Docentric.Documents.dll</HintPath>
    </Reference>
    <Reference Include="Docentric.Examples.Data">
      <HintPath>\\VM-ARIES\S_Drive\John Nehme\Docentric\Toolkit\Example Browser\bin\Docentric.Examples.Data.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="System.Xml.Linq">
      <Version>3.5.21022.801</Version>
    </PackageReference>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Docentric.Documents;
using Docentric.Documents.Reporting;
using System.Xml.Linq;
using System.Linq;
using System.Collections.Generic;


#endregion

namespace ST_76b3e1af688a4affb9322c49b9d1158e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.S
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{

            string s = (string)Dts.Variables["User::varXMLData"].Value;
            string s1 = s.Replace("<ROOT>", "");
            string s2 = s1.Replace("</ROOT>", "");
            Dts.Variables["User::varXMLData"].Value = s2;

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_c4884ee9d3ce4a6898185af9bfd22b3d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_c4884ee9d3ce4a6898185af9bfd22b3d</msb:DisplayName>
    <msb:ProjectId>{56B77FA6-C6F5-4984-8199-EE7DCD443AB2}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c4884ee9d3ce4a6898185af9bfd22b3d.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_76b3e1af688a4affb9322c49b9d1158e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_76b3e1af688a4affb9322c49b9d1158e")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_76b3e1af688a4affb9322c49b9d1158e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_c4884ee9d3ce4a6898185af9bfd22b3d.dll">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
AAAAAA4AAAAAAAAAAAAAAFoACgAAAAAAAAAAAAEAAACqBAAABQACAAAAAAAAPE1vZHVsZT4ATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU1RfYzQ4ODRlZTlk
M2NlNGE2ODk4MTg1YWY5YmZkMjJiM2QAU1RfNzZiM2UxYWY2ODhhNGFmZmI5MzIyYzQ5YjlkMTE1
OGUAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1
cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9i
amVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFN0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAU1RfYzQ4ODRlZTlkM2NlNGE2ODk4MTg1YWY5YmZkMjJiM2QuZGxsAGdldF9J
dGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0
X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF83NmIzZTFhZjY4OGE0
YWZmYjkzMjJjNDliOWQxMTU4ZS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdn
aW5nTW9kZXMAU1RfNzZiM2UxYWY2ODhhNGFmZmI5MzIyYzQ5YjlkMTE1OGUuUHJvcGVydGllcwBn
ZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVj
dABnZXRfRGVmYXVsdABnZXRfQXNzZW1ibHkAACFVAHMAZQByADoAOgB2AGEAcgBYAE0ATABEAGEA
dABhAAANPABSAE8ATwBUAD4AAAEADzwALwBSAE8ATwBUAD4AAHFTAFQAXwA3ADYAYgAzAGUAMQBh
AGYANgA4ADgAYQA0AGEAZgBmAGIAOQAzADIAMgBjADQAOQBiADkAZAAxADEANQA4AGUALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAL7rL4/61dlPnTg6pC4t5ekA
BCABAQgDIAABBSABARERBCABAQ4FIAEBEVEDBwEOBCAAEmEEIAASZQUgARJpHAMgABwFIAIODg4E
IAEBHAYAARJxEXUEIAASeQYgAgEOEnkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMG
Ek0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzc2YjNl
MWFmNjg4YTRhZmZiOTMyMmM0OWI5ZDExNThlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAA
AEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUS
Lk5FVCBGcmFtZXdvcmsgNC41AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAOAtAAAAAAAAAAAAAPotAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADsLQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAkSzAdAAABACRLMB0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADcANgBiADMAZQAxAGEAZgA2ADgAOABhADQAYQBmAGYAYgA5ADMAMgAyAGMANAA5
AGIAOQBkADEAMQA1ADgAZQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADQANwAyAC4AMQA5ADIAMwA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGMANAA4ADgANABlAGUAOQBkADMAYwBlADQAYQA2ADgAOQA4ADEAOAA1AGEAZgA5AGIA
ZgBkADIAMgBiADMAZAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYwA0ADgAOAA0AGUAZQA5AGQAMwBjAGUANABhADYAOAA5ADgAMQA4ADUA
YQBmADkAYgBmAGQAMgAyAGIAMwBkAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADcANgBiADMAZQAxAGEAZgA2ADgAOABhADQAYQBmAGYAYgA5ADMAMgAyAGMA
NAA5AGIAOQBkADEAMQA1ADgAZQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA0ADcAMgAuADEAOQAyADMANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA0ADcAMgAuADEAOQAyADMANgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAMPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop Query Paid, Output to PDF builder\Send Email"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{7f5781e3-f373-4d45-b75b-f62386257e6f}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Send Email"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_3055964ad72a48439f1fda6a1c0bf943"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::varXMLData,User::varXMLtoHTML,$Project::varMailToProj"
              ReadWriteVariables="User::varExtDocNo">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4d8b20ee55cd4cd0b1af16fea8841408")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4d8b20ee55cd4cd0b1af16fea8841408")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Net;
using System.Xml.Linq;
using System.Collections.Generic;
using System.Linq;
using System.Text;
#endregion

namespace ST_4d8b20ee55cd4cd0b1af16fea8841408
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string filename = (string)Dts.Variables["User::varXMLData"].Value;
            //MessageBox.Show(filename);

            XElement rebatedata = XElement.Parse(filename);

            List<XElement> tnodes = rebatedata.Elements("t").ToList();
            //MessageBox.Show((string)tnodes[0]);

            string ExtDocNo = tnodes[0].Element("ExternalDocumentNo").Value.ToString();
            Dts.Variables["User::varExtDocNo"].Value = ExtDocNo;
            string FranchiseeEmail = tnodes[0].Element("FranchiseeEmail").Value.ToString();

            string htmlMessageFrom = "no-reply@bbqgalore.com.au";
            string htmlMessageTo = Dts.Variables["varMailToProj"].Value.ToString(); //replace this with the FranchiseeEmail
         //   string htmlMessageTo = source.Replace(",", ";");
            string htmlMessageSubject = string.Concat("Franchise Rebate for Online Sales - ",ExtDocNo);

            string htmlMessageBody = "This email is auto-generated and details the report for the Franchise Online Sales rebate which applies to External Document No.: " + ExtDocNo + ".<br /><br />If you have any questions about this or any other web rebate, please do not reply to this email, but rather, please contact your FBM.<br /><br />Regards,<br /><br />Franchise Online Sales Rebate Calculator";
            string smtpServer = "192.168.1.71";
            string pathToAttachment = @"C:\FranchiseRebate\PDF\FranchiseOnlineSalesRebate_" + ExtDocNo + ".pdf";

            SendMailMessage(htmlMessageFrom, htmlMessageTo, htmlMessageSubject, htmlMessageBody, true, smtpServer, pathToAttachment);

            Dts.TaskResult = (int)ScriptResults.Success;

        }

        private void SendMailMessage(string From, string SendTo, string Subject, string Body, bool IsBodyHtml, string Server, string pathToAtt)
        {

            MailMessage htmlMessage;
            SmtpClient mySmtpClient;
           
            htmlMessage = new MailMessage(From, SendTo, Subject, Body);
            htmlMessage.IsBodyHtml = IsBodyHtml;
            htmlMessage.Attachments.Add(new Attachment(pathToAtt));
            MailAddress bcc1 = new MailAddress("john.nehme@bbqgalore.com.au");
            MailAddress bcc2 = new MailAddress("scot.barker@bbqgalore.com.au");
            htmlMessage.Bcc.Add(bcc1);
            htmlMessage.Bcc.Add(bcc2);

            mySmtpClient = new SmtpClient(Server);
            mySmtpClient.Credentials = CredentialCache.DefaultNetworkCredentials;
            mySmtpClient.Send(htmlMessage);

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_3055964ad72a48439f1fda6a1c0bf943.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EB20FC4E-CE8B-4F01-B558-F02EE38B24C0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4d8b20ee55cd4cd0b1af16fea8841408</RootNamespace>
    <AssemblyName>ST_3055964ad72a48439f1fda6a1c0bf943</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_3055964ad72a48439f1fda6a1c0bf943</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_3055964ad72a48439f1fda6a1c0bf943</msb:DisplayName>
    <msb:ProjectId>{D45061B4-EF42-40ED-BDBF-EE2786EA9C00}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_3055964ad72a48439f1fda6a1c0bf943.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Settings.get_Default():ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Sett" +
    "ings")]

namespace ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_3055964ad72a48439f1fda6a1c0bf943.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAM7A8l4AAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAA8jcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKA3AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA+BcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADU
NwAAAAAAAEgAAAACAAUATCIAAJwUAAABAAAAAAAAAOg2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwCAAOAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdB0AAAEoFAAACnIjAABwKBUAAApvFgAACigBAAArJRZvGAAACnInAABwKBUAAApvGQAACm8a
AAAKbxsAAAoKAigQAAAKbxEAAApyTQAAcG8SAAAKBm8cAAAKFm8YAAAKcnEAAHAoFQAACm8ZAAAK
bxoAAApvGwAACiZykQAAcAsCKBAAAApvEQAACnLFAABwbxIAAApvEwAACm8bAAAKDHLhAABwBigd
AAAKDXIrAQBwBnIyAgBwKB4AAAoTBHLpAwBwEwVyAwQAcAZyaQQAcCgeAAAKEwYCBwgJEQQXEQUR
BigCAAAGAigQAAAKFm8fAAAKKgAAEzAEAGwAAAACAAARAwQFDgRzIAAACgoGDgVvIQAACgZvIgAA
Cg4HcyMAAApvJAAACnJzBABwcyUAAAoLcqsEAHBzJQAACgwGbyYAAAoHbycAAAoGbyYAAAoIbycA
AAoOBnMoAAAKJSgpAAAKbyoAAAoGbysAAAoqHgIoLAAACioeAigtAAAKKq5+AQAABC0ecuUEAHDQ
AwAAAiguAAAKby8AAApzMAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKDEA
AAoqLnMJAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAcBQAA
I34AAIgFAACQBwAAI1N0cmluZ3MAAAAAGA0AAFgFAAAjVVMAcBIAABAAAAAjR1VJRAAAAIASAAAc
AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPoBMwAWAAABAAAALgAAAAUAAAAGAAAACgAAAAgA
AAAxAAAAAgAAABAAAAACAAAAAgAAAAMAAAAEAAAAAwAAAAEAAAAGAAAAAQAAAAEAAAABAAAAAAB1
BAEAAAAAAAYA2gK5BQYAaQO5BQYAJgKmBQ8ALQYAAAYAUwIHBQYAvQIHBQYAngIHBQYAUAMHBQYA
+gIHBQYAEwMHBQYAagIHBQYAhQKhAwoALgPjAwoAnwHjAw4A5ABlBA4AuAZlBAYAwQS1BAYACQKm
BQYA+ga1BAYAdwXZBQYASwXyBA4A2QFPBA4AOgJPBA4AuwHdBAYA7gG5BQoAPQTjAxIAbwY+ARIA
AAE+AQYAvQO1BBYARgdXBRYAOAFXBRYAhwVXBQYAAQCsABoACQFnBQYAHACsAA4ALwVlBA4ATwdl
BAYADwAeBA4AGQVlBA4AOwdlBA4A8AAJBw4ADAQJBw4AYQcJBwYAXgG1BAYAFAG1BAYAhwcHBQAA
AABrAAAAAAABAAEAAQAQANIERwA5AAEAAQAAABAA4AU8Bk0AAQAEAAABEAB5BjwGYQADAAgAAwEA
AMwGAABFAAQACwARAMYEEgERAI8BFgERANAAGgEGBpMAHgFWgLAGIQFWgG8BIQFQIAAAAACGANgE
BgABAGwhAAAAAIEA4AAlAQEA5CEAAAAAhhiZBQYACADsIQAAAACDGJkFBgAIAPQhAAAAAJMIcwUw
AQgAICIAAAAAkwh3ATUBCAAnIgAAAACTCIMBOgEIAC8iAAAAAJYIIAdAAQkANiIAAAAAhhiZBQYA
CQA+IgAAAACRGJ8FRQEJAAAAAQC8BAAAAgBEBQAAAwABBwAABAB+BwAABQChBAAABgCSBQAABwB0
BwAAAQCbAwkAmQUBABEAmQUGABkAmQUKACkAmQUQADEAmQUQADkAmQUQAEEAmQUQAEkAmQUQAFEA
mQUQAFkAmQUQAGEAmQUQAGkAmQUGAJEAmQUGALkAmQUVAMkAmQUGAHEAxAYlANEAawYqANkArAQv
AOEAhwM1APEA0wE5APkAFAc/AAEB2gZFABEBWgdRAAwArARwAAEBRwd2APEAhwN9AJkAuwN9AOEA
kQOBAOkA8waGAOkA8waMANEALAcBAHkAmQWcAHkAnQSkAHkA4wapACkBmQUQABQAxwC4AIEAmQUQ
AHkApAC+ABwAxwC4AEEBmQUQAEkBkgbMAEEBggbSAEEBywDZAHEAmQUGAJkAmQUGAGEBJgHfAGEB
gwfoAKEAmQXuAMEAmQUGAAgAFAAIAQgAGAANASkAcwCAAS4ACwBYAS4AEwBhAS4AGwCAAS4AIwCJ
AS4AKwCyAS4AMwCyAS4AOwCyAS4AQwCJAS4ASwC4AS4AUwCyAS4AWwDPAUMAYwANAUkAcwCAAWEA
ewANAWMAawANARsAkwADAAEABAADAAAAdwVJAQAAlwFOAQAAJAdTAQIABQADAAIABgAFAAEABwAF
AAIACAAHAGgArwDEAASAAAABAAAAOB33WgAAAAAAACMAAAAEAAAAAAAAAAAAAAD2AJsAAAAAAA4A
AAAAAAAAAAAAAP8AxAMAAAAABAAAAAAAAAAAAAAA9gC1BAAAAAAOAAAAAAAAAAAAAAD/AHQAAAAA
AAQAAAAAAAAAAAAAAPYAVwUAAAAABAAAAAAAAAAAAAAA9gBjAQAAAAAAAAAAAQAAAOoFAAAFAAIA
LwBjAAAAAAAASUVudW1lcmFibGVgMQBDb2xsZWN0aW9uYDEATGlzdGAxAFNUXzMwNTU5NjRhZDcy
YTQ4NDM5ZjFmZGE2YTFjMGJmOTQzAFNUXzRkOGIyMGVlNTVjZDRjZDBiMWFmMTZmZWE4ODQxNDA4
ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGli
AGdldF9CY2MAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRkAFNlbmQAZGVmYXVsdEluc3Rh
bmNlAFNlbmRNYWlsTWVzc2FnZQBDcmVkZW50aWFsQ2FjaGUAVmFyaWFibGUARW51bWVyYWJsZQBS
dW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBYTmFtZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFR5cGUAU3lzdGVtLkNvcmUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAFBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2Vu
ZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0
dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1i
bHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29t
cGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRl
AEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBn
ZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJp
bmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sATmV0d29ya0NyZWRlbnRpYWwAU3lzdGVtLkNvbGxlY3Rpb25zLk9i
amVjdE1vZGVsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0u
TmV0Lk1haWwAU1RfMzA1NTk2NGFkNzJhNDg0MzlmMWZkYTZhMWMwYmY5NDMuZGxsAHNldF9Jc0Jv
ZHlIdG1sAGdldF9JdGVtAFN5c3RlbQBGcm9tAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlv
bgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24AQXR0YWNobWVudENvbGxlY3Rpb24AU2VuZFRvAEN1bHR1
cmVJbmZvAFN5c3RlbS5YbWwuTGlucQBTeXN0ZW0uTGlucQBnZXRfUmVzb3VyY2VNYW5hZ2VyAFhD
b250YWluZXIAU2VydmVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1
bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzRkOGIyMGVlNTVjZDRj
ZDBiMWFmMTZmZWE4ODQxNDA4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dp
bmdNb2RlcwBTVF80ZDhiMjBlZTU1Y2Q0Y2QwYjFhZjE2ZmVhODg0MTQwOC5Qcm9wZXJ0aWVzAGdl
dF9WYXJpYWJsZXMAU2V0dGluZ3MAc2V0X0NyZWRlbnRpYWxzAGdldF9EZWZhdWx0TmV0d29ya0Ny
ZWRlbnRpYWxzAFN1Y2Nlc3MATWFpbEFkZHJlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEVsZW1l
bnRzAGdldF9BdHRhY2htZW50cwBDb25jYXQAT2JqZWN0AFN1YmplY3QAU3lzdGVtLk5ldABvcF9J
bXBsaWNpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AFhFbGVtZW50AEF0
dGFjaG1lbnQAVG9MaXN0AElDcmVkZW50aWFsc0J5SG9zdABwYXRoVG9BdHQAQm9keQBnZXRfQXNz
ZW1ibHkAACFVAHMAZQByADoAOgB2AGEAcgBYAE0ATABEAGEAdABhAAADdAAAJUUAeAB0AGUAcgBu
AGEAbABEAG8AYwB1AG0AZQBuAHQATgBvAAAjVQBzAGUAcgA6ADoAdgBhAHIARQB4AHQARABvAGMA
TgBvAAAfRgByAGEAbgBjAGgAaQBzAGUAZQBFAG0AYQBpAGwAADNuAG8ALQByAGUAcABsAHkAQABi
AGIAcQBnAGEAbABvAHIAZQAuAGMAbwBtAC4AYQB1AAEbdgBhAHIATQBhAGkAbABUAG8AUAByAG8A
agAASUYAcgBhAG4AYwBoAGkAcwBlACAAUgBlAGIAYQB0AGUAIABmAG8AcgAgAE8AbgBsAGkAbgBl
ACAAUwBhAGwAZQBzACAALQAgAAGBBVQAaABpAHMAIABlAG0AYQBpAGwAIABpAHMAIABhAHUAdABv
AC0AZwBlAG4AZQByAGEAdABlAGQAIABhAG4AZAAgAGQAZQB0AGEAaQBsAHMAIAB0AGgAZQAgAHIA
ZQBwAG8AcgB0ACAAZgBvAHIAIAB0AGgAZQAgAEYAcgBhAG4AYwBoAGkAcwBlACAATwBuAGwAaQBu
AGUAIABTAGEAbABlAHMAIAByAGUAYgBhAHQAZQAgAHcAaABpAGMAaAAgAGEAcABwAGwAaQBlAHMA
IAB0AG8AIABFAHgAdABlAHIAbgBhAGwAIABEAG8AYwB1AG0AZQBuAHQAIABOAG8ALgA6ACAAAYG1
LgA8AGIAcgAgAC8APgA8AGIAcgAgAC8APgBJAGYAIAB5AG8AdQAgAGgAYQB2AGUAIABhAG4AeQAg
AHEAdQBlAHMAdABpAG8AbgBzACAAYQBiAG8AdQB0ACAAdABoAGkAcwAgAG8AcgAgAGEAbgB5ACAA
bwB0AGgAZQByACAAdwBlAGIAIAByAGUAYgBhAHQAZQAsACAAcABsAGUAYQBzAGUAIABkAG8AIABu
AG8AdAAgAHIAZQBwAGwAeQAgAHQAbwAgAHQAaABpAHMAIABlAG0AYQBpAGwALAAgAGIAdQB0ACAA
cgBhAHQAaABlAHIALAAgAHAAbABlAGEAcwBlACAAYwBvAG4AdABhAGMAdAAgAHkAbwB1AHIAIABG
AEIATQAuADwAYgByACAALwA+ADwAYgByACAALwA+AFIAZQBnAGEAcgBkAHMALAA8AGIAcgAgAC8A
PgA8AGIAcgAgAC8APgBGAHIAYQBuAGMAaABpAHMAZQAgAE8AbgBsAGkAbgBlACAAUwBhAGwAZQBz
ACAAUgBlAGIAYQB0AGUAIABDAGEAbABjAHUAbABhAHQAbwByAAAZMQA5ADIALgAxADYAOAAuADEA
LgA3ADEAAGVDADoAXABGAHIAYQBuAGMAaABpAHMAZQBSAGUAYgBhAHQAZQBcAFAARABGAFwARgBy
AGEAbgBjAGgAaQBzAGUATwBuAGwAaQBuAGUAUwBhAGwAZQBzAFIAZQBiAGEAdABlAF8AAAkuAHAA
ZABmAAA3agBvAGgAbgAuAG4AZQBoAG0AZQBAAGIAYgBxAGcAYQBsAG8AcgBlAC4AYwBvAG0ALgBh
AHUAADlzAGMAbwB0AC4AYgBhAHIAawBlAHIAQABiAGIAcQBnAGEAbABvAHIAZQAuAGMAbwBtAC4A
YQB1AABxUwBUAF8ANABkADgAYgAyADAAZQBlADUANQBjAGQANABjAGQAMABiADEAYQBmADEANgBm
AGUAYQA4ADgANAAxADQAMAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAAAIGHkZ4GCjU6ITG0vhSRangAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQkHBw4ODg4O
Dg4EIAASaQQgABJtBSABEnEcAyAAHAUAARJ5DgUAARJ9DgsgARUSgIUBEnkSfREQAQEVEoCNAR4A
FRKAhQEeAAQKARJ5BxUSgI0BEnkFIAETAAgGIAESeRJ9AyAADgQgAQEcBQACDg4OBgADDg4ODggH
AxI9EkESQQcgBAEODg4OBCABAQIFIAASgJEIFRKAmQESgJUFIAEBEwAFIAASgJ0HFRKAmQESQQUA
ABKAqQYgAQESgK0FIAEBEj0IAAESgLERgLUFIAASgLkHIAIBDhKAuQi3elxWGTTgiQiJhF3NgIDM
kQQAAAAABAEAAAADBhJRAwYSVQMGEhACBggDBhEUCiAHAQ4ODg4CDg4EAAASUQQAABJVBQABARJV
BAAAEhADAAABBAgAElEECAASVQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTVF80ZDhiMjBlZTU1Y2Q0Y2QwYjFhZjE2ZmVhODg0MTQwOAAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAADINwAAAAAAAAAAAADiNwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1DcAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAPdaOB0AAAEA91o4HT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8ANABkADgAYgAyADAAZQBlADUANQBjAGQANABjAGQAMABiADEAYQBmADEANgBmAGUAYQA4
ADgANAAxADQAMAA4AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcA
NAA4ADAALgAyADMAMgA4ADcAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AMwAwADUANQA5ADYANABhAGQANwAyAGEANAA4ADQAMwA5AGYAMQBmAGQAYQA2AGEAMQBjADAA
YgBmADkANAAzAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwAzADAANQA1ADkANgA0AGEAZAA3ADIAYQA0ADgANAAzADkAZgAxAGYAZABhADYA
YQAxAGMAMABiAGYAOQA0ADMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8ANABkADgAYgAyADAAZQBlADUANQBjAGQANABjAGQAMABiADEAYQBmADEANgBmAGUA
YQA4ADgANAAxADQAMAA4AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA3ADQAOAAwAC4AMgAzADIAOAA3AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA3ADQAOAAwAC4AMgAzADIAOAA3AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAPQ3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop Query Paid, Output to PDF builder\Update 'paid' to 'sent'"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{F6907DFC-01D4-49CB-8570-96B0B08D8768}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update 'paid' to 'sent'"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"update [Nav_Processes].[Reports].[FranchiseRebate] set [Status] = 'sent' where [ExternalDocumentNo]='" + @[User::varExtDocNo] + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="update [Nav_Processes].[Reports].[FranchiseRebate] set [Status] = 'sent' where [ExternalDocumentNo]='0'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop Query Paid, Output to PDF builder.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{715B01BF-D7B7-48F4-AF5D-0B22169BF7A4}"
          DTS:From="Package\Loop Query Paid, Output to PDF builder\Get the Paid PSIs to create report and save as PDF"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Loop Query Paid, Output to PDF builder\Script Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop Query Paid, Output to PDF builder.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{CA93FD73-2F1E-40A5-BD4C-558ABE8B8876}"
          DTS:From="Package\Loop Query Paid, Output to PDF builder\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Loop Query Paid, Output to PDF builder\Reformat results in HTML" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop Query Paid, Output to PDF builder.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{CB4E3F04-A016-4420-88A7-D1CB1EC58D53}"
          DTS:From="Package\Loop Query Paid, Output to PDF builder\Send Email"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Loop Query Paid, Output to PDF builder\Update 'paid' to 'sent'" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop Query Paid, Output to PDF builder.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{1363C5EE-2711-4A49-A544-BEE579E2C74A}"
          DTS:From="Package\Loop Query Paid, Output to PDF builder\Reformat results in HTML"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Loop Query Paid, Output to PDF builder\Save as PDF" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop Query Paid, Output to PDF builder.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{405E45B1-BE57-4582-8D2A-764CA499CE01}"
          DTS:From="Package\Loop Query Paid, Output to PDF builder\Save as PDF"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Loop Query Paid, Output to PDF builder\Send Email" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop Query Paid, Output to PDF builder.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{D8609BB8-C910-4E2D-B5FA-D96BF204F39C}"
          DTS:From="Package\Loop Query Paid, Output to PDF builder\Reformat results in HTML"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Loop Query Paid, Output to PDF builder\Execute SQL Task"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update &quot;Paid&quot; on new rebates"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Update all rebates to status = 'paid' if they have been paid"
      DTS:DTSID="{3f248413-2498-4e15-841d-ed68441acaba}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update &quot;Paid&quot; on new rebates"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
          SQLTask:SqlStatementSource="update [Nav_Processes].[Reports].[FranchiseRebate] set [Status]='paid'&#xA;where[ExternalDocumentNo] in (&#xA;select x.[extDocNo]&#xA;  from (&#xA;    select h.[No_],h.[External Document No_],l.[Description],l.[Shortcut Dimension 2 Code]&#xA;      ,len(trim(left(substring(l.[Description], patindex('%[0-9.-]%', l.[Description]), 8000),patindex('%[^0-9.-]%', substring(l.[Description], patindex('%[0-9.-]%', l.[Description]), 8000) + 'X') -1))) as length9or13&#xA;      ,cast(left(substring(l.[Description], patindex('%[0-9.-]%', l.[Description]), 8000),patindex('%[^0-9.-]%', substring(l.[Description], patindex('%[0-9.-]%', l.[Description]), 8000) + 'X') -1) as float) as extDocNo&#xA;      ,l.Amount&#xA;    from [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Sales Cr_Memo Header] h&#xA;    left&#xA;    join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Sales Cr_Memo Line] l&#xA;    on  h.[No_]=l.[Document No_]&#xA;    where (h.[External Document No_] like ('WEB %') or l.[Description] like ('%WEB%') or (l.[Type]=1 and l.[No_]='71030' and l.[Shortcut Dimension 2 Code]&lt;&gt;'008'))&#xA;    and  l.[Type]=1&#xA;    and  l.[No_] in ('71030','71020')&#xA;    group by h.[No_],h.[External Document No_],l.[Description],l.[Shortcut Dimension 2 Code],l.[Amount]&#xA;    ) x&#xA;&#xA;  left&#xA;  join (select distinct(f.[ExternalDocumentNo]) from [Nav_Processes].[Reports].[FranchiseRebate] f where [Status]='new') f&#xA;  on  f.[ExternalDocumentNo]=x.extDocNo&#xA;  where f.[ExternalDocumentNo] is not null&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{31038E5B-B9CD-4528-A4A5-EB3E8A354A1D}"
      DTS:From="Package\Get rowcount of all 'paid'"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Execute SQL Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{80CA71A1-027B-47F5-9D8F-CBAA91FDCB5C}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{90c91a79-b694-4b5c-bb29-f384f0ecd9b3}"
      DTS:From="Package\Update &quot;Paid&quot; on new rebates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Get rowcount of all 'paid'" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{F29835F4-36A3-4B74-8A3C-BA7B08AA3153}"
      DTS:From="Package\Get rowcount of all 'paid'"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Loop Query Paid, Output to PDF builder" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{C08D1560-9316-48DC-A438-F51EF685D3CE}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{70D99408-26E5-4BFD-91EF-EAC1BB83707F}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Execute SQL Task"
          TopLeft="832.857157040616,163.647061118618" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Foreach Loop Container\Execute SQL Task"
          TopLeft="353.80953896289,310.729410740854" />
        <NodeLayout
          Size="318.4,41.6"
          Id="Package\Foreach Loop Container\Get the Paid PSIs to create report and save as PDF"
          TopLeft="58.2285895045925,42.0705900370456" />
        <NodeLayout
          Size="198.4,41.6"
          Id="Package\Foreach Loop Container\Reformat results in HTML"
          TopLeft="124.742866596883,245.435299029566" />
        <NodeLayout
          Size="136.8,41.6"
          Id="Package\Foreach Loop Container\Save as PDF"
          TopLeft="156.971446644205,346.235295431783" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container\Script Task"
          TopLeft="156.74286714184,142.352944642698" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container\Send Email"
          TopLeft="159.657162660483,451.333334378637" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Foreach Loop Container\Update 'paid' to 'sent'"
          TopLeft="138.571440059311,564.141180365804" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="219.685728323216,83.6705900370456">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.6823546056524"
              Start="0,0"
              End="0,51.1823546056524">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.1823546056524" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="222.942866869362,183.952944642698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.482354386868"
              Start="0,0"
              End="0,53.982354386868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.982354386868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="224.657156620544,287.035299029566">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.199996402217"
              Start="0,0"
              End="0,51.699996402217">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.699996402217" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="225.114304652344,387.835295431783">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63.498038946854"
              Start="0,0"
              End="0,55.998038946854">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.998038946854" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="226.714301359897,492.933334378637">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71.207845987167"
              Start="0,0"
              End="0,63.707845987167">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.707845987167" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="255.676199930217,287.035299029566">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="179.333339032673,23.694111711288"
              Start="0,0"
              End="179.333339032673,16.194111711288">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,5.59137642072937" />
                  <mssgle:CubicBezierSegment
                    Point1="0,5.59137642072937"
                    Point2="0,9.59137642072937"
                    Point3="4,9.59137642072937" />
                  <mssgle:LineSegment
                    End="175.333339032673,9.59137642072937" />
                  <mssgle:CubicBezierSegment
                    Point1="175.333339032673,9.59137642072937"
                    Point2="179.333339032673,9.59137642072937"
                    Point3="179.333339032673,13.5913764207294" />
                  <mssgle:LineSegment
                    End="179.333339032673,16.194111711288" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="74.4253218600864,14.5913764207294,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="521.6,660.8"
          Size="521.6,704"
          Id="Package\Foreach Loop Container"
          TopLeft="755.714298584025,309.058827583353" />
        <NodeLayout
          Size="196,41.6"
          Id="Package\Get rowcount of all 'paid'"
          TopLeft="434.85715026271,120.007844820319" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Loop Query Paid, Output to PDF builder\Execute SQL Task"
          TopLeft="344.495249302533,281.411769138763" />
        <NodeLayout
          Size="318.4,41.6"
          Id="Package\Loop Query Paid, Output to PDF builder\Get the Paid PSIs to create report and save as PDF"
          TopLeft="48.9142998442362,12.7529484349552" />
        <NodeLayout
          Size="198.4,41.6"
          Id="Package\Loop Query Paid, Output to PDF builder\Reformat results in HTML"
          TopLeft="115.428576936527,216.117657427475" />
        <NodeLayout
          Size="136.8,41.6"
          Id="Package\Loop Query Paid, Output to PDF builder\Save as PDF"
          TopLeft="147.657156983849,316.917653829692" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Loop Query Paid, Output to PDF builder\Script Task"
          TopLeft="147.428577481484,113.035303040607" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Loop Query Paid, Output to PDF builder\Send Email"
          TopLeft="150.342873000126,422.015692776546" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Loop Query Paid, Output to PDF builder\Update 'paid' to 'sent'"
          TopLeft="129.257150398955,534.823538763713" />
        <EdgeLayout
          Id="Package\Loop Query Paid, Output to PDF builder.PrecedenceConstraints[Constraint]"
          TopLeft="210.37143866286,54.3529484349552">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.6823546056518"
              Start="0,0"
              End="0,51.1823546056518">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.1823546056518" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Query Paid, Output to PDF builder.PrecedenceConstraints[Constraint 1]"
          TopLeft="213.628577209005,154.635303040607">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.482354386868"
              Start="0,0"
              End="0,53.982354386868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.982354386868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Query Paid, Output to PDF builder.PrecedenceConstraints[Constraint 2]"
          TopLeft="217.40001169954,463.615692776546">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71.2078459871672"
              Start="0,0"
              End="0,63.7078459871672">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.7078459871672" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Query Paid, Output to PDF builder.PrecedenceConstraints[Constraint 3]"
          TopLeft="215.342866960188,257.717657427475">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.1999964022167"
              Start="0,0"
              End="0,51.6999964022167">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.6999964022167" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Query Paid, Output to PDF builder.PrecedenceConstraints[Constraint 4]"
          TopLeft="215.800014991988,358.517653829692">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63.498038946854"
              Start="0,0"
              End="0,55.998038946854">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.998038946854" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Query Paid, Output to PDF builder.PrecedenceConstraints[Constraint 5]"
          TopLeft="246.36191026986,257.717657427475">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="179.333339032673,23.694111711288"
              Start="0,0"
              End="179.333339032673,16.194111711288">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,5.59137642072937" />
                  <mssgle:CubicBezierSegment
                    Point1="0,5.59137642072937"
                    Point2="0,9.59137642072937"
                    Point3="4,9.59137642072937" />
                  <mssgle:LineSegment
                    End="175.333339032673,9.59137642072937" />
                  <mssgle:CubicBezierSegment
                    Point1="175.333339032673,9.59137642072937"
                    Point2="179.333339032673,9.59137642072937"
                    Point3="179.333339032673,13.5913764207294" />
                  <mssgle:LineSegment
                    End="179.333339032673,16.194111711288" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="74.4253218600866,14.5913764207294,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="512,628"
          Size="512,671.2"
          Id="Package\Loop Query Paid, Output to PDF builder"
          TopLeft="70.5714297732545,274.682356793492" />
        <NodeLayout
          Size="220,41.6"
          Id="Package\Update &quot;Paid&quot; on new rebates"
          TopLeft="426.380959642171,29.0588239369508" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="630.85715026271,140.807844820319">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="202.000006777906,43.6392162982986"
              Start="0,0"
              End="194.500006777906,43.6392162982986">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="97.0000033889529,0" />
                  <mssgle:CubicBezierSegment
                    Point1="97.0000033889529,0"
                    Point2="101.000003388953,0"
                    Point3="101.000003388953,4" />
                  <mssgle:LineSegment
                    End="101.000003388953,39.6392162982986" />
                  <mssgle:CubicBezierSegment
                    Point1="101.000003388953,39.6392162982986"
                    Point2="101.000003388953,43.6392162982986"
                    Point3="105.000003388953,43.6392162982986" />
                  <mssgle:LineSegment
                    End="194.500006777906,43.6392162982986" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="914.057157040616,205.247061118618">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="102.457141543409,103.811766464735"
              Start="0,0"
              End="102.457141543409,96.3117664647347">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.9058832323673" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.9058832323673"
                    Point2="0,51.9058832323673"
                    Point3="4,51.9058832323673" />
                  <mssgle:LineSegment
                    End="98.4571415434092,51.9058832323673" />
                  <mssgle:CubicBezierSegment
                    Point1="98.4571415434092,51.9058832323673"
                    Point2="102.457141543409,51.9058832323673"
                    Point3="102.457141543409,55.9058832323673" />
                  <mssgle:LineSegment
                    End="102.457141543409,96.3117664647347" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="534.61905495244,70.6588239369508">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.3490208833684"
              Start="0,0"
              End="0,41.8490208833684">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.8490208833684" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="532.85715026271,161.607844820319">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-206.285720489456,113.074511973173"
              Start="0,0"
              End="-206.285720489456,105.574511973173">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5372559865863" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52.5372559865863"
                    Point2="0,56.5372559865863"
                    Point3="-4,56.5372559865863" />
                  <mssgle:LineSegment
                    End="-202.285720489456,56.5372559865863" />
                  <mssgle:CubicBezierSegment
                    Point1="-202.285720489456,56.5372559865863"
                    Point2="-206.285720489456,56.5372559865863"
                    Point3="-206.285720489456,60.5372559865863" />
                  <mssgle:LineSegment
                    End="-206.285720489456,105.574511973173" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>