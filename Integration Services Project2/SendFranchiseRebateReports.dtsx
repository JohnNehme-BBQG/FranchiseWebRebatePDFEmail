<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/4/2020 3:09:03 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="HQVSMDM-05P"
  DTS:CreatorName="GALORE\john.nehme"
  DTS:DTSID="{23C1B86B-1D5C-4C8F-9B28-0DDF3721A805}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="3081"
  DTS:ObjectName="SendFranchiseRebateReports"
  DTS:PackageType="5"
  DTS:VersionBuild="294"
  DTS:VersionGUID="{617844A1-45B4-4E0F-A3C0-C899FBFC7951}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{10DD5175-6E49-41DC-B651-5634D9C83F78}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IncrementValue">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9910CC2E-3F50-44C8-A4B6-CFECF71EBE76}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowNo">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C7A9C295-84B2-4320-BC60-41497EE52A96}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varExtDocNo">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{59C94F20-8CD2-41F5-9E02-E6D7B958ADDA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varExtDocNoSelector">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CBBF75D2-CF91-4E16-AB4F-11D410C39C8B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varExtHeaderNo">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F8AE00D2-ED73-4B09-809D-39EA74415E99}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varHTMLresult">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F0C680A9-F443-466E-B720-452DF67B541D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSQLObjectOutput">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB902B5C-05D7-44F3-ADA8-095B75C68375}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varXMLData">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2CEDEFFE-FEF0-4920-BEAE-3844F79C75C7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varXMLTenderData">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BCA9387A-0EEA-45F3-834A-00B5A881C6D8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varXMLTenderToHTML">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD8C013C-3A62-4461-B43C-0419490D5882}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varXMLtoHTML">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E51AF7E2-BBD6-4AF7-BA34-D3DF85070997}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
          SQLTask:SqlStatementSource="select distinct(r.[ExternalDocumentNo])&#xA;from [Nav_Processes].[Reports].[FranchiseRebate] r&#xA;where r.[Status]='paid'"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::varExtHeaderNo" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{D5887234-A678-40F6-A231-CB2EEC196E2D}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{9BF8EC43-8AC7-4769-9C68-50203E517996}"
        DTS:ObjectName="{9BF8EC43-8AC7-4769-9C68-50203E517996}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::varExtHeaderNo" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Get the Paid PSIs to create report and save as PDF"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{d43a4ce6-eb73-4bf9-9979-533139a1e4aa}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get the Paid PSIs to create report and save as PDF"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="1" />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"select t.*
from(
select c.[E-Mail] as [FranchiseeEmail]
 ,o.[E-Mail] as [CustomerEmail],c.[Name],c.[Address],c.[Address 2],c.[City],c.[County] as [State],c.[Post Code] as [PostCode],r.*

from [Nav_Processes].[Reports].[FranchiseRebate] r

left
join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] c
on  r.[Franchisee]=c.[No_]

left
join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] o
on  r.[SelltoCustNo]=o.[No_] 

where r.[Status]='paid'
and r.[ExternalDocumentNo]='" +
 (DT_WSTR,20)@[User::varExtDocNoSelector] + "'
) t 
FOR XML auto, elements,type,root('Rebates') OPTION (FAST 100)"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="select t.*&#xA;from(&#xA;select c.[E-Mail] as [FranchiseeEmail]&#xA; ,o.[E-Mail] as [CustomerEmail],c.[Name],c.[Address],c.[Address 2],c.[City],c.[County] as [State],c.[Post Code] as [PostCode],r.*&#xA;&#xA;from [Nav_Processes].[Reports].[FranchiseRebate] r&#xA;&#xA;left&#xA;join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] c&#xA;on  r.[Franchisee]=c.[No_]&#xA;&#xA;left&#xA;join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Customer] o&#xA;on  r.[SelltoCustNo]=o.[No_] &#xA;&#xA;where r.[Status]='paid'&#xA;and r.[ExternalDocumentNo]='0'&#xA;) t &#xA;FOR XML auto, elements,type,root('Rebates') OPTION (FAST 100)"
              SQLTask:ResultType="ResultSetType_XML" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::varXMLData" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varExtDocNoSelector"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="20" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Get Web_ebay_Order_Tender_Import data"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1F2E730C-85C6-49DB-B1D9-65C17C740CC3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Web_ebay_Order_Tender_Import data"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"select  tender.[Web_eBay Order No_] as [ExternalDocumentNo]
		,case tender.[Tender Type]	when 'MasterCard'		then 'Master Card'
									when 'Visa'				then 'Visa'
									when 'American Express'	then 'American Express'
									when 'amazonau_payment'	then 'Amazon'
									when 'afterpay'			then 'Afterpay'
									when 'giftcard'			then 'Gift Card'
									when 'paypal_express'	then 
									case	when	tender.[Source] = '' then	'Website'
											else								'Ebay'
									end
									when 'zip_payment'		then 'Zip Payment'
		end as TenderTypeDescription
		,case tender.[Tender Type]	when 'MasterCard'		then '0.96% of Tender Value'
									when 'Visa'				then '1.02% of Tender Value'
									when 'American Express'	then '1.50% of Tender Value'
									when 'amazonau_payment'	then '7.00% of Tender Value'
									when 'afterpay'			then '3.60% of Tender Value + $0.30 transaction fee'
									when 'giftcard'			then '0.25% of Tender Value + $0.20 transaction fee'
									when 'paypal_express'	then 
									case	when	tender.[Source] = '' then	'2.00% of Tender Value + $0.30 transaction fee'
											else								'8.50% of Tender Value + $0.30 transaction fee'
									end
									when 'zip_payment'		then
									case	when tender.[Tender Amount] &lt;= 100.00	then '1.00% of Tender Value + $0.30 transaction fee' 
											when tender.[Tender Amount] &lt;= 1000.00	then '1.65% of Tender Value + $0.30 transaction fee'
											when tender.[Tender Amount] &lt;= 3000.00	then '1.65% of Tender Value + $0.30 transaction fee'
											when tender.[Tender Amount] &lt;= 5000.00	then '3.50% of Tender Value + $0.30 transaction fee'
											when tender.[Tender Amount] &lt;= 8000.00	then '7.00% of Tender Value + $0.30 transaction fee'
											else '9.00% of Tender Value + $0.30 transaction fee'
									end
		end as TenderAmountDescription
		,case	tender.[Tender Type]	when	'afterpay'			then '0.30'
										when	'giftcard'			then '0.20'
										when	'paypal_express'	then '0.30'
										when	'zip_payment'		then '0.30'
		else '0.00'
		end as TransactionFee
		,case	tender.[Tender Type]	when 'American Express'	then 1.50/100 * tender.[Tender Amount]
											when 'afterpay'			then 3.60/100 + 0.3
											when 'zip_payment'		then
												case	when tender.[Tender Amount] &lt;= 100.00 then 1.00/100 * tender.[Tender Amount] + 0.3
														when tender.[Tender Amount] &lt;=1000.00 then 1.65/100 * tender.[Tender Amount] + 0.3
														when tender.[Tender Amount] &lt;=3000.00 then 1.65/100 * tender.[Tender Amount] + 0.3
														when tender.[Tender Amount] &lt;=5000.00 then 3.50/100 * tender.[Tender Amount] + 0.3
														when tender.[Tender Amount] &lt;=8000.00 then 7.00/100 * tender.[Tender Amount] + 0.3
														else 9.00/100 * tender.[Tender Amount] + 0.3
												end
											when 'Visa'				then 1.02/100 * tender.[Tender Amount]
											when 'MasterCard'		then 0.96/100 * tender.[Tender Amount]
											when 'amazonau_payment'	then 7.00/100 * tender.[Tender Amount]
											when 'giftcard'			then 0.25/100 * tender.[Tender Amount] + 0.2
											when 'free'				then 0.00/100 * tender.[Tender Amount]
								else
					case	tender.[Tender Type]	when 'paypal_express'	then
						case	when tender.[Source] = '' /*website*/	then 2.00/100 * tender.[Tender Amount]  + 0.3
							else 8.5/100 * tender.[Tender Amount]  + 0.3 /*E-bay*/
						end
					end
		end as FeeSubtotal
		,tender.[Tender Amount] as [TenderAmount]
from(
select	t.*
from	[BBQG_Prod_Replica].[dbo].[Barbeques Galore$Web_eBay Order Tender Import] t
where	t.[Web_eBay Order No_] = '" + @[User::varExtDocNo]  + "'
and	t.[Tender Type] &lt;&gt; 'free'
) tender
FOR XML AUTO, elements, type, root('tender_types')"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="select  tender.[Web_eBay Order No_] as [ExternalDocumentNo]&#xA;&#x9;&#x9;,case tender.[Tender Type]&#x9;when 'MasterCard'&#x9;&#x9;then 'Master Card'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'Visa'&#x9;&#x9;&#x9;&#x9;then 'Visa'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'American Express'&#x9;then 'American Express'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'amazonau_payment'&#x9;then 'Amazon'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'afterpay'&#x9;&#x9;&#x9;then 'Afterpay'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'giftcard'&#x9;&#x9;&#x9;then 'Gift Card'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'paypal_express'&#x9;then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case&#x9;when&#x9;tender.[Source] = '' then&#x9;'Website'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'Ebay'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'zip_payment'&#x9;&#x9;then 'Zip Payment'&#xA;&#x9;&#x9;end as TenderTypeDescription&#xA;&#x9;&#x9;,case tender.[Tender Type]&#x9;when 'MasterCard'&#x9;&#x9;then '0.96% of Tender Value'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'Visa'&#x9;&#x9;&#x9;&#x9;then '1.02% of Tender Value'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'American Express'&#x9;then '1.50% of Tender Value'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'amazonau_payment'&#x9;then '7.00% of Tender Value'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'afterpay'&#x9;&#x9;&#x9;then '3.60% of Tender Value + $0.30 transaction fee'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'giftcard'&#x9;&#x9;&#x9;then '0.25% of Tender Value + $0.20 transaction fee'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'paypal_express'&#x9;then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case&#x9;when&#x9;tender.[Source] = '' then&#x9;'2.00% of Tender Value + $0.30 transaction fee'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'8.50% of Tender Value + $0.30 transaction fee'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'zip_payment'&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case&#x9;when tender.[Tender Amount] &lt;= 100.00&#x9;then '1.00% of Tender Value + $0.30 transaction fee' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when tender.[Tender Amount] &lt;= 1000.00&#x9;then '1.65% of Tender Value + $0.30 transaction fee'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when tender.[Tender Amount] &lt;= 3000.00&#x9;then '1.65% of Tender Value + $0.30 transaction fee'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when tender.[Tender Amount] &lt;= 5000.00&#x9;then '3.50% of Tender Value + $0.30 transaction fee'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when tender.[Tender Amount] &lt;= 8000.00&#x9;then '7.00% of Tender Value + $0.30 transaction fee'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else '9.00% of Tender Value + $0.30 transaction fee'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;end as TenderAmountDescription&#xA;&#x9;&#x9;,case&#x9;tender.[Tender Type]&#x9;when&#x9;'afterpay'&#x9;&#x9;&#x9;then '0.30'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when&#x9;'giftcard'&#x9;&#x9;&#x9;then '0.20'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when&#x9;'paypal_express'&#x9;then '0.30'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when&#x9;'zip_payment'&#x9;&#x9;then '0.30'&#xA;&#x9;&#x9;else '0.00'&#xA;&#x9;&#x9;end as TransactionFee&#xA;&#x9;&#x9;,case&#x9;tender.[Tender Type]&#x9;when 'American Express'&#x9;then 1.50/100 * tender.[Tender Amount]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'afterpay'&#x9;&#x9;&#x9;then 3.60/100 + 0.3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'zip_payment'&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case&#x9;when tender.[Tender Amount] &lt;= 100.00 then 1.00/100 * tender.[Tender Amount] + 0.3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when tender.[Tender Amount] &lt;=1000.00 then 1.65/100 * tender.[Tender Amount] + 0.3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when tender.[Tender Amount] &lt;=3000.00 then 1.65/100 * tender.[Tender Amount] + 0.3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when tender.[Tender Amount] &lt;=5000.00 then 3.50/100 * tender.[Tender Amount] + 0.3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when tender.[Tender Amount] &lt;=8000.00 then 7.00/100 * tender.[Tender Amount] + 0.3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else 9.00/100 * tender.[Tender Amount] + 0.3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'Visa'&#x9;&#x9;&#x9;&#x9;then 1.02/100 * tender.[Tender Amount]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'MasterCard'&#x9;&#x9;then 0.96/100 * tender.[Tender Amount]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'amazonau_payment'&#x9;then 7.00/100 * tender.[Tender Amount]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'giftcard'&#x9;&#x9;&#x9;then 0.25/100 * tender.[Tender Amount] + 0.2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when 'free'&#x9;&#x9;&#x9;&#x9;then 0.00/100 * tender.[Tender Amount]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;case&#x9;tender.[Tender Type]&#x9;when 'paypal_express'&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case&#x9;when tender.[Source] = '' /*website*/&#x9;then 2.00/100 * tender.[Tender Amount]  + 0.3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else 8.5/100 * tender.[Tender Amount]  + 0.3 /*E-bay*/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;end as FeeSubtotal&#xA;&#x9;&#x9;,tender.[Tender Amount] as [TenderAmount]&#xA;from(&#xA;select&#x9;t.*&#xA;from&#x9;[BBQG_Prod_Replica].[dbo].[Barbeques Galore$Web_eBay Order Tender Import] t&#xA;where&#x9;t.[Web_eBay Order No_] = '0'&#xA;and&#x9;t.[Tender Type] &lt;&gt; 'free'&#xA;) tender&#xA;FOR XML AUTO, elements, type, root('tender_types')"
              SQLTask:ResultType="ResultSetType_XML" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::varXMLTenderData" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Merge the two HTML code outputs"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{5E2F5CFB-29BC-49BB-8DE9-19C180EBA0CC}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Merge the two HTML code outputs"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_b0242a350c9a4614a378a6f203dc03cb"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::varXMLTenderToHTML,User::varXMLtoHTML"
              ReadWriteVariables="User::varHTMLresult">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b0242a350c9a4614a378a6f203dc03cb.Properties.Settings.get_Default():ST_b0242a350c9a4614a378a6f203dc03cb.Properties.Sett" +
    "ings")]

namespace ST_b0242a350c9a4614a378a6f203dc03cb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_b0242a350c9a4614a378a6f203dc03cb
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // Assign user data to string variables from the two HTML transform outputs
                        
            string xmlDataFirst = Dts.Variables["User::varXMLtoHTML"].Value.ToString();
            string xmlTender = Dts.Variables["User::varXMLTenderToHTML"].Value.ToString();

            //Get rid of the header from the xmlTender output

            string xmlTenderUpdate = xmlTender.Substring(xmlTender.IndexOf("<table>"));


            //Strip out the shit at the bottom of xmlDataFirst
            string one = xmlDataFirst.Substring(0, xmlDataFirst.IndexOf("</body>"));
            string stripped = xmlDataFirst.Substring(xmlDataFirst.IndexOf("</body>"));
            //Concat the shit from xmlTender to xmlDataFirst and add the initial part that was stripped out at the end
            string htmlConc = one + "<br/><br/><p style=\"font-size:8\"><b>Tender types used in transaction:</b></p><br/>" + xmlTenderUpdate + stripped;

            //Assign to User::varHTMLresult
            Dts.Variables["User::varHTMLresult"].Value = htmlConc;

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_b0242a350c9a4614a378a6f203dc03cb.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8AA0DEF8-D920-40A9-897D-5F11A7060C22}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_b0242a350c9a4614a378a6f203dc03cb</RootNamespace>
    <AssemblyName>ST_b0242a350c9a4614a378a6f203dc03cb</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_b0242a350c9a4614a378a6f203dc03cb</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_b0242a350c9a4614a378a6f203dc03cb</msb:DisplayName>
    <msb:ProjectId>{63653FCB-454D-4F4E-8A45-E53D20E08682}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_b0242a350c9a4614a378a6f203dc03cb.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b0242a350c9a4614a378a6f203dc03cb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_b0242a350c9a4614a378a6f203dc03cb")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b0242a350c9a4614a378a6f203dc03cb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b0242a350c9a4614a378a6f203dc03cb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b0242a350c9a4614a378a6f203dc03cb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b0242a350c9a4614a378a6f203dc03cb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b0242a350c9a4614a378a6f203dc03cb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_b0242a350c9a4614a378a6f203dc03cb.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAL+xAl8AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAki8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEAvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAmA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB0
LwAAAAAAAEgAAAACAAUAbCEAABwNAAABAAAAAAAAAIguAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBACpAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyJwAAcG8SAAAKbxMAAApvFAAACiVyWQAAcG8VAAAKbxYAAAoL
BhYGcmkAAHBvFQAACm8XAAAKBgZyaQAAcG8VAAAKbxYAAAoMcnkAAHAHCCgYAAAKDQIoEAAACm8R
AAAKciABAHBvEgAACglvGQAACgIoEAAAChZvGgAACioeAigbAAAKKh4CKBwAAAoqrn4BAAAELR5y
SAEAcNADAAACKB0AAApvHgAACnMfAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQq
HgIoIAAACioucwgAAAaAAwAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA
4AMAACN+AABMBAAAgAUAACNTdHJpbmdzAAAAAMwJAAC8AQAAI1VTAIgLAAAQAAAAI0dVSUQAAACY
CwAAhAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAAB4AAAAFAAAABgAAAAkA
AAABAAAAIAAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAJEDAQAA
AAAABgAlAmEEBgC0AmEEBgBxAU4EDwDVBAAABgCeAQ8EBgAIAg8EBgDpAQ8EBgCbAg8EBgBFAg8E
BgBeAg8EBgC1AQ8EBgDQAfQCCgB5AkADCgDwAEADBgDJA8IDBgBUAU4EBgBPBcIDBgAxBIEEBgAh
BPoDDgAkAXsDDgCFAXsDDgAMAeUDBgA5AWEECgBpA0ADEgAXBZsAEgBuAJsABgAQA8IDBgC7AMID
BgB3AMIDBgB1BQ8EAAAAAAEAAAAAAAEAAQABABAA2gMxADkAAQABAAAAEACIBOQERQABAAMAAAEQ
ACEF5ARZAAMABwADAQAAOgUAAD0ABAAKABEAzgOGABEA4ACKABEAXgCOAAYGKQCSAFaAKgWVAFaA
wACVAFAgAAAAAIYA4AMGAAEABSEAAAAAhhhBBAYAAQANIQAAAACDGEEEBgABABUhAAAAAJMILQSZ
AAEAQSEAAAAAkwjIAJ4AAQBIIQAAAACTCNQAowABAFAhAAAAAJYIVgWpAAIAVyEAAAAAhhhBBAYA
AgBfIQAAAACRGEcErgACAAAAAQDmAgkAQQQBABEAQQQGABkAQQQKACkAQQQQADEAQQQQADkAQQQQ
AEEAQQQQAEkAQQQQAFEAQQQQAFkAQQQQAGEAQQQQAGkAQQQGAIEAQQQGAKkAQQQVALkAQQQGAHEA
MgUiAMEAEwUnAMkAuQMsANEA0gIyAIkADgM2ANkA7AI6ANkAFwM/ANkAFwNEANkASAVKANEA3AJS
AMEAYgUBAHEAQQQGAIkAQQQGAOEAiQBXAOEAcQVeAJEAQQRjALEAQQQGAAgAFAB8AAgAGACBACkA
cwDpAC4ACwDBAC4AEwDKAC4AGwDpAC4AIwDyAC4AKwAbAS4AMwAbAS4AOwAbAS4AQwDyAC4ASwAh
AS4AUwAbAS4AWwA4AUMAYwCBAEkAcwDpAGEAewCBAGMAawCBABsAAwABAAQAAwAAADEEsgAAAOgA
twAAAFoFvAACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAEQdb2oAAAAAAAAxAAAABAAA
AAAAAAAAAAAAagBVAAAAAAAOAAAAAAAAAAAAAABzACEDAAAAAAQAAAAAAAAAAAAAAGoAwgMAAAAA
DgAAAAAAAAAAAAAAcwAKAAAAAAAAAAAAAQAAAJIEAAAFAAIAAAAAPE1vZHVsZT4ATWljcm9zb2Z0
LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfYjAyNDJhMzUwYzlhNDYxNGEzNzhhNmYy
MDNkYzAzY2IAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlw
ZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFz
a0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUASW5kZXhPZgBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN1YnN0cmluZwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBT
Y3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYjAyNDJhMzUwYzlhNDYx
NGEzNzhhNmYyMDNkYzAzY2IuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNj
cmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVt
LlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTVF9iMDI0MmEzNTBjOWE0NjE0YTM3OGE2ZjIwM2RjMDNjYi5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYjAyNDJhMzUwYzlhNDYxNGEz
NzhhNmYyMDNkYzAzY2IuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MA
Z2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tS
ZXN1bHQAZ2V0X0Fzc2VtYmx5AAAAACVVAHMAZQByADoAOgB2AGEAcgBYAE0ATAB0AG8ASABUAE0A
TAAAMVUAcwBlAHIAOgA6AHYAYQByAFgATQBMAFQAZQBuAGQAZQByAFQAbwBIAFQATQBMAAAPPAB0
AGEAYgBsAGUAPgAADzwALwBiAG8AZAB5AD4AAIClPABiAHIALwA+ADwAYgByAC8APgA8AHAAIABz
AHQAeQBsAGUAPQAiAGYAbwBuAHQALQBzAGkAegBlADoAOAAiAD4APABiAD4AVABlAG4AZABlAHIA
IAB0AHkAcABlAHMAIAB1AHMAZQBkACAAaQBuACAAdAByAGEAbgBzAGEAYwB0AGkAbwBuADoAPAAv
AGIAPgA8AC8AcAA+ADwAYgByAC8APgABJ1UAcwBlAHIAOgA6AHYAYQByAEgAVABNAEwAcgBlAHMA
dQBsAHQAAHFTAFQAXwBiADAAMgA0ADIAYQAzADUAMABjADkAYQA0ADYAMQA0AGEAMwA3ADgAYQA2
AGYAMgAwADMAZABjADAAMwBjAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIA
YwBlAHMAAAAAx4AWUI3KvU2jUHqwvbZAYgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERUQYHBA4O
Dg4EIAASYQQgABJlBSABEmkcAyAAHAMgAA4EIAEIDgQgAQ4IBSACDggIBwAEDg4ODg4EIAEBHAYA
ARJxEXUEIAASeQYgAgEOEnkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQ
AgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2IwMjQyYTM1MGM5
YTQ2MTRhMzc4YTZmMjAzZGMwM2NiAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBG
cmFtZXdvcmsgNC41AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAaC8AAAAAAAAAAAAAgi8AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAHQvAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBvakQdAAABAG9qRB0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGIAMAAyADQAMgBhADMANQAwAGMAOQBhADQANgAxADQAYQAzADcAOABhADYAZgAy
ADAAMwBkAGMAMAAzAGMAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADQAOQAyAC4AMgA3ADIANAA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGIAMAAyADQAMgBhADMANQAwAGMAOQBhADQANgAxADQAYQAzADcAOABhADYAZgAyADAA
MwBkAGMAMAAzAGMAYgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYgAwADIANAAyAGEAMwA1ADAAYwA5AGEANAA2ADEANABhADMANwA4AGEA
NgBmADIAMAAzAGQAYwAwADMAYwBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGIAMAAyADQAMgBhADMANQAwAGMAOQBhADQANgAxADQAYQAzADcAOABhADYA
ZgAyADAAMwBkAGMAMAAzAGMAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA0ADkAMgAuADIANwAyADQANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA0ADkAMgAuADIANwAyADQANwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACUPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Reformat results in HTML"
          DTS:CreationName="Microsoft.XMLTask"
          DTS:Description="XML Task"
          DTS:DTSID="{f82d33c6-ccdb-42eb-b7b1-786fbc3297ad}"
          DTS:ExecutableType="Microsoft.XMLTask"
          DTS:LocaleID="-1"
          DTS:MaxErrorCount="0"
          DTS:ObjectName="Reformat results in HTML"
          DTS:TaskContact="XML Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <XMLTaskData
              OperationType="XSLT"
              SourceType="Variable"
              Source="User::varXMLData"
              SecondOperandType="FileConnection"
              SecondOperand="FranchiseWebRebate2.xsl"
              SaveOperationResult="True"
              DestinationType="Variable"
              Destination="User::varXMLtoHTML"
              OverwriteDestination="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Reformat Tender data into HTML table"
          DTS:CreationName="Microsoft.XMLTask"
          DTS:Description="XML Task"
          DTS:DTSID="{a842ae7f-1f72-4768-9aa7-eaad10e60f8d}"
          DTS:ExecutableType="Microsoft.XMLTask"
          DTS:LocaleID="-1"
          DTS:MaxErrorCount="0"
          DTS:ObjectName="Reformat Tender data into HTML table"
          DTS:TaskContact="XML Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <XMLTaskData
              OperationType="XSLT"
              SourceType="Variable"
              Source="User::varXMLTenderData"
              SecondOperandType="FileConnection"
              SecondOperand="tendertypes.xsl"
              SaveOperationResult="True"
              DestinationType="Variable"
              Destination="User::varXMLTenderToHTML"
              OverwriteDestination="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Remove &quot;ROOT&quot; tags"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{0289a78d-45ec-422d-9f98-0790cf082b31}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Remove &quot;ROOT&quot; tags"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_2e2105ea96fc428caec323e3c01b2d2f"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::varXMLTenderData">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_2e2105ea96fc428caec323e3c01b2d2f.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7D197C9C-A141-4A6D-9939-DA34A63D4A52}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_76b3e1af688a4affb9322c49b9d1158e</RootNamespace>
    <AssemblyName>ST_2e2105ea96fc428caec323e3c01b2d2f</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Docentric.Documents">
      <HintPath>\\VM-ARIES\S_Drive\John Nehme\Docentric\Toolkit\Example Browser\bin\Docentric.Documents.dll</HintPath>
    </Reference>
    <Reference Include="Docentric.Examples.Data">
      <HintPath>\\VM-ARIES\S_Drive\John Nehme\Docentric\Toolkit\Example Browser\bin\Docentric.Examples.Data.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="System.Xml.Linq">
      <Version>3.5.21022.801</Version>
    </PackageReference>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Settings.get_Default():ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Sett" +
    "ings")]

namespace ST_76b3e1af688a4affb9322c49b9d1158e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Docentric.Documents;
using Docentric.Documents.Reporting;
using System.Xml.Linq;
using System.Linq;
using System.Collections.Generic;


#endregion

namespace ST_76b3e1af688a4affb9322c49b9d1158e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.S
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{

            string tender = (string)Dts.Variables["User::varXMLTenderData"].Value;
            
            string t1 = tender.Replace("<ROOT>", "");
            string t2 = t1.Replace("</ROOT>", "");
            Dts.Variables["User::varXMLTenderData"].Value = t2;

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_2e2105ea96fc428caec323e3c01b2d2f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_2e2105ea96fc428caec323e3c01b2d2f</msb:DisplayName>
    <msb:ProjectId>{61A4E7D4-E0EC-4C58-9323-30433713F36B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_2e2105ea96fc428caec323e3c01b2d2f.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_76b3e1af688a4affb9322c49b9d1158e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_76b3e1af688a4affb9322c49b9d1158e")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_76b3e1af688a4affb9322c49b9d1158e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_2e2105ea96fc428caec323e3c01b2d2f.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKc4/V4AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAFi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMQtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAHA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD4
LQAAAAAAAEgAAAACAAUAHCEAAPALAAABAAAAAAAAAAwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwBaAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdBsAAAFyLwAAcHI9AABwbxQAAApyPwAAcHI9AABwbxQAAAoKAigQAAAKbxEAAApyAQAAcG8S
AAAKBm8VAAAKKh4CKBYAAAoqHgIoFwAACiqufgEAAAQtHnJPAABw0AMAAAIoGAAACm8ZAAAKcxoA
AAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigbAAAKKi5zCAAABoADAAAEKkJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMQDAAAjfgAAMAQAAIAFAAAjU3RyaW5n
cwAAAACwCQAAxAAAACNVUwB0CgAAEAAAACNHVUlEAAAAhAoAAGwBAAAjQmxvYgAAAAAAAAACAAAB
Vx2iAQkDAAAA+gEzABYAAAEAAAAeAAAABQAAAAYAAAAJAAAAAQAAABsAAAACAAAAEAAAAAEAAAAC
AAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAACpAwEAAAAAAAYALQJ5BAYAvAJ5BAYAeQFmBA8A
7QQAAAYApgEnBAYAEAInBAYA8QEnBAYAowInBAYATQInBAYAZgInBAYAvQEnBAYA2AEYAwoAgQJY
AwoA+ABYAwYA4QPaAwYAXAFmBAYAYAXaAwYASQSZBAYAOQQSBA4ALAGTAw4AjQGTAw4AFAH9AwYA
QQF5BAoAgQNYAxIALwWjABIAdgCjAAYAMgPaAwYAwwDaAwYAfwDaAwYAdwUnBAAAAAABAAAAAAAB
AAEAAQAQAPIDOgA5AAEAAQAAABAAoAT8BEUAAQADAAABEAA5BfwEWQADAAcAAwEAAFIFAAA9AAQA
CgARAOYDbQARAOgAcQARAGYAdQAGBikAeQBWgEIFfABWgMgAfABQIAAAAACGAPgDBgABALYgAAAA
AIYYWQQGAAEAviAAAAAAgxhZBAYAAQDGIAAAAACTCEUEgAABAPIgAAAAAJMI0ACFAAEA+SAAAAAA
kwjcAIoAAQABIQAAAACWCGcFkAACAAghAAAAAIYYWQQGAAIAECEAAAAAkRhfBJUAAgAAAAEA7gIJ
AFkEAQARAFkEBgAZAFkECgApAFkEEAAxAFkEEAA5AFkEEABBAFkEEABJAFkEEABRAFkEEABZAFkE
EABhAFkEEABpAFkEBgCBAFkEBgCpAFkEFQC5AFkEBgBxAEoFHwDBACsFJADJANEDKQDRANoCLwDZ
AF4AMwDRAOQCOQBxAFkEBgCJAFkEBgDhAJEAPgDhAHMFRQCRAFkESgCxAFkEBgAIABQAYwAIABgA
aAApAHMA0AAuAAsAqAAuABMAsQAuABsA0AAuACMA2QAuACsAAgEuADMAAgEuADsAAgEuAEMA2QAu
AEsACAEuAFMAAgEuAFsAHwFDAGMAaABJAHMA0ABhAHsAaABjAGsAaAAbAAMAAQAEAAMAAABJBJkA
AADwAJ4AAABrBaMAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAABAHeNQAAAAAAAA9AIA
AAQAAAAAAAAAAAAAAFEAMQAAAAAADgAAAAAAAAAAAAAAWgA5AwAAAAAEAAAAAAAAAAAAAABRANoD
AAAAAA4AAAAAAAAAAAAAAFoACgAAAAAAAAAAAAEAAACqBAAABQACAAAAAAAAPE1vZHVsZT4ATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU1RfNzZiM2UxYWY2
ODhhNGFmZmI5MzIyYzQ5YjlkMTE1OGUAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1
ZQBTVF8yZTIxMDVlYTk2ZmM0MjhjYWVjMzIzZTNjMDFiMmQyZgBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFN0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAU1RfMmUyMTA1ZWE5NmZjNDI4Y2FlYzMyM2UzYzAxYjJkMmYuZGxsAGdldF9J
dGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0
X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF83NmIzZTFhZjY4OGE0
YWZmYjkzMjJjNDliOWQxMTU4ZS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdn
aW5nTW9kZXMAU1RfNzZiM2UxYWY2ODhhNGFmZmI5MzIyYzQ5YjlkMTE1OGUuUHJvcGVydGllcwBn
ZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVj
dABnZXRfRGVmYXVsdABnZXRfQXNzZW1ibHkAAC1VAHMAZQByADoAOgB2AGEAcgBYAE0ATABUAGUA
bgBkAGUAcgBEAGEAdABhAAANPABSAE8ATwBUAD4AAAEADzwALwBSAE8ATwBUAD4AAHFTAFQAXwA3
ADYAYgAzAGUAMQBhAGYANgA4ADgAYQA0AGEAZgBmAGIAOQAzADIAMgBjADQAOQBiADkAZAAxADEA
NQA4AGUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAFjAfRUy
7ihAubXtr7y5mSUABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEDBwEOBCAAEmEEIAASZQUgARJp
HAMgABwFIAIODg4EIAEBHAYAARJxEXUEIAASeQYgAgEOEnkIt3pcVhk04IkIiYRdzYCAzJEEAAAA
AAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQI
ABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NUXzc2YjNlMWFmNjg4YTRhZmZiOTMyMmM0OWI5ZDExNThlAAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAOwtAAAAAAAAAAAA
AAYuAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4LQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDjUEAdAAABAONQQB0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADcANgBiADMAZQAxAGEAZgA2ADgAOABhADQAYQBmAGYAYgA5ADMAMgAyAGMANAA5
AGIAOQBkADEAMQA1ADgAZQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADQAOAA4AC4AMgAwADcAMAA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADIAZQAyADEAMAA1AGUAYQA5ADYAZgBjADQAMgA4AGMAYQBlAGMAMwAyADMAZQAzAGMA
MAAxAGIAMgBkADIAZgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AMgBlADIAMQAwADUAZQBhADkANgBmAGMANAAyADgAYwBhAGUAYwAzADIA
MwBlADMAYwAwADEAYgAyAGQAMgBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADcANgBiADMAZQAxAGEAZgA2ADgAOABhADQAYQBmAGYAYgA5ADMAMgAyAGMA
NAA5AGIAOQBkADEAMQA1ADgAZQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA0ADgAOAAuADIAMAA3ADAANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA0ADgAOAAuADIAMAA3ADAANwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAYPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Save resulting HTML output as PDF"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{7092979a-33cc-49f0-925a-eb69c43b55dd}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Save resulting HTML output as PDF"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_9c1b45e0f7f44cb2a21ae7a97b9bd78d"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::varExtDocNo,User::varHTMLresult">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Settings.get_Default():ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Sett" +
    "ings")]

namespace ST_9cc8d0f14b674405b27a55378d8433cf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using PdfSharp;
using PdfSharp.Charting;
using TheArtOfDev.HtmlRenderer;
using TheArtOfDev.HtmlRenderer.PdfSharp;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using PdfSharp.Pdf;
using System.Xml.Linq;
using System.Collections.Generic;
using System.Linq;
#endregion

namespace ST_9cc8d0f14b674405b27a55378d8433cf
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>


        static ScriptMain()
        {
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
        }
        static System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            //Set up a sting package paramter in the SSIS solution. Assign it to a readonly variable, use it to populate the string 'path'.
            //This will enable you to determine on the deployed solution where it needs to pickup the .dll's from, and can be separate from where the debug is picking them up from.
            string path = @"C:\TEMP\libraries\";
            if (args.Name.Contains("HtmlRenderer.PdfSharp"))
            { return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "HtmlRenderer.PdfSharp.dll")); }
            if (args.Name.Contains("HtmlRenderer"))
            {
                return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "HtmlRenderer.dll"));
            }
            if (args.Name.Contains("PdfSharp.Charting"))
            { return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "PdfSharp.Charting.dll")); }
            if (args.Name.Contains("PdfSharp"))
            { return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "PdfSharp.dll")); }

            return null;
        }

        public void Main()
        {
            string ExtDocNo = Dts.Variables["User::varExtDocNo"].Value.ToString();
            string varhtml = (string) Dts.Variables["User::varHTMLresult"].Value;
            var config = new PdfGenerateConfig();
            config.PageOrientation = PageOrientation.Landscape;
            config.PageSize = PageSize.A4;
            PdfDocument pdf = PdfGenerator.GeneratePdf(varhtml, config);
            pdf.Save(@"C:\FranchiseRebate\PDF\FranchiseOnlineSalesRebate_" + ExtDocNo+".pdf");
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_9c1b45e0f7f44cb2a21ae7a97b9bd78d.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F6F4DE24-F16A-4F74-8779-D3B33A0D952D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9cc8d0f14b674405b27a55378d8433cf</RootNamespace>
    <AssemblyName>ST_9c1b45e0f7f44cb2a21ae7a97b9bd78d</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="HtmlRenderer">
      <HintPath>C:\TEMP\libraries\HtmlRenderer.dll</HintPath>
    </Reference>
    <Reference Include="HtmlRenderer.PdfSharp">
      <HintPath>C:\TEMP\libraries\HtmlRenderer.PdfSharp.dll</HintPath>
    </Reference>
    <Reference Include="PdfSharp">
      <HintPath>C:\TEMP\libraries\PdfSharp.dll</HintPath>
    </Reference>
    <Reference Include="PdfSharp.Charting">
      <HintPath>C:\TEMP\libraries\PdfSharp.Charting.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Connected Services\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9c1b45e0f7f44cb2a21ae7a97b9bd78d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9c1b45e0f7f44cb2a21ae7a97b9bd78d</msb:DisplayName>
    <msb:ProjectId>{C6481DCA-01F8-49E4-B5C9-FB3C9ED591C5}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_9c1b45e0f7f44cb2a21ae7a97b9bd78d.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9cc8d0f14b674405b27a55378d8433cf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9cc8d0f14b674405b27a55378d8433cf")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9cc8d0f14b674405b27a55378d8433cf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9cc8d0f14b674405b27a55378d8433cf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_9c1b45e0f7f44cb2a21ae7a97b9bd78d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEKzAl8AAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAA4jMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJAzAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA6BMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADE
MwAAAAAAAEgAAAACAAUA+CEAAOAQAAABAAAAAAAAANgyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAF4oEAAAChT+BgIAAAZzEQAACm8SAAAKKhMwAgCUAAAAAQAA
EXIBAABwCgNvEwAACnInAABwbxQAAAosEQZyUwAAcCgVAAAKKBYAAAoqA28TAAAKcocAAHBvFAAA
CiwRBnKhAABwKBUAAAooFgAACioDbxMAAApywwAAcG8UAAAKLBEGcucAAHAoFQAACigWAAAKKgNv
EwAACnITAQBwbxQAAAosEQZyJQEAcCgVAAAKKBYAAAoqFCoTMAUAfgAAAAIAABECKBcAAApvGAAA
CnI/AQBwbxkAAApvGgAACm8bAAAKCgIoFwAACm8YAAAKcmMBAHBvGQAACm8aAAAKdB0AAAFzHAAA
CgsHF28dAAAKBxtvHgAACgcUFBQoHwAACnKLAQBwBnLxAQBwKCAAAApvIQAACgIoFwAAChZvIgAA
CioeAigjAAAKKh4CKCQAAAoqrn4BAAAELR5y+wEAcNADAAACKCUAAApvJgAACnMnAAAKgAEAAAR+
AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoKAAACioucwoAAAaAAwAABCpCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADEBAAAI34AADAFAABgBwAAI1N0cmluZ3MAAAAAkAwA
AHACAAAjVVMAAA8AABAAAAAjR1VJRAAAABAPAADQAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAA
APoBMwAWAAABAAAAKwAAAAUAAAAGAAAACwAAAAMAAAAoAAAAAgAAABAAAAACAAAAAgAAAAMAAAAE
AAAAAQAAAAcAAAABAAAAAQAAAAAAZgQBAAAAAAAGAH4CvQUGAA0DvQUGAMoBqgUPADEGAAAGAPcB
FAUGAGECFAUGAEICFAUGAPQCFAUGAJ4CFAUGALcCFAUGAA4CFAUGACkCzgMKANICFQQKAEkBFQQG
AFYHFAUGACQHlwQGAOAGlwQOALwDMgUGAJ4ElwQGAK0BqgUGAF8F3QUGACYF/wQSAH0BUAQSAN4B
UAQSAGUB1gQGAJIBvQUGALoElwQGAG8FlwQGAOoDlwQGAPEDGQAKAD4EFQQWAJoGzgAWAI8AzgAa
AO8ESwUaAHYDSwUOAJAFMgUaAEYHowMeAEoA+wAGAAEAlwQeAMQGQAYeAK0GQAYGAPYAlwQGAJgA
lwQAAAAAEAAAAAAAAQABAAEAAACvBH8DOQABAAEAAAAQAOQFZwZBAAEABQAAARAApAZnBmUAAwAJ
AAMBAAAPBwAATQAEAAwAEQCjBMwAEQA5AdAAEQB/ANQABgZCANgAVoD/BtsAVoAZAdsAUCAAAAAA
kRijBd8AAQBoIAAAAACRAFQD4wABAAghAAAAAIYAtQQGAAMAkiEAAAAAhhidBQYAAwCaIQAAAACD
GJ0FBgADAKIhAAAAAJMIWwXrAAMAziEAAAAAkwghAfAAAwDVIQAAAACTCC0B9QADAN0hAAAAAJYI
Kwf7AAQA5CEAAAAAhhidBQYABADsIQAAAACRGKMF3wAEAAAAAQBUBQAAAgDxBgAAAQA1AwkAnQUB
ABEAnQUGABkAnQUKACkAnQUQADEAnQUQADkAnQUQAEEAnQUQAEkAnQUQAFEAnQUQAFkAnQUQAGEA
nQUQAGkAnQUGAKEAnQUGAMEAnQUVANEAnQUGANkAxAQbAOEAnQUgANkAQAMmAIkAxQAwAOkA9gY0
APEA7gA5AHkAvAA/AHEABwdLAPkAlgZQAAEBjgRWAAkBKwNdAIEA6AMwAJEAnQUGAJEA6wRhAJEA
cgNoACEBsANvAOkAHQeLACkBOwMQAPkANwcBAHEAnQUGAIEAnQUGAFEBqgCSAFEBUgebAKkAnQWg
AMkAnQUGAAgAFADCAAgAGADHACkAcwA3AS4ACwAPAS4AEwAYAS4AGwA3AS4AIwBAAS4AKwBpAS4A
MwBpAS4AOwBpAS4AQwBAAS4ASwBvAS4AUwBpAS4AWwCGAUMAYwDHAEkAcwA3AWEAewDHAGMAawDH
ACwARQADAAEABAADAAAAXwUAAQAAQQEFAQAALwcKAQIABgADAAIABwAFAAEACAAFAAIACQAHAASA
AAABAAAARB0xawAAAAAAAFsAAAAEAAAAAAAAAAAAAACnAFIAAAAAAA4AAAAAAAAAAAAAALAA9gMA
AAAAAQAFAAAABgAAAAAAAAA+BQAAAAAEAAAAAAAAAAAAAACnAJcEAAAAAA4AAAAAAAAAAAAAALAA
IwAAAAAAAQAgAPELAAAAAAAAuQBLBQAAAAABAAUAAAAFAAAAAAAAAIMFAAAAAAAAAAABAAAA7gUA
AAUAAgAAAABFdmVudEhhbmRsZXJgMQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AQ3NzRGF0YQBtc2NvcmxpYgBTVF85YzFiNDVlMGY3ZjQ0
Y2IyYTIxYWU3YTk3YjliZDc4ZABkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATG9hZEZpbGUAZ2V0X05hbWUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZQBDb21iaW5lAFR5cGUAVGhlQXJ0T2ZEZXYuSHRtbFJlbmRlcmVyLkNv
cmUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJU
U2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRh
c2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU2F2ZQBhZGRfQXNzZW1ibHlSZXNv
bHZlAEN1cnJlbnREb21haW5fQXNzZW1ibHlSZXNvbHZlAHNldF9QYWdlU2l6ZQBTVF85Y2M4ZDBm
MTRiNjc0NDA1YjI3YTU1Mzc4ZDg0MzNjZgBQZGZTaGFycC5QZGYAR2VuZXJhdGVQZGYAUGRmR2Vu
ZXJhdGVDb25maWcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF85YzFi
NDVlMGY3ZjQ0Y2IyYTIxYWU3YTk3YjliZDc4ZC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBBcHBEb21haW4AZ2V0X0N1cnJlbnREb21haW4AU3lzdGVtLkNv
bmZpZ3VyYXRpb24Ac2V0X1BhZ2VPcmllbnRhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBUaGVBcnRPZkRldi5IdG1sUmVuZGVyZXIuUGRmU2hh
cnAAc2VuZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAUmVzb2x2ZUV2ZW50SGFuZGxlcgBIdG1sUmVu
ZGVyZXIAUGRmR2VuZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzljYzhkMGYxNGI2
NzQ0MDViMjdhNTUzNzhkODQzM2NmLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBUaGVBcnRPZkRldi5IdG1sUmVuZGVyZXIuQ29yZS5FbnRpdGllcwBTVF85Y2M4
ZDBmMTRiNjc0NDA1YjI3YTU1Mzc4ZDg0MzNjZi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0
dGluZ3MASHRtbEltYWdlTG9hZEV2ZW50QXJncwBIdG1sU3R5bGVzaGVldExvYWRFdmVudEFyZ3MA
UmVzb2x2ZUV2ZW50QXJncwBhcmdzAENvbnRhaW5zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1
bHRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAUGRmRG9jdW1lbnQA
Z2V0X0Fzc2VtYmx5AAAAJUMAOgBcAFQARQBNAFAAXABsAGkAYgByAGEAcgBpAGUAcwBcAAArSAB0
AG0AbABSAGUAbgBkAGUAcgBlAHIALgBQAGQAZgBTAGgAYQByAHAAADNIAHQAbQBsAFIAZQBuAGQA
ZQByAGUAcgAuAFAAZABmAFMAaABhAHIAcAAuAGQAbABsAAAZSAB0AG0AbABSAGUAbgBkAGUAcgBl
AHIAACFIAHQAbQBsAFIAZQBuAGQAZQByAGUAcgAuAGQAbABsAAAjUABkAGYAUwBoAGEAcgBwAC4A
QwBoAGEAcgB0AGkAbgBnAAArUABkAGYAUwBoAGEAcgBwAC4AQwBoAGEAcgB0AGkAbgBnAC4AZABs
AGwAABFQAGQAZgBTAGgAYQByAHAAABlQAGQAZgBTAGgAYQByAHAALgBkAGwAbAAAI1UAcwBlAHIA
OgA6AHYAYQByAEUAeAB0AEQAbwBjAE4AbwAAJ1UAcwBlAHIAOgA6AHYAYQByAEgAVABNAEwAcgBl
AHMAdQBsAHQAAGVDADoAXABGAHIAYQBuAGMAaABpAHMAZQBSAGUAYgBhAHQAZQBcAFAARABGAFwA
RgByAGEAbgBjAGgAaQBzAGUATwBuAGwAaQBuAGUAUwBhAGwAZQBzAFIAZQBiAGEAdABlAF8AAAku
AHAAZABmAABxUwBUAF8AOQBjAGMAOABkADAAZgAxADQAYgA2ADcANAA0ADAANQBiADIANwBhADUA
NQAzADcAOABkADgANAAzADMAYwBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAAAAAACusbEMJ+YoQqsY6qqscTZbAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdBAAA
Em0FIAIBHBgFIAEBEnEDBwEOAyAADgQgAQIOBQACDg4OBQABEj0OBQcCDhJJBCAAEn0FIAASgIEG
IAESgIUcAyAAHAYgAQERgIkGIAEBEYCNGwAFEoCVDhJJEoCZFRKAnQESgKEVEoCdARKApQYAAw4O
Dg4IAAESgKkRgK0EIAASPQYgAgEOEj0It3pcVhk04IkIiYRdzYCAzJEI+UYVqgQk+esEAAAAAAQB
AAAAAwYSVQMGElkDBhIQAgYIAwYRFAMAAAEHAAISPRwSRQQAABJVBAAAElkFAAEBElkEAAASEAQI
ABJVBAgAElkECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQAC
AAAAAAAoAQAjU1RfOWNjOGQwZjE0YjY3NDQwNWIyN2E1NTM3OGQ4NDMzY2YAAAUBAAAAABYBABFD
b3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjW0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAuDMAAAAAAAAA
AAAA0jMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQzAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAMWtEHQAAAQAxa0QdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA5AGMAYwA4AGQAMABmADEANABiADYANwA0ADQAMAA1AGIAMgA3AGEANQA1ADMANwA4
AGQAOAA0ADMAMwBjAGYAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwA0ADkAMgAuADIANwA0ADQAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwA5AGMAMQBiADQANQBlADAAZgA3AGYANAA0AGMAYgAyAGEAMgAxAGEAZQA3AGEAOQA3AGIA
OQBiAGQANwA4AGQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADkAYwAxAGIANAA1AGUAMABmADcAZgA0ADQAYwBiADIAYQAyADEAYQBlADcA
YQA5ADcAYgA5AGIAZAA3ADgAZAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA5AGMAYwA4AGQAMABmADEANABiADYANwA0ADQAMAA1AGIAMgA3AGEANQA1ADMA
NwA4AGQAOAA0ADMAMwBjAGYAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcANAA5ADIALgAyADcANAA0ADEAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANAA5ADIALgAyADcANAA0ADEAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA5DMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{8f597c5e-e707-4951-a553-d06a3092b4d1}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_68d0de944c66430a8c7c923a24b7806b"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::varExtDocNo,User::varXMLData">
              <ProjectItem
                Name="ST_68d0de944c66430a8c7c923a24b7806b.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7D197C9C-A141-4A6D-9939-DA34A63D4A52}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_76b3e1af688a4affb9322c49b9d1158e</RootNamespace>
    <AssemblyName>ST_68d0de944c66430a8c7c923a24b7806b</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Docentric.Documents">
      <HintPath>\\VM-ARIES\S_Drive\John Nehme\Docentric\Toolkit\Example Browser\bin\Docentric.Documents.dll</HintPath>
    </Reference>
    <Reference Include="Docentric.Examples.Data">
      <HintPath>\\VM-ARIES\S_Drive\John Nehme\Docentric\Toolkit\Example Browser\bin\Docentric.Examples.Data.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="System.Xml.Linq">
      <Version>3.5.21022.801</Version>
    </PackageReference>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Settings.get_Default():ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Sett" +
    "ings")]

namespace ST_76b3e1af688a4affb9322c49b9d1158e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Docentric.Documents;
using Docentric.Documents.Reporting;
using System.Xml.Linq;
using System.Linq;
using System.Collections.Generic;


#endregion

namespace ST_76b3e1af688a4affb9322c49b9d1158e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.S
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{

            string s = (string)Dts.Variables["User::varXMLData"].Value;
            
            string s1 = s.Replace("<ROOT>", "");
            string s2 = s1.Replace("</ROOT>", "");
            Dts.Variables["User::varXMLData"].Value = s2;

            XElement rebatedata = XElement.Parse(s2);
            List<XElement> tnodes = rebatedata.Elements("t").ToList();
            string ExtDocNo = tnodes[0].Element("ExternalDocumentNo").Value.ToString();

            Dts.Variables["User::varExtDocNo"].Value = ExtDocNo;

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_68d0de944c66430a8c7c923a24b7806b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_68d0de944c66430a8c7c923a24b7806b</msb:DisplayName>
    <msb:ProjectId>{5E448A09-9632-4519-A83C-AAC65E6A6318}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_68d0de944c66430a8c7c923a24b7806b.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_76b3e1af688a4affb9322c49b9d1158e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_76b3e1af688a4affb9322c49b9d1158e")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_76b3e1af688a4affb9322c49b9d1158e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_76b3e1af688a4affb9322c49b9d1158e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_68d0de944c66430a8c7c923a24b7806b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAL5E/V4AAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAIjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANAvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAKBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAE
MAAAAAAAAEgAAAACAAUAdCEAAKQNAAABAAAAAAAAABgvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwCvAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdBsAAAFyIwAAcHIxAABwbxQAAApyMwAAcHIxAABwbxQAAAoKAigQAAAKbxEAAApyAQAAcG8S
AAAKBm8VAAAKBigWAAAKckMAAHAoFwAACm8YAAAKKAEAACsWbxoAAApyRwAAcCgXAAAKbxsAAApv
HAAACm8dAAAKCwIoEAAACm8RAAAKcm0AAHBvEgAACgdvFQAACioeAigeAAAKKh4CKB8AAAoqrn4B
AAAELR5ykQAAcNADAAACKCAAAApvIQAACnMiAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoa
fgMAAAQqHgIoIwAACioucwgAAAaAAwAABCoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAABMBAAAI34AALgEAAAkBgAAI1N0cmluZ3MAAAAA3AoAAAQBAAAjVVMA4AsAABAAAAAj
R1VJRAAAAPALAAC0AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPoBMwAWAAABAAAAJAAAAAUA
AAAGAAAACQAAAAEAAAAjAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAEAAAAGAAAAAQAA
AAEAAAABAAAAAAD+AwEAAAAAAAYApAL1BAYAMwP1BAYA8AHiBA8AaQUAAAYAHQJ8BAYAhwJ8BAYA
aAJ8BAYAGgN8BAYAxAJ8BAYA3QJ8BAYANAJ8BAYATwJrAwoA+AKtAwoAaQGtAwYANgQvBAYA0wHi
BAYA5QUvBAYAugQVBQYAjgRnBA4AowHoAw4ABALoAw4AhQFSBAYAuAH1BAoA1gOtAxIAqwUIARIA
ygAIAQYAhwMvBBYABAaaBBYAAgGaBBYAygSaBAYAAQBzABoA0wCqBAYADwBzAAYAKAEvBAYA3gAv
BAYAGAZ8BAAAAAAWAAAAAAABAAEAAQAQAEcEjgA5AAEAAQAAABAAHAV4BUUAAQADAAABEAC1BXgF
WQADAAcAAwEAAM4FAAA9AAQACgARADsEuAARAFkBvAARALoAwAAGBj4AxABWgL4FxwBWgDkBxwBQ
IAAAAACGAE0EBgABAAshAAAAAIYY1QQGAAEAEyEAAAAAgxjVBAYAAQAbIQAAAACTCLYEywABAEch
AAAAAJMIQQHQAAEATiEAAAAAkwhNAdUAAQBWIQAAAACWCPgF2wACAF0hAAAAAIYY1QQGAAIAZSEA
AAAAkRjbBOAAAgAAAAEAZQMJANUEAQARANUEBgAZANUECgApANUEEAAxANUEEAA5ANUEEABBANUE
EABJANUEEABRANUEEABZANUEEABhANUEEABpANUEBgCBANUEBgCpANUEFQC5ANUEBgBxAMYFIADB
AKcFJQDJACYEKgDRAFEDMADZALIANADRAFsDOgDhAJ0BPwDpAOwFRQDxANwFSwABAQ0GVgAMACYE
dADxAAUGegDhAFEDgQCJAIUDgQBxANUEBgCJANUEBgARAfAAhQARARQGjgCRANUElACxANUEBgAI
ABQArgAIABgAswApAHMAGwEuAAsA8wAuABMA/AAuABsAGwEuACMAJAEuACsATQEuADMATQEuADsA
TQEuAEMAJAEuAEsAUwEuAFMATQEuAFsAagFDAGMAswBJAHMAGwFhAHsAswBjAGsAswAbAAMAAQAE
AAMAAAC6BOQAAABhAekAAAD8Be4AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAbAAEgAAAAQAAAEAd
71YAAAAAAABGAAAABAAAAAAAAAAAAAAAnABqAAAAAAAOAAAAAAAAAAAAAAClAI4DAAAAAAQAAAAA
AAAAAAAAAJwALwQAAAAADgAAAAAAAAAAAAAApQAfAAAAAAAEAAAAAAAAAAAAAACcAJoEAAAAAAQA
AAAAAAAAAAAAAJwALQEAAAAAAAAAAAEAAAAmBQAABQACADMAZwAAAABJRW51bWVyYWJsZWAxAExp
c3RgMQA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTVF82
OGQwZGU5NDRjNjY0MzBhOGM3YzkyM2EyNGI3ODA2YgBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlv
bnMuR2VuZXJpYwBTVF83NmIzZTFhZjY4OGE0YWZmYjkzMjJjNDliOWQxMTU4ZQBSZXBsYWNlAGRl
ZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBFbnVtZXJhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAFhOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBT
eXN0ZW0uQ29yZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVy
ZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUGFy
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3Jp
cHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNjhkMGRlOTQ0YzY2NDMwYThj
N2M5MjNhMjRiNzgwNmIuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24AQ3VsdHVyZUluZm8AU3lzdGVtLlhtbC5MaW5xAFN5c3RlbS5MaW5xAGdldF9SZXNv
dXJjZU1hbmFnZXIAWENvbnRhaW5lcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF83NmIzZTFh
ZjY4OGE0YWZmYjkzMjJjNDliOWQxMTU4ZS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
RGVidWdnaW5nTW9kZXMAU1RfNzZiM2UxYWY2ODhhNGFmZmI5MzIyYzQ5YjlkMTE1OGUuUHJvcGVy
dGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRz
AEVsZW1lbnRzAE9iamVjdABvcF9JbXBsaWNpdABnZXRfRGVmYXVsdABYRWxlbWVudABUb0xpc3QA
Z2V0X0Fzc2VtYmx5AAAAAAAhVQBzAGUAcgA6ADoAdgBhAHIAWABNAEwARABhAHQAYQAADTwAUgBP
AE8AVAA+AAABAA88AC8AUgBPAE8AVAA+AAADdAAAJUUAeAB0AGUAcgBuAGEAbABEAG8AYwB1AG0A
ZQBuAHQATgBvAAAjVQBzAGUAcgA6ADoAdgBhAHIARQB4AHQARABvAGMATgBvAABxUwBUAF8ANwA2
AGIAMwBlADEAYQBmADYAOAA4AGEANABhAGYAZgBiADkAMwAyADIAYwA0ADkAYgA5AGQAMQAxADUA
OABlAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAGlXwt1MjoEO3
e8F0D9sUvgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERUQQHAg4OBCAAEmEEIAASZQUgARJpHAMg
ABwFIAIODg4EIAEBHAUAARJxDgUAARJ1DgogARUSfQEScRJ1EBABARUSgIUBHgAVEn0BHgAECgES
cQcVEoCFARJxBSABEwAIBiABEnESdQMgAA4IAAESgIkRgI0FIAASgJEHIAIBDhKAkQi3elxWGTTg
iQiJhF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQA
ABIQAwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU1RfNzZiM2UxYWY2ODhhNGFmZmI5MzIyYzQ5YjlkMTE1OGUAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjW0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
+C8AAAAAAAAAAAAAEjAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQwAAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAO9WQB0AAAEA71ZAHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANwA2AGIAMwBlADEAYQBmADYAOAA4AGEANABhAGYAZgBiADkAMwAyADIAYwA0ADkA
YgA5AGQAMQAxADUAOABlAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcANAA4ADgALgAyADIAMgA1ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8ANgA4AGQAMABkAGUAOQA0ADQAYwA2ADYANAAzADAAYQA4AGMANwBjADkAMgAzAGEAMgA0
AGIANwA4ADAANgBiAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwA2ADgAZAAwAGQAZQA5ADQANABjADYANgA0ADMAMABhADgAYwA3AGMAOQAy
ADMAYQAyADQAYgA3ADgAMAA2AGIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8ANwA2AGIAMwBlADEAYQBmADYAOAA4AGEANABhAGYAZgBiADkAMwAyADIAYwA0
ADkAYgA5AGQAMQAxADUAOABlAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADQAOAA4AC4AMgAyADIANQA1AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADQAOAA4AC4AMgAyADIANQA1AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACQwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Send Email to Franchisee"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{663238b8-2d6c-4c26-9342-380f0976c919}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Send Email to Franchisee"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_97d9a939bfa14a2d9c43c50eeab95904"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::varExtDocNo,User::varXMLData">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Settings.get_Default():ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Sett" +
    "ings")]

namespace ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_97d9a939bfa14a2d9c43c50eeab95904.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EB20FC4E-CE8B-4F01-B558-F02EE38B24C0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4d8b20ee55cd4cd0b1af16fea8841408</RootNamespace>
    <AssemblyName>ST_97d9a939bfa14a2d9c43c50eeab95904</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Net;
using System.Xml.Linq;
using System.Collections.Generic;
using System.Linq;
using System.Text;
#endregion

namespace ST_4d8b20ee55cd4cd0b1af16fea8841408
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string filename = (string)Dts.Variables["User::varXMLData"].Value;

            XElement rebatedata = XElement.Parse(filename);
            List<XElement> tnodes = rebatedata.Elements("t").ToList();

            string ExtDocNo = Dts.Variables["User::varExtDocNo"].Value.ToString();

            string FranchiseeEmail = tnodes[0].Element("FranchiseeEmail").Value.ToString();

            string htmlMessageFrom = "no-reply@bbqgalore.com.au";
            //string htmlMessageTo = "john.nehme@bbqgalore.com.au";
            string htmlMessageTo = FranchiseeEmail;
            //   string htmlMessageTo = source.Replace(",", ";");
            string htmlMessageSubject = string.Concat("Franchise Rebate for Online Sales (UPDATE!) - ",ExtDocNo);

            string htmlMessageBody = "This email is auto-generated and details the report for the Franchise Online Sales rebate which applies to External Document No.: " + ExtDocNo + ".<br /><br />If you have any questions about this or any other web rebate, please do not reply to this email, but rather, please contact your FBM.<br /><br />Regards,<br /><br />Franchise Online Sales Rebate Calculator";
            string smtpServer = "192.168.1.71";
            string pathToAttachment = @"C:\FranchiseRebate\PDF\FranchiseOnlineSalesRebate_" + ExtDocNo + ".pdf";

            SendMailMessage(htmlMessageFrom, htmlMessageTo, htmlMessageSubject, htmlMessageBody, true, smtpServer, pathToAttachment);

            Dts.TaskResult = (int)ScriptResults.Success;

        }

        private void SendMailMessage(string From, string SendTo, string Subject, string Body, bool IsBodyHtml, string Server, string pathToAtt)
        {

            MailMessage htmlMessage;
            SmtpClient mySmtpClient;
           
            htmlMessage = new MailMessage(From, SendTo, Subject, Body);
            htmlMessage.IsBodyHtml = IsBodyHtml;
            htmlMessage.Attachments.Add(new Attachment(pathToAtt));
            MailAddress bcc1 = new MailAddress("john.nehme@bbqgalore.com.au");
            MailAddress bcc2 = new MailAddress("scot.barker@bbqgalore.com.au");
            MailAddress bcc3 = new MailAddress("Biju.Maharjan@bbqgalore.com.au");
            htmlMessage.Bcc.Add(bcc1);
            htmlMessage.Bcc.Add(bcc2);
            htmlMessage.Bcc.Add(bcc3);

            mySmtpClient = new SmtpClient(Server);
            mySmtpClient.Credentials = CredentialCache.DefaultNetworkCredentials;
            mySmtpClient.Send(htmlMessage);

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_97d9a939bfa14a2d9c43c50eeab95904</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_97d9a939bfa14a2d9c43c50eeab95904</msb:DisplayName>
    <msb:ProjectId>{581151C8-4A6E-452B-845B-18E2889152A8}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_97d9a939bfa14a2d9c43c50eeab95904.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4d8b20ee55cd4cd0b1af16fea8841408")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4d8b20ee55cd4cd0b1af16fea8841408")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4d8b20ee55cd4cd0b1af16fea8841408.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_97d9a939bfa14a2d9c43c50eeab95904.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK3WA18AAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAyjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHg3AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA0BcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACs
NwAAAAAAAEgAAAACAAUAKCIAAJgUAAABAAAAAAAAAMA2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwCADSAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdB0AAAEoFAAACnIjAABwKBUAAApvFgAACigBAAArAigQAAAKbxEAAApyJwAAcG8SAAAKbxMA
AApvGAAACgoWbxkAAApySwAAcCgVAAAKbxoAAApvGwAACm8YAAAKcmsAAHALDHKfAABwBigcAAAK
DXL9AABwBnIEAgBwKB0AAAoTBHK7AwBwEwVy1QMAcAZyOwQAcCgdAAAKEwYCBwgJEQQXEQURBigC
AAAGAigQAAAKFm8eAAAKKgAAEzAEAIMAAAACAAARAwQFDgRzHwAACgoGDgVvIAAACgZvIQAACg4H
cyIAAApvIwAACnJFBABwcyQAAAoLcn0EAHBzJAAACgxytwQAcHMkAAAKDQZvJQAACgdvJgAACgZv
JQAACghvJgAACgZvJQAACglvJgAACg4GcycAAAolKCgAAApvKQAACgZvKgAACioeAigrAAAKKh4C
KCwAAAoqrn4BAAAELR5y9QQAcNADAAACKC0AAApvLgAACnMvAAAKgAEAAAR+AQAABCoafgIAAAQq
HgKAAgAABCoafgMAAAQqHgIoMAAACioucwkAAAaAAwAABCoAAABCU0pCAQABAAAAAAAMAAAAdjQu
MC4zMDMxOQAAAAAFAGwAAAAUBQAAI34AAIAFAACIBwAAI1N0cmluZ3MAAAAACA0AAGgFAAAjVVMA
cBIAABAAAAAjR1VJRAAAAIASAAAYAgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPoBMwAWAAAB
AAAALgAAAAUAAAAGAAAACgAAAAgAAAAwAAAAAgAAABAAAAACAAAAAgAAAAMAAAAEAAAAAwAAAAEA
AAAGAAAAAQAAAAEAAAABAAAAAABrBAEAAAAAAAYA2gKvBQYAaQOvBQYAJgKcBQ8AIwYAAAYAUwL9
BAYAvQL9BAYAngL9BAYAUAP9BAYA+gL9BAYAEwP9BAYAagL9BAYAhQKXAwoALgPZAwoAnwHZAw4A
5ABbBA4ArgZbBAYAtwSrBAYACQKcBQYA8AarBAYAbQXPBQYAQQXoBA4A2QFFBA4AOgJFBA4AuwHT
BAYA7gGvBQoAMwTZAxIAZQY+ARIAAAE+AQYAswOrBBYAPAdNBRYAOAFNBRYAfQVNBQYAAQCsABoA
CQFdBQYAHACsAA4AJQVbBA4ARQdbBAYADwAUBA4ADwVbBA4AMQdbBA4A8AD/Bg4AAgT/Bg4AVwf/
BgYAXgGrBAYAFAGrBAYAfQf9BAAAAABrAAAAAAABAAEAAQAQAMgERwA5AAEAAQAAABAA1gUyBk0A
AQAEAAABEABvBjIGYQADAAgAAwEAAMIGAABFAAQACwARALwEDwERAI8BEwERANAAFwEGBpMAGwFW
gKYGHgFWgG8BHgFQIAAAAACGAM4EBgABADAhAAAAAIEA4AAiAQEAvyEAAAAAhhiPBQYACADHIQAA
AACDGI8FBgAIAM8hAAAAAJMIaQUtAQgA+yEAAAAAkwh3ATIBCAACIgAAAACTCIMBNwEIAAoiAAAA
AJYIFgc9AQkAESIAAAAAhhiPBQYACQAZIgAAAACRGJUFQgEJAAAAAQCyBAAAAgA6BQAAAwD3BgAA
BAB0BwAABQCXBAAABgCIBQAABwBqBwAAAQCRAwkAjwUBABEAjwUGABkAjwUKACkAjwUQADEAjwUQ
ADkAjwUQAEEAjwUQAEkAjwUQAFEAjwUQAFkAjwUQAGEAjwUQAGkAjwUGAJEAjwUGALkAjwUVAMkA
jwUGAHEAugYlANEAYQYqANkAogQvAOEAhwM1APEA0wE5APkACgc/AAEB0AZFABEBUAdRAJkAsQNo
AAwAogR0AAEBPQd6APEAhwNoAOkA6QaBAOkA6QaHANEAIgcBAHkAjwWZAHkAkwShAHkA2QamACkB
jwUQABQAxwC1AIEAjwUQAHkApAC7ABwAxwC1AEEBjwUQAEkBiAbJAEEBeAbPAEEBywDWAHEAjwUG
AJkAjwUGAGEBJgHcAGEBeQflAKEAjwXrAMEAjwUGAAgAFAAFAQgAGAAKASkAcwB9AS4ACwBVAS4A
EwBeAS4AGwB9AS4AIwCGAS4AKwCvAS4AMwCvAS4AOwCvAS4AQwCGAS4ASwC1AS4AUwCvAS4AWwDM
AUMAYwAKAUkAcwB9AWEAewAKAWMAawAKARsAjgADAAEABAADAAAAbQVGAQAAlwFLAQAAGgdQAQIA
BQADAAIABgAFAAEABwAFAAIACAAHAGwArADBAASAAAABAAAARR0mVAAAAAAAACMAAAAEAAAAAAAA
AAAAAADzAJsAAAAAAA4AAAAAAAAAAAAAAPwAugMAAAAABAAAAAAAAAAAAAAA8wCrBAAAAAAOAAAA
AAAAAAAAAAD8AHQAAAAAAAQAAAAAAAAAAAAAAPMATQUAAAAABAAAAAAAAAAAAAAA8wBjAQAAAAAA
AAAAAQAAAOAFAAAFAAIALwBjAAAAAElFbnVtZXJhYmxlYDEAQ29sbGVjdGlvbmAxAExpc3RgMQBT
VF85N2Q5YTkzOWJmYTE0YTJkOWM0M2M1MGVlYWI5NTkwNABTVF80ZDhiMjBlZTU1Y2Q0Y2QwYjFh
ZjE2ZmVhODg0MTQwOAA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFs
dWVfXwBtc2NvcmxpYgBnZXRfQmNjAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAEFkZABTZW5k
AGRlZmF1bHRJbnN0YW5jZQBTZW5kTWFpbE1lc3NhZ2UAQ3JlZGVudGlhbENhY2hlAFZhcmlhYmxl
AEVudW1lcmFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAWE5hbWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBQYXJzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9T
dHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sATmV0d29ya0NyZWRlbnRpYWwAU3lzdGVtLkNvbGxlY3Rpb25z
Lk9iamVjdE1vZGVsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0
ZW0uTmV0Lk1haWwAU1RfOTdkOWE5MzliZmExNGEyZDljNDNjNTBlZWFiOTU5MDQuZGxsAHNldF9J
c0JvZHlIdG1sAGdldF9JdGVtAFN5c3RlbQBGcm9tAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFp
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24AQXR0YWNobWVudENvbGxlY3Rpb24AU2VuZFRvAEN1
bHR1cmVJbmZvAFN5c3RlbS5YbWwuTGlucQBTeXN0ZW0uTGlucQBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AFhDb250YWluZXIAU2VydmVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzRkOGIyMGVlNTVj
ZDRjZDBiMWFmMTZmZWE4ODQxNDA4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF80ZDhiMjBlZTU1Y2Q0Y2QwYjFhZjE2ZmVhODg0MTQwOC5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAc2V0X0NyZWRlbnRpYWxzAGdldF9EZWZhdWx0TmV0d29y
a0NyZWRlbnRpYWxzAFN1Y2Nlc3MATWFpbEFkZHJlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEVs
ZW1lbnRzAGdldF9BdHRhY2htZW50cwBDb25jYXQAT2JqZWN0AFN1YmplY3QAU3lzdGVtLk5ldABv
cF9JbXBsaWNpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AFhFbGVtZW50
AEF0dGFjaG1lbnQAVG9MaXN0AElDcmVkZW50aWFsc0J5SG9zdABwYXRoVG9BdHQAQm9keQBnZXRf
QXNzZW1ibHkAAAAAIVUAcwBlAHIAOgA6AHYAYQByAFgATQBMAEQAYQB0AGEAAAN0AAAjVQBzAGUA
cgA6ADoAdgBhAHIARQB4AHQARABvAGMATgBvAAAfRgByAGEAbgBjAGgAaQBzAGUAZQBFAG0AYQBp
AGwAADNuAG8ALQByAGUAcABsAHkAQABiAGIAcQBnAGEAbABvAHIAZQAuAGMAbwBtAC4AYQB1AAFd
RgByAGEAbgBjAGgAaQBzAGUAIABSAGUAYgBhAHQAZQAgAGYAbwByACAATwBuAGwAaQBuAGUAIABT
AGEAbABlAHMAIAAoAFUAUABEAEEAVABFACEAKQAgAC0AIAABgQVUAGgAaQBzACAAZQBtAGEAaQBs
ACAAaQBzACAAYQB1AHQAbwAtAGcAZQBuAGUAcgBhAHQAZQBkACAAYQBuAGQAIABkAGUAdABhAGkA
bABzACAAdABoAGUAIAByAGUAcABvAHIAdAAgAGYAbwByACAAdABoAGUAIABGAHIAYQBuAGMAaABp
AHMAZQAgAE8AbgBsAGkAbgBlACAAUwBhAGwAZQBzACAAcgBlAGIAYQB0AGUAIAB3AGgAaQBjAGgA
IABhAHAAcABsAGkAZQBzACAAdABvACAARQB4AHQAZQByAG4AYQBsACAARABvAGMAdQBtAGUAbgB0
ACAATgBvAC4AOgAgAAGBtS4APABiAHIAIAAvAD4APABiAHIAIAAvAD4ASQBmACAAeQBvAHUAIABo
AGEAdgBlACAAYQBuAHkAIABxAHUAZQBzAHQAaQBvAG4AcwAgAGEAYgBvAHUAdAAgAHQAaABpAHMA
IABvAHIAIABhAG4AeQAgAG8AdABoAGUAcgAgAHcAZQBiACAAcgBlAGIAYQB0AGUALAAgAHAAbABl
AGEAcwBlACAAZABvACAAbgBvAHQAIAByAGUAcABsAHkAIAB0AG8AIAB0AGgAaQBzACAAZQBtAGEA
aQBsACwAIABiAHUAdAAgAHIAYQB0AGgAZQByACwAIABwAGwAZQBhAHMAZQAgAGMAbwBuAHQAYQBj
AHQAIAB5AG8AdQByACAARgBCAE0ALgA8AGIAcgAgAC8APgA8AGIAcgAgAC8APgBSAGUAZwBhAHIA
ZABzACwAPABiAHIAIAAvAD4APABiAHIAIAAvAD4ARgByAGEAbgBjAGgAaQBzAGUAIABPAG4AbABp
AG4AZQAgAFMAYQBsAGUAcwAgAFIAZQBiAGEAdABlACAAQwBhAGwAYwB1AGwAYQB0AG8AcgAAGTEA
OQAyAC4AMQA2ADgALgAxAC4ANwAxAABlQwA6AFwARgByAGEAbgBjAGgAaQBzAGUAUgBlAGIAYQB0
AGUAXABQAEQARgBcAEYAcgBhAG4AYwBoAGkAcwBlAE8AbgBsAGkAbgBlAFMAYQBsAGUAcwBSAGUA
YgBhAHQAZQBfAAAJLgBwAGQAZgAAN2oAbwBoAG4ALgBuAGUAaABtAGUAQABiAGIAcQBnAGEAbABv
AHIAZQAuAGMAbwBtAC4AYQB1AAA5cwBjAG8AdAAuAGIAYQByAGsAZQByAEAAYgBiAHEAZwBhAGwA
bwByAGUALgBjAG8AbQAuAGEAdQAAPUIAaQBqAHUALgBNAGEAaABhAHIAagBhAG4AQABiAGIAcQBn
AGEAbABvAHIAZQAuAGMAbwBtAC4AYQB1AABxUwBUAF8ANABkADgAYgAyADAAZQBlADUANQBjAGQA
NABjAGQAMABiADEAYQBmADEANgBmAGUAYQA4ADgANAAxADQAMAA4AC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAkGeSkf6KIE2k4RBZqMp+AwAEIAEBCAMgAAEFIAEB
EREEIAEBDgUgAQERWQkHBw4ODg4ODg4EIAASaQQgABJtBSABEnEcAyAAHAUAARJ5DgUAARJ9Dgsg
ARUSgIUBEnkSfREQAQEVEoCNAR4AFRKAhQEeAAQKARJ5AyAADgcVEoCNARJ5BSABEwAIBiABEnkS
fQUAAg4ODgYAAw4ODg4KBwQSPRJBEkESQQcgBAEODg4OBCABAQIFIAASgJEIFRKAmQESgJUFIAEB
EwAFIAASgJ0HFRKAmQESQQUAABKAqQYgAQESgK0FIAEBEj0IAAESgLERgLUFIAASgLkHIAIBDhKA
uQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJRAwYSVQMGEhACBggDBhEUCiAHAQ4ODg4C
Dg4EAAASUQQAABJVBQABARJVBAAAEhADAAABBAgAElEECAASVQQIABIQCAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF80ZDhiMjBlZTU1Y2Q0Y2Qw
YjFhZjE2ZmVhODg0MTQwOAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3
b3JrIDQuNQAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAKA3AAAAAAAAAAAAALo3AAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAACsNwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABACZURR0AAAEAJlRFHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8ANABkADgAYgAyADAAZQBlADUANQBjAGQANABjAGQAMABiADEAYQBmADEANgBmAGUAYQA4
ADgANAAxADQAMAA4AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcA
NAA5ADMALgAyADEANQA0ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AOQA3AGQAOQBhADkAMwA5AGIAZgBhADEANABhADIAZAA5AGMANAAzAGMANQAwAGUAZQBhAGIA
OQA1ADkAMAA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwA5ADcAZAA5AGEAOQAzADkAYgBmAGEAMQA0AGEAMgBkADkAYwA0ADMAYwA1ADAA
ZQBlAGEAYgA5ADUAOQAwADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8ANABkADgAYgAyADAAZQBlADUANQBjAGQANABjAGQAMABiADEAYQBmADEANgBmAGUA
YQA4ADgANAAxADQAMAA4AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA3ADQAOQAzAC4AMgAxADUANAAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA3ADQAOQAzAC4AMgAxADUANAAyAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAMw3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Update 'paid' to 'sent' in FranchiseRebate table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3558efb7-9e04-4c48-8706-7600f04263fe}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update 'paid' to 'sent' in FranchiseRebate table"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"update [Nav_Processes].[Reports].[FranchiseRebate] set [Status] = 'sent' where [ExternalDocumentNo]='" + @[User::varExtDocNo] + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
              SQLTask:SqlStatementSource="update [Nav_Processes].[Reports].[FranchiseRebate] set [Status] = 'sent' where [ExternalDocumentNo]='0'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D9264E8A-5E21-4AAA-B50A-D0CF9BDC6DE8}"
          DTS:From="Package\Foreach Loop Container\Get the Paid PSIs to create report and save as PDF"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Script Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{35C1739B-5FD4-41DE-A354-56AB445D28C6}"
          DTS:From="Package\Foreach Loop Container\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Reformat results in HTML" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 10]"
          DTS:CreationName=""
          DTS:DTSID="{58AECFEB-0C45-44E0-BA6D-F6656AB16BA1}"
          DTS:From="Package\Foreach Loop Container\Save resulting HTML output as PDF"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 10"
          DTS:To="Package\Foreach Loop Container\Send Email to Franchisee" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 11]"
          DTS:CreationName=""
          DTS:DTSID="{D26F2668-9AF1-4218-AA6A-EA50D21E0A47}"
          DTS:From="Package\Foreach Loop Container\Send Email to Franchisee"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 11"
          DTS:To="Package\Foreach Loop Container\Update 'paid' to 'sent' in FranchiseRebate table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{9B7ED0AA-BC42-48C6-826F-8F7BA057EEFB}"
          DTS:From="Package\Foreach Loop Container\Remove &quot;ROOT&quot; tags"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach Loop Container\Reformat Tender data into HTML table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{1D0BC6AD-47AE-429F-83B5-5EFFDE4051BC}"
          DTS:From="Package\Foreach Loop Container\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Foreach Loop Container\Get Web_ebay_Order_Tender_Import data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{D7DCE9DF-4321-4E12-9E3D-D0540CB11394}"
          DTS:From="Package\Foreach Loop Container\Get Web_ebay_Order_Tender_Import data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Foreach Loop Container\Remove &quot;ROOT&quot; tags" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{AFEEE0A7-419F-46DC-A080-847A6634CD60}"
          DTS:From="Package\Foreach Loop Container\Reformat Tender data into HTML table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Foreach Loop Container\Merge the two HTML code outputs" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{58E38708-F69A-4AC8-8D48-7B956D770A5A}"
          DTS:From="Package\Foreach Loop Container\Merge the two HTML code outputs"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\Foreach Loop Container\Save resulting HTML output as PDF" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{DEC7F4F3-98CC-4968-B045-7AE8C4332C0B}"
          DTS:ObjectName="{DEC7F4F3-98CC-4968-B045-7AE8C4332C0B}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::varExtDocNoSelector" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get rowcount of all 'paid'"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{9ff68864-c719-4f0d-aaf9-9245d91320ef}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get rowcount of all 'paid'"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="select  count(distinct(r.[No_])) as rowct&#xA;from [Nav_Processes].[Reports].[FranchiseRebate] r&#xA;where r.[Status]='paid'&#xA;"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::RowNo" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update &quot;Paid&quot; on new rebates"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Update all rebates to status = 'paid' if they have been paid"
      DTS:DTSID="{3f248413-2498-4e15-841d-ed68441acaba}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update &quot;Paid&quot; on new rebates"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AD9ED96B-797D-4145-84A0-CBFF62F2729D}"
          SQLTask:SqlStatementSource="update [Nav_Processes].[Reports].[FranchiseRebate] set [Status]='paid'&#xA;where[ExternalDocumentNo] in (&#xA;select x.[extDocNo]&#xA;  from (&#xA;    select h.[No_],h.[External Document No_],l.[Description],l.[Shortcut Dimension 2 Code]&#xA;      ,len(trim(left(substring(l.[Description], patindex('%[0-9.-]%', l.[Description]), 8000),patindex('%[^0-9.-]%', substring(l.[Description], patindex('%[0-9.-]%', l.[Description]), 8000) + 'X') -1))) as length9or13&#xA;      ,cast(left(substring(l.[Description], patindex('%[0-9.-]%', l.[Description]), 8000),patindex('%[^0-9.-]%', substring(l.[Description], patindex('%[0-9.-]%', l.[Description]), 8000) + 'X') -1) as float) as extDocNo&#xA;      ,l.Amount&#xA;    from [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Sales Cr_Memo Header] h&#xA;    left&#xA;    join [BBQG_Prod_Replica].[dbo].[Barbeques Galore$Sales Cr_Memo Line] l&#xA;    on  h.[No_]=l.[Document No_]&#xA;    where (h.[External Document No_] like ('WEB %') or l.[Description] like ('%WEB%') or (l.[Type]=1 and l.[No_]='71030' and l.[Shortcut Dimension 2 Code]&lt;&gt;'008'))&#xA;    and  l.[Type]=1&#xA;    and  l.[No_] in ('71030','71020')&#xA;    group by h.[No_],h.[External Document No_],l.[Description],l.[Shortcut Dimension 2 Code],l.[Amount]&#xA;    ) x&#xA;&#xA;  left&#xA;  join (select distinct(f.[ExternalDocumentNo]) from [Nav_Processes].[Reports].[FranchiseRebate] f where [Status]='new') f&#xA;  on  f.[ExternalDocumentNo]=x.extDocNo&#xA;  where f.[ExternalDocumentNo] is not null&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{31038E5B-B9CD-4528-A4A5-EB3E8A354A1D}"
      DTS:From="Package\Get rowcount of all 'paid'"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Execute SQL Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{80CA71A1-027B-47F5-9D8F-CBAA91FDCB5C}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{90c91a79-b694-4b5c-bb29-f384f0ecd9b3}"
      DTS:From="Package\Update &quot;Paid&quot; on new rebates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Get rowcount of all 'paid'" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{C08D1560-9316-48DC-A438-F51EF685D3CE}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{70D99408-26E5-4BFD-91EF-EAC1BB83707F}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Execute SQL Task"
          TopLeft="453.428579150414,221.152944278058" />
        <NodeLayout
          Size="318.4,41.6"
          Id="Package\Foreach Loop Container\Get the Paid PSIs to create report and save as PDF"
          TopLeft="119.180971494986,9.44313859906572" />
        <NodeLayout
          Size="198.4,41.6"
          Id="Package\Foreach Loop Container\Reformat results in HTML"
          TopLeft="31.4095316740925,203.631376874654" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container\Script Task"
          TopLeft="215.790487195034,81.1764731964857" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="279.68572934501,51.0431385990657">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.13333459742"
              Start="0,0"
              End="0,22.63333459742">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.63333459742" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="260.590487195034,122.776473196486">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-129.980955520942,80.8549036781684"
              Start="0,0"
              End="-129.980955520942,73.3549036781684">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.9299971343813" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.9299971343813"
                    Point2="0,32.9299971343813"
                    Point3="-4,32.9299971343813" />
                  <mssgle:LineSegment
                    End="-125.980955520942,32.9299971343813" />
                  <mssgle:CubicBezierSegment
                    Point1="-125.980955520942,32.9299971343813"
                    Point2="-129.980955520942,32.9299971343813"
                    Point3="-129.980955520942,36.9299971343813" />
                  <mssgle:LineSegment
                    End="-129.980955520942,73.3549036781684" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="280.8,41.6"
          Id="Package\Foreach Loop Container\Get Web_ebay_Order_Tender_Import data"
          TopLeft="345.104772495738,207.184316485316" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="301.390487195034,122.776473196486">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="184.114285300703,84.4078432888304"
              Start="0,0"
              End="184.114285300703,76.9078432888304">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.3770125394509" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.3770125394509"
                    Point2="0,34.3770125394509"
                    Point3="4,34.3770125394509" />
                  <mssgle:LineSegment
                    End="180.114285300703,34.3770125394509" />
                  <mssgle:CubicBezierSegment
                    Point1="180.114285300703,34.3770125394509"
                    Point2="184.114285300703,34.3770125394509"
                    Point3="184.114285300703,38.3770125394509" />
                  <mssgle:LineSegment
                    End="184.114285300703,76.9078432888304" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\Foreach Loop Container\Remove &quot;ROOT&quot; tags"
          TopLeft="396.533344800132,284.972553618364" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="485.819058647935,248.784316485316">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.1882371330483"
              Start="0,0"
              End="0,28.6882371330483">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.6882371330483" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="260,41.6"
          Id="Package\Foreach Loop Container\Reformat Tender data into HTML table"
          TopLeft="356.533344118936,352.831375780733" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="486.333344459534,326.572553618365">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.2588221623683"
              Start="0,0"
              End="0,18.7588221623683">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.7588221623683" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="241.6,41.6"
          Id="Package\Foreach Loop Container\Merge the two HTML code outputs"
          TopLeft="358.628582249855,428.564711836713" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 8]"
          TopLeft="482.980963184396,394.431375780733">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.13333605598"
              Start="0,0"
              End="0,26.63333605598">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.63333605598" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="244.8,41.6"
          Id="Package\Foreach Loop Container\Save resulting HTML output as PDF"
          TopLeft="363.200010899136,513.647063816955" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 9]"
          TopLeft="482.514296574496,470.164711836713">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.4823519802423"
              Start="0,0"
              End="0,35.9823519802423">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.9823519802423" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="196.8,41.6"
          Id="Package\Foreach Loop Container\Send Email to Franchisee"
          TopLeft="382.628582658573,596.847063233531" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 10]"
          TopLeft="483.314296778854,555.247063816955">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.5999994165759"
              Start="0,0"
              End="0,34.0999994165759">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.0999994165759" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="299.2,41.6"
          Id="Package\Foreach Loop Container\Update 'paid' to 'sent' in FranchiseRebate table"
          TopLeft="334.628581841138,686.352950768652" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 11]"
          TopLeft="482.628582249855,638.447063233531">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47.9058875351218"
              Start="0,0"
              End="0,40.4058875351218">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.4058875351218" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="761.6,783.2"
          Size="761.6,826.4"
          Id="Package\Foreach Loop Container"
          TopLeft="154.571431203765,320.070592443671" />
        <NodeLayout
          Size="196,41.6"
          Id="Package\Get rowcount of all 'paid'"
          TopLeft="434.85715026271,120.007844820319" />
        <NodeLayout
          Size="220,41.6"
          Id="Package\Update &quot;Paid&quot; on new rebates"
          TopLeft="426.380959642171,29.0588239369508" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="533.742864706562,161.607844820319">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.5450994577385"
              Start="0,0"
              End="0,52.0450994577385">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.0450994577385" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="535.00000517709,262.752944278058">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.3176481656132"
              Start="0,0"
              End="0,49.8176481656132">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.8176481656132" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="534.61905495244,70.6588239369508">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.3490208833684"
              Start="0,0"
              End="0,41.8490208833684">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.8490208833684" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>